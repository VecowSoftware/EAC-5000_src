diff --git a/NileCAM21_CUOAGX/Makefile b/NileCAM21_CUOAGX/Makefile
new file mode 100644
index 0000000..005125b
--- /dev/null
+++ b/NileCAM21_CUOAGX/Makefile
@@ -0,0 +1,9 @@
+ifneq (,$(filter $(CONFIG_VIDEO_ECAM),y m))
+	ccflags-y += -Wno-unused-variable -I$(srctree)/drivers/media/platform/tegra/ -I$(srctree)/../nvidia/include/
+	obj-m	+=  ar0233.o
+	ar0233-objs :=  ar0233_common.o serdes.o pca9685.o 
+endif
+ar0233:
+	make -C $(KERNEL_PATH) M=$(PWD) modules
+clean:
+	make -C $(KERNEL_PATH) M=$(PWD) clean
diff --git a/NileCAM21_CUOAGX/NileCAM21_CUOAGX.bin b/NileCAM21_CUOAGX/NileCAM21_CUOAGX.bin
new file mode 100644
index 0000000..00735d4
--- /dev/null
+++ b/NileCAM21_CUOAGX/NileCAM21_CUOAGX.bin
@@ -0,0 +1,1553 @@
+":020000040800F2\n"
+":40040000702800204D050008813E0008132D0008000000000000000000000000000000000000000000000000000000000D41000800000000000000000B0500088142000862\n"
+":40044000A14900085F0500085F050008E10D00085F0500085F0500085F0500089D0D0008000000005F0500085F0500085F0500085F0500085F0500085F0500087143000882\n"
+":40048000814300085F0500085F050008000000005F050008392D00085F050008152D00085F050008FD4000085F0500085F050008914900085F050008000000000000000031\n"
+":4004C0000348854600F04AFB004800476992000870280020084B19680868203080F30988022080F31488BFF36F8F3FBCAE4608BC04BC62B6184700000C000020EFF3108066\n"
+":4005000072B6704780F310887047EFF309800E4B1A6820381060F0C044464D4656465F46F0C008B572B609F0D1FE62B60CBC116808681030F0C8A046A946B246BB4680F39F\n"
+":4005400009882038F0C818470C0000200448804704480047FEE7FEE7FEE7FEE7FEE7FEE71D430008C104000830B50B46014600202022012409E00D46D5409D4205D31D46A7\n"
+":400580009540491B2546954040191546521E002DF1DC30BD70B500242546002801DA01244042002901DA01254942FFF7DDFFAC4200D04042002C00D0494270BDF0B51FB466\n"
+":4005C0000646002082B005464024019100901BE0019922460F46304600F00EFA049A059B801A994110D310461946224600F0F4F9361A8F410197224601200021009F00F04C\n"
+":40060000EBF938184D4100902046641E0028DFDC019B00982946324607B0F0BD03460B439B0703D009E008C9121F08C0042AFAD203E00B780370401C491C521EF9D27047D9\n"
+":40064000D2B201E00270401C491EFBD270470022F6E710B513460A4604461946FFF7F0FF204610BD0321001D401E037812021A43491EF9D510467047F8B502464A40D40FFF\n"
+":4006800042004B0052085B089A4202D20246084611464A0023D0C30D4A00DDB2120EAD1A202D35DA49020126490AF6058A19002C00D0524220214F1B1146B9402A411018A9\n"
+":4006C000C20D9A4221D0002C17D0012D08DCDA05801AD20F8019D207DBB200F0A6F9F8BDDA05801A012340001B06C01880185A428018CA0F1043490007E04908C207114330\n"
+":40070000DA05801A80194008801800F086F9F8BD61000122511A001BF7E70122D2075140AAE70122D2075040A6E7024670B54A40D30FDB0740002DD04A002AD0010E140E17\n"
+":40074000000212020919400A520A8418E50104465443000A120A2E045043A4194219200CC543AA18120C0125AD03521C521912047F39240400D0521C104301D44000491E6F\n"
+":40078000C2B20C06C0092018401C4008802A02D003E0002070BD40084000002900DA0020184370BD70B502464A40D50F40004A00ED0740085208002814D0002A12D0C40D4B\n"
+":4007C000D30D41020120C0055202490A520AE41A091812187D34914201D3641C00E04900002C01DA002070BD0023914201D3891A0343400849000028F7D100290AD0914245\n"
+":4008000002D10121C90705E0914201D2012101E00121C943E005C018401900F0FEF870BDF0B51FB488B00B990998002448400999C00F490049080991C0070B990090490084\n"
+":4008400049080B9109990898A64608431CD00B990A98084318D0099801244000420D4800410D099824050003000B204309900B980003000B20430B9050181C4940180022F8\n"
+":4008800001901446104605E0002001460DB0F0BD032801DA034600E003239C46C11A0AAE0AE05F0008ADED5B4F00F75B7D430027AA187C41491C5B1E6145F2DD410004ABE7\n"
+":4008C0005A522104120C0A43240C401C0828DFDB019802900099704601910090059B049A0799069800F0E7F8D0E700000DFCFFFFC217C10F504010B54018CA0796230021A0\n"
+":4009000000F093F810BD10B500229623114600F08CF810BD0EB505490291002100910A460B46019100F0C7F803B000BD33040000C20F410040020123400ADB05D207090EC6\n"
+":40094000C0187F2901DA00207047962903DC9623591AC84001E096398840002AF4D040427047410040020122400AD205090E80187F2901DA00207047962903DC9622511A43\n"
+":40098000C8407047963988407047CB0FDB07490010B5490802460A4307D00A0D07240903E401090B121B002A01DC002010BDC900440F0C43C100E018D205801800F02DF893\n"
+":4009C00010BD00000122D207002800DB101A002900DB511A8142704710B5202A04DB0146203A9140002010BD914020239C1A0346E3401943904010BD10B5202A04DB084660\n"
+":400A0000203AD040002110BD0B46D340D0402024A21A91400843194610BD002904DA401C490001D140084000704770B40024050C05D11024000402D1002921D01124050E49\n"
+":400A400001D100020834050F01D10001241D850F01D18000A41C002801DB4000641C002908D020252E1B0D46F540A14000D001212943084301061B1B000ADB1D02D50020FD\n"
+":400A800070BC7047DB05181880180029F8DA401C4900F5D170BC40084000704710B5002B08DA0024401C614192185B411A4301D14008400010BDF0B51FB482B005460C001B\n"
+":400AC00003D0084603F084FF02E003F081FF20300246009021462846FFF77EFF049B059A04460F4618431143084314D0184610431BD0009840210A1A18460599FFF77CFFB9\n"
+":400B000005460E46009A05990498FFF765FF084305D0012004E02046394607B0F0BD0020C11705430E432C43374300990E986305401A7905E40A00220C43FD0A0A3002D50A\n"
+":400B400000200146E9E70105101969410C9C0D9D00196941FFF7A2FFDFE70000064C0125064E05E0E36807CC2B430C3C98471034B442F7D3FFF7A8FC78AE000898AE000875\n"
+":400B800010B5364CE069000267D4A069C007FCD16368334A334934A003F00AFF6068C00704D03C48E0603C48E06005E02C4A2D49921D3AA003F0FCFE6368294A29490A3219\n"
+":400BC00041A003F0F5FEA069C007FCD16368244A2449143224A003F0EBFE6068C00704D0292252011F4944A00BE06068400704D54A4860614A48606105E0194A19491C3247\n"
+":400C000048A003F0D5FE6368154A164922322EA003F0CEFE4E49042003F064F9104A114926324CA003F0C4FEE2690120C005E16902434DA003F0BCFE094A0A49283245A0A5\n"
+":400C400003F0B6FE60680121890408436060044A04492C323FA003F0ABFE10BD0020024001050000E7AB0008202D2D2D2025732825642920464C4153482D3E50454352208C\n"
+":400C80003D2030782530387820202D2D2D200A0D00000000EFCDAB8905040302202D2D2D202573282564292050454B45595220556E6C6F636B656420416C726561647920AE\n"
+":400CC0002D2D2D200A0D0000202D2D2D20257328256429204E6F772C20464C4153482D3E50454352203D20307825303878202D2D2D200A0D00000000202D2D2D20257328CB\n"
+":400D00002564292050454C4F434B204C6F636B6564202D2D2D200A0D00000000C8D9EAFB27262524202D2D2D20257328256429204F50544C4F434B20416C72656164792040\n"
+":400D4000556E6C6F636B6564202D2D2D200A0D00F0800000202D2D2D20257328256429202D2D2D200A0D00002056616C20416674657220556E6C6F636B204F7074696F6E5F\n"
+":400D8000204279746573202E2E2E2030782530387820307825303878200A0D0010B50120800200F0FBF910BD04A003F001FE7D24E400204608F00CFBFBE7000020556E72C1\n"
+":400DC00065636F76657261626C65204572726F72204F636375726564202121200A0D000010B500F02DF910BD10B5084900224A6107494B684C1523434B604B6808242343EE\n"
+":400E00004B60C009C001026010BD0000AC0000200020024010B5214A00219069C305204804D54169022319434161911593699B0505D543690124234343616302194393694C\n"
+":400E40005B0505D54369082423434361E301194393691B0505D543690424234343616302194393699B0405D543691024234343616302194393699B0304D5446920231C439F\n"
+":400E8000446119439369DB0305D54369402423434361A0020143916110BD000000200240AC00002008B517A003F082FD00F042F91C484168421511434160416808221143FF\n"
+":400EC00041600021130619608169C907FCD18169890714D50221816141684122D2009143416018680090104A104911A003F060FD1EA003F05DFD00F011F902F0E5FFFFF7C7\n"
+":400F000053FF000020466C6173682045726173652042414E4B31205374617274202121200A0D000000200240BB040000C8AB0008202D2D2D20204166746572202573282593\n"
+":400F400064292041742041646472657373203078253038782056616C7565203D20307825303878202D2D2D200A0D000020466C6173682045726173652042414E4B31205339\n"
+":400F8000756363657373202121200A0D0000000070B50024024620325179022903D00421C16301243CE001680B680E25AB430B6001680B685B085B000B601A4B01689942C7\n"
+":400FC00001D1012121E0174B1433994201D110211BE0144B2833994201D1891515E0114B3C33994201D189140FE00E4B5033994202D10121090408E00A4B6433994202D141\n"
+":401000000121090501E001210906064B083B59600121517100211171816B002900D08847204670BD0800024031B500F08FF9044600F08CF90099001B8842F9D338BD7047F6\n"
+":40104000F8B5344CA0690026C005334D002811DBA06980050ED4A06940050BD4A069000508D4A069800405D4A069800302D4A069C00309D5287801282BD0AF68FFF7CAFE29\n"
+":40108000384600F055F82E70A069800712D50220A061287800280DD0287801281ED06068082188436060A868FFF7C9FF0020C043A8602E70287800280AD160684121C90038\n"
+":4010C00088436060606803210904884360602E74F8BDEF680020C043E860CFE76868401E6860686800280DD0E868FFF7A8FFE8688030E86061680122520291436160FFF747\n"
+":4011000073FED7E70020C043E8602E70FFF797FFD0E7000000200240AC0000200348416802221143416000207047000000200240704700000948416889070CD54168C90725\n"
+":4011400003D00749C1600749C16007490161074901610020704701207047000000200240EFCDAB8905040302BFAE9D8C1615141310B501218902884204D1034A034904A011\n"
+":4011800003F016FC10BD000027040000B1AB00082025732028256429200A0D0010B504494A69024202D04861FFF7E2FF10BD000000040140F8B500230124A7E027469F40B0\n"
+":4011C0003A4070D04D68022D01D0122D14D1DD08AD002D1800952D6A5E07AC46F50E0F26AE46AE406546B543AC460E697546AE4065462E43009D2E624D68012D05D0022D03\n"
+":4012000003D0112D01D0122D16D185680326AC465D00AE46AE406546B543AC46CE687546AE4065462E43866046680D79BE43ED06ED0F9D403543456006685F000325BD40D9\n"
+":40124000AE46AE430D79B446AE07B60FBE4065462E430660C6687546AE438D68BD403543C5604D68ED0050D52B4D6E6B26436E639E082A4DB6007519AC46AD689E07360F02\n"
+":401280000F27B740BD4305273F07B84201D100271AE0234FB84201D1012715E0214FB84202D1022710E030E01F4FB84201D103270AE01E4FB84201D1042705E01C4FB842E5\n"
+":4012C00001D1052700E00627B7402F436546AF60184D2E684F689643FF0300D516432E606E684F689643BF0300D516436E60AE684F689643FF0200D51643AE60EE684F6863\n"
+":401300009643BF0200D51643EE605B1C0A681546DD4000D052E7F8BD00100240000001400004005000080050000C005000100050001C00500004014042694A40426170473D\n"
+":40134000002A01D0816170478162704701480068704700000400002070B5024640325378202B1CD11378012B19D00123137024245470046825689D432560046825681E0306\n"
+":40138000B5432560046825680D4325600068016819430160202050700020107070BD022070BD70B5024640325378202B1BD11378012B18D0012414702423537003681D6815\n"
+":4013C000A5431D6005682B680F263602B3430902194329600068016821430160202050700020107070BD022070BD000010B5034A034904A003F0DCFA10BD000021040000C6\n"
+":4014000097AB00082025732028256429200A0D0010B5034A034904A003F0CAFA10BD00000D04000033AB00082025732028256429200A0D0070B503689A691968D40507D54A\n"
+":401440000C0605D5446C01252C4344642C02DC61530508D50B0606D5436C082423434364E3010468E361920508D5090606D5416C02221143416411020268D161416C0B22DA\n"
+":40148000114202D0416C01F02DFD70BD026891691268436B002B00D01847704770B5054600681449144C884213D1284600F054F80346124A124913A003F07AFA607804286A\n"
+":4014C00003D0A07860700420A07002F0E1FD002068641849286888420BD1284600F03CF8064A03460F32064913A003F061FA0320207070BD0054004060000020F603000001\n"
+":401500001DAB000820257328256429202D2048414C5F4932435F4572726F7243616C6C6261636B20202D20307825303878200A0D0000000000780040202573202825642999\n"
+":4015400020457272436F6465203D20307825303878200A0D00000000406C704770B5040006D02546403568780026002802D005E0012070BD2E70204600F06EF9242068705A\n"
+":40158000206801684908490001600F216068090688432168086121688A680120C00382438A60E1680129A16808D021229202114322689160E168022902D005E00143F7E726\n"
+":4015C00001212268C902516021684A680F4B1A434A602168CA688243CA60616920690843A169090208432168C860216AE0690843216808602068016801221143016066642B\n"
+":40160000202068702663AE70002070BD0080000210B5034A034904A003F0CAF910BD00001204000048AB00082025732028256429200A0D0000680649884205D10548017880\n"
+":40164000092902D00321017070470B21FBE70000007800409000002000680649884205D105480178052902D00321017070470721FBE700000078004090000020F8B50546D1\n"
+":40168000044640356878202830D120688069C04300042BD52878012828D001202870222068701020A87000266664626263851048E06210486063608DFF2804D9FF20012369\n"
+":4016C00020851B0603E0608D012320855B06092080020090208DC2B2204601F09BFF2E700221204601F07EFB0020F8BD0220F8BD0000FFFF65330008FFB505460446403544\n"
+":40170000687881B020287ED1287801287BD001202870FFF71BFE0746012200901923D103204601F089FF00283FD1212068701020A870002666640398606204986085666306\n"
+":40174000618D01204003FF2903D9FF222285009034E0618D2185009036E02046029901F059FF36E001F0B3FF002803D0606C042847D01AE0606A411C616201782068816298\n"
+":40178000608D401E6085208D401E0004000C20851FD1608D00281CD000970022802120460A9B01F049FF002802D0032005B0F0BD608DFF2805D9FF222285009601231B0696\n"
+":4017C000CBE7608D20850096208D0123C2B25B06C3E7608D0A9900283A462046C2D101F04FFF0028C2D121682020C86121684A68064B1A404A606870AE702E700020D5E7A2\n"
+":4018000001E00120D2E70220D0E7000000E800FE10B5034A034904A003F0CAF810BD00001C0400007DAB00082025732028256429200A0D0010B5034A034904A003F0B8F8CC\n"
+":4018400010BD00001704000063AB00082025732028256429200A0D00F0B5234A0168122403200125214E85B0914215D1C02100910021029103900194049569461C48FFF73A\n"
+":4018800099FCB06B69050843B06300220321172000F058F9172022E0164A914221D189156A4632C20320072781C2052069460007FFF780FC1020694631C103200390694637\n"
+":4018C00004970B48FFF776FCB06B012189070843B06300220321152000F034F9152000F027F905B0F0BD00000054004000100240000400500078004038B500680D498842C1\n"
+":4019000013D10D4CA3780A2B10D0A08900900B4A0B490C4803F04CF86078042803D0A07860700420A07002F0B3FB38BD63700C20A07038BD0054004060000020D3030000D7\n"
+":4019400001AB0008FCAB000838B500680E49884214D10E4CA378062B11D0A089ED22009092000B490B4803F023F86078042803D0A07860700420A07002F08AFB38BD6370E1\n"
+":401980000820A07038BD00000054004060000020E5AA000864AC0008F8B5034640335C78202C1ED11C78012C1BD001241C7022245C7020249C700024446405686E680127C9\n"
+":4019C000FF03BE436E6041624285418D01850649C162064941631C701F2101F003FA0020F8BD0220F8BD00000000FFFFF5340008F8B5034640335C78202C1ED11C78012C25\n"
+":401A00001BD001241C7021245C7020249C700024446405686E680127FF03BE436E6041624285418D01850649C162064941631C70172101F0D7F90020F8BD0220F8BD00004D\n"
+":401A40000000FFFFF534000802480168491C0160704700000400002010B506480168402211430160002000F007F800F03DF8002010BD00000020024000B5014687B0002278\n"
+":401A8000102000F05FF8102000F052F81148816B02221143816305A9684600F071FA00F095FA0D49FEF760FD0D490C4A0A600D4A401ECA604860002008618860084600F07A\n"
+":401AC000EBFD002802D0012007B000BD044800F0FEFDF9E70010024040420F0000040040E0180020E703000010B51048416B012211434163816B02041143816300221146A8\n"
+":401B0000501F00F01FF803210022481F00F01AF803210022081F00F015F803210022084600F010F8032000F003F810BD00100240C106C90E0120884001490860704700006D\n"
+":401B400000E100E010B502F09DF910BDF8B54E49074601250020ED034A4B4B4A4031082F7BD00EDC012F48D0022F60D0042F22D1CC680326B602344065D07F02BC424ED092\n"
+":401B800064E0102F77D00126032436042404202F09D0FF3F012F0ED1C968214053D07400A1423CD06BE00B6909692140B14203D199052EE02846F8BD01256D04A94203D1A0\n"
+":401BC0009907F8D53148F8BDA142FCD111688903F9D5116803200005014001200005091A09D0091A05D0814201D12948F8BD2948F8BD2948F8BD2948F8BDCC68A407A40F0C\n"
+":401C00000AD0022C0BD0012C0ED0032CF4D1096989050029CEDBF8BD00F0E8F9F8BD11684907FBD51846F8BD00F0F0F9F8BDCC680C26344007D0082CF1D0042CF4D00C2CA9\n"
+":401C4000E5D0F8BD09E000F0C1F9FAE7012292029442E9D0B442DAD0F3E7C968032424032140F0D001256D036C10A942D7D0A142DAD0E6E7FFE7916B4902E4D4E1E7B14288\n"
+":401C8000D2D0DEE70024F400001002408890000020A1070000093D0040420F0080841E00F8B504460078594D800672D5574E0027403EB06BC00004D4B06BA9050843B06374\n"
+":401CC000012753480168C90511D40168821511430160FFF73BFB009005E0FFF737FB0099401A642837D84A480068C005F5D532680321090560680A400140914208D0810322\n"
+":401D0000890F032904D13168890301D50120F8BD2A69032109040A4022D0084090421FD0207880061CD528692A6988430121C9040A432A612A698A432A612861C0050FD54E\n"
+":401D4000FFF704FB009008E0FFF700FB0099411A3048814201D90320F8BD28698005F3D561688803800F032805D132680005824301400A43326028690322616812041140F8\n"
+":401D800008432861002F04D0B16B012000078143B1632078C00705D0E868A168800880000843E8602078800705D5E8680C218843E1680843E8602078400706D5E8680321BD\n"
+":401DC0008902884321690843E8602078000706D5E86803210903884361690843E8602088C00506D5E868032109048843A1690843E8602078000606D5E868032189048843D8\n"
+":401E0000E1690843E8600020F8BD0000401002400070004088130000F8B5054653480E460068C007C00FB0420AD25048016849084900314301600068C007C00FB0426FD1C0\n"
+":401E400028784B4C800705D5E068F0218843A9680843E0602878C00752D06868022817D0032818D02168012818D08905002957DAE168890889000143E160FFF767FA6968FB\n"
+":401E80000746022912D003291CD0012926D033E021688903EAE721688901E7E74907E5E7FFF754FAC11B3348814223D8E0680007800F0228F4D123E0FFF748FAC11B2D48E8\n"
+":401EC000814217D8E0680007800F0328F4D117E0FFF73CFAC11B274881420BD8E0680007800F0128F4D10BE0FFF730FAC11B2148814201D90320F8BDE0680007800FF3D11B\n"
+":401F00001A480168C907C90FB1420BD9016849084900314301600068C007C00FB04201D00120F8BD2878400706D5E068072109028843E9680843E0602878000707D5E06839\n"
+":401F40000721C90288432969C9000843E06000F05DF8E168084A0906090F515CC840074908600020FFF788FD0020F8BD00200240001002408813000080AA00080000002038\n"
+":401F800010B50F2202600C4AD3689B079B0F4360D368F02423408360D46807231B021C40C460D268D2081A40026104480068C007C00F086010BD00000010024000200240AD\n"
+":401FC000014800687047000000000020044805490068C968044A4905490F515CC8407047000000200010024099AA0008044805490068C968044A8904490F515CC840704737\n"
+":40200000000000200010024099AA000810B5184AD1680C20084004280BD0082810D00C2810D050680004410F0120C003491C884010BD1068C00601D50E4810BD0E4810BDA0\n"
+":402040000E4810BD88020E4B000F185C0902D368890F491CDB0301D5084A05E01268D20601D5044A00E0044A5043FEF77DFA10BD0010024000093D000024F40000127A00FD\n"
+":4020800090AA0008F8B504460078F24DC0074AD0E8680007800F022807D0E8680007800F032809D1E868C00306D5286880033AD56068002873D036E0012062680004824271\n"
+":4020C00003D129680143296011E0052301211B0489049A422A6802D10A432A60F1E782432A602A6802400092286888432860606800280CD0FFF72AF9064604E0FFF726F915\n"
+":40210000801B64287ED828688003F7D50BE0FFF71DF9064604E0FFF719F9801B6428F1D828688003F7D42078800741D5E8681F270007800F3F02012807D0E8680007800FBE\n"
+":40214000032809D1E868C00306D42868400717D5E068012823D113E0E068002817D029680922914301432960FFF7F0F8064604E0FFF7ECF8801B0228C4D828684007F7D5B2\n"
+":4021800068682169B84309020843686010E02868400840002860FFF7D9F8064605E090E0FFF7D4F8801B0228ACD828684007F7D42078C00676D5E868A74E0007800F0BD0A8\n"
+":4021C000A06900285DD02868FF21013108432860FFF7BCF8074644E02868800502D5A06900286ED0206A69683140884212D901F017FF0028AED16868216AB04308436860C6\n"
+":40220000686800E0BBE00002217F000A0906084368600FE06968B143014369606868217F0002000A090608436860206A01F0F8FE00288FD1206A410B0120C003491C884046\n"
+":40224000E96809060A0F8549895CC840844908600020FFF711FC25E0FFF778F8C01B02288AD828688005F7D56868216AB043084368606868217F0002000A09060843686020\n"
+":4022800010E02968FF20013081432960FFF75EF8064604E0FFF75AF8801B02286FD828688005F7D420786F4E000723D560690028306910D0012108433061FFF747F8074612\n"
+":4022C00005E0C5E0FFF742F8C01B022857D830698007F7D50EE0400840003061FFF736F8074604E0FFF732F8C01B022847D830698007F7D42078400762D5A86B0027C00069\n"
+":4023000005D4A86B012109070843A863012756480168C90511D40168821511430160FFF715F8009005E0FFF711F80099401A642825D84D480068C005F5D5FF20A2680130B9\n"
+":40234000824203D131690143316111E001218902002A07D005231B029A4203D132690A433261EFE7326982433261306988433061A06800280FD0FEF7E9FF009007E060E0E5\n"
+":40238000FEF7E4FF0099411A3848814259D830698005F5D50DE0FEF7D9FF009006E0FEF7D5FF0099411A314881424AD830698005F5D4002F04D0A96B012000078143A963B4\n"
+":4023C000606A002842D0E9680907890F03293FD0012636060228286805D0B0432860FEF7B5FF04462FE0B0432860FEF7AFFF074604E0FEF7ABFFC01B022822D82868800138\n"
+":40240000F7D4E16AA06AEA680843216BFD231B049A4311430843E860286830432860FEF795FF044604E0FEF791FF001B022808D828688001F7D509E0FEF788FF001B0228DD\n"
+":4024400001D90320F8BD28688001F5D40020F8BD0120F8BD0010024000E0000080AA000800000020401002400070004088130000704738B501684A68D243520609D48A68C9\n"
+":40248000D243D20705D18A68D243520601D5816C08E04A68D243120606D48A68D243920702D4C16C884738BD4A68D2439206FAD48A68D243D20606D4426D02231A43426570\n"
+":4024C0001022D2438A6001688A680123D2439206002A08DB426D1A4342658A6800920A684024A2430A6001688A68D243540602464032002C09DB547C122C06D0446D0425C4\n"
+":402500002C434465CC688C6800948C68E443E40505D4446D08252C4344658C680094446D002CC0D04C68E025AC434C605374FFF79FFF38BD70B5040006D025464035687C98\n"
+":402540000026002802D005E0012070BD2E74204600F032F80220687420680168402291430160A168606822690843E16811430843616901220843A169520211400843E16955\n"
+":402580000843216A0843A16A084321680860A0690421000C0840616A0843216848602168E06A08612068C16992009143C161666501206874002070BD00B50068104985B0B4\n"
+":4025C00088421AD10F48416B821411434163A02000900220019000210320039002910491052069460007FEF7E5FD002203211920FFF7A8FA1920FFF79BFA05B000BD000094\n"
+":402600000030014000100240042204490428086902D09043086170471043FBE700E000E0094910B5401E884201D9012010BD074C60610321081F01F025FC0020A06107204D\n"
+":402640002061002010BD0000FFFFFF0000E000E070B502462032137D012B1BD00123137502245475046865687026B5436560046865680E68354365600468A5688026B5439F\n"
+":40268000A5600068846849680C43846053750020107570BD022070BD70B5040005D025462035687D002802D006E0012070BD00202875204600F00AF802206875211D206849\n"
+":4026C00001F066FE01206875002070BD70470268D36801210B43D360006802680A43026000207047704770B50446006801690025C9438907002915DBC168C943890711D467\n"
+":40270000E91E016101202075206880698007204602D0FFF7E7FF04E000F08EF8204600F025F9257520680169C943490717D4C168C943490713D40421C94301610220207517\n"
+":40274000206880698005800F204602D0FFF7CAFF04E000F071F8204600F008F9257520680169C943090716D4C168C943090712D40821C9430161042020752068C069800704\n"
+":40278000204602D0FFF7AEFF04E000F055F8204600F0ECF8257520680169C943C90617D4C168C943C90613D41021C9430161082020752068C0698005800F204602D0FFF757\n"
+":4027C00091FF04E000F038F8204600F0CFF8257520680169C943C90708D1C168C943C90704D1891E0161204600F0C2F820680169C943490609D4C168C943490605D440210C\n"
+":40280000C9430161204600F0BDF870BD00B500680121890785B088420CD101200090002002210290039001910491052069460007FEF7C0FC05B000BD7047F8B5064604460F\n"
+":402840002036307D0D4601280DD001203075022070750427002A08D0042A16D0082A2AD00C2A4DD137E00220F8BD206801F0C0FD2068816908221143816120688169B9430A\n"
+":40288000816120688169EA6812E0206801F0C8FD206882690121C9020A43826120688169012292029143816120688169EA6812021143816124E0206801F0CBFD2068C269CD\n"
+":4028C00008210A43C2612068C169B943C1612068C169EA6812E0206801F0D6FD2068C1690122D2021143C1612068C269012189028A43C2612068C169EA6812021143C16130\n"
+":402900000120707500203075F8BD70B5040005D025462035687D002802D006E0012070BD00202875204600F00BF802206875211D206801F02DFD01206875002070BD000005\n"
+":4029400010B500680121890788420CD10648816B012211438163002203210F20FFF7F2F80F20FFF7E5F810BD001002407047000010B500680249884201D1FFF765F810BDDB\n"
+":40298000000400407047704770470000F8B502680446D06911680607360F07D1830605D58B0603D5204601F038FEF8BD95682023002E65D0EE07F60FFF2721370F4037437F\n"
+":4029C0005ED0C70706D0CF0504D501271762E26E3A43E266820708D5EA0706D0276802223A62E26E04273A43E266420708D5EA0706D0256804222A62E26E02252A43E2668E\n"
+":402A0000020709D50A461A40324305D0236808221A62E36E1343E366E26E002AC5D0800604D5880602D5204601F0F7FDE06E000703D42068806840061CD5204601F0DEFD77\n"
+":402A400020688168490611D5826840218A438260606E00280AD01D498163606EFEF798FA0028A2D0606E816B8847F8BD2046FFF78BFFF8BD2046FFF787FF0020E066F8BDD7\n"
+":402A80002646C7026036002F0ADA6D0208D50120000510627372B3722046FFF774FFF8BD050605D50D0603D5204601F00DFFF8BD4006FCD54806FAD52046146840218C4398\n"
+":402AC0001460737200F0D3F8F8BD0000E945000870B5040005D025466035687A002802D006E0012070BD00202872204600F026F82420687220680168490849000160606AC7\n"
+":402B0000002802D0204601F0DAFC204601F0C4FD0128E7D0206841680922D20291434160206881682A229143816020680168012211430160204601F027FD70BD00B50068D1\n"
+":402B4000164987B0884227D11548C26A01210A43C262C26A0A400592C26A0A43C262C26A0A400592826B4B041A4382630C2000900220019003200390042004900291052017\n"
+":402B800069460007FEF716FB002203211C20FEF7D9FF1C20FEF7CCFF07B000BD00440040001002407047FFB5064604466036707A83B00D46202858D1002D0CD0059800287E\n"
+":402BC00009D00120A1680003814207D12069002804D1E80702D0012007B0F0BD307A012843D0012030720020E06621207072FEF7ADFB019027464037059838820598788236\n"
+":402C000018E0788A401E788206980090002280212046019B01F08BFE002818D10120A1680003814202D12069002812D02168287888626D1C788A0028E3D1069800900022A4\n"
+":402C400040212046019B01F072FE002808D00320C2E728882168C005C00D8862AD1CE9E72020707200203072B6E70220B4E7704710B5064CE178002901D000F045F8E07892\n"
+":402C8000401EE07001F004FA10BD00006000002010B501684A68D243920507D48A68D243D20703D1921E8A60FFF7E2FF10BD10B504000FD000F010F8E06880210843216874\n"
+":402CC0000860616820690843A168084321684860002010BD012010BD10B50068084988420CD10848816BC21411438163002203211046FEF727FF0020FEF71AFF10BD00004E\n"
+":402D0000002C004000100240C1680068016000207047FEE710B5074800688069172109020842044802D0FEF785FB10BDFEF7AEFB10BD0000B40D002010B506480068806925\n"
+":402D40004005400F034802D0FEF774FB10BDFEF79DFB10BD000E002010B5806A01684A680123DB031A434A60826B00219163C26B9163014640314A78602A02D0FEF78EFB9F\n"
+":402D800010BD20224A70FEF731FB10BDF0B503460022CE0740332824B025002E05D05E7842222746B74300D0F2228E0705D544265B7832439C4300D02A434B0701D5B8231B\n"
+":402DC0001A4311238B4301D190231A4312238B4301D160210A4300680168914301600020F0BD000070B5164D1223446B002220268B43AC4202D0134DAC420DD14C0700D566\n"
+":402E0000B82211248C4301D190210A43002B11D1324340210A430DE04C0700D5B822CC0701D0F2242243890701D5F4210A43002B00D132430068016811430160002070BD9A\n"
+":402E4000A13200088D34000801688A69D243920701D400228A6200688169C943C90703D081690122114381617047F8B5054604464035687828218143206804D00821C1617B\n"
+":402E800000202870F8BD8169C903CF0F8169FE230E0C81681E408A05C168920D19408C46E168022912D10621D3090E400B409E420BD1A16C491CA164A16C0229E2D10021F1\n"
+":402EC000A1640823C361297007E0664604212046FFF75CFF00202870324639462046FEF797FAF8BDF8B50026054640350446AE702C48E0626685606C084360646878202788\n"
+":402F0000282823D06878292820D068782A281DD007212046FFF73AFF6878602800D06F7026636663206801684A041F49026817D501239B039A430260A06B81632E70A06B52\n"
+":402F4000FEF726F800281DD0A06B19E003212046FFF71CFF28206870266314486063E1E7120410D502680123DB039A430260E06B81632E70E06BFEF70BF8002802D0E06BFF\n"
+":402F8000816B8847F8BD6878602804D02E702046FEF784FAF8BD6F702E702046FEF726FAF8BD00000000FFFF592D0008F534000870B504461548E06200252563202220466C\n"
+":402FC00040300646427085706563480711D52068416A606A421C62620170208D002808D0401E2085608D401E6085606C04210843606407212046FFF7C9FE21681020C861D4\n"
+":4030000035702046FEF704FB70BD00000000FFFFF8B5064600682027C76130684268224B1A4042600025356320487563F062C80606D531681020C861706C042108437064E1\n"
+":403040003046FFF701FF03213046FFF79FFE706C002814D134464034607860280FD06078212811D06078222808D16770A078A57040282570304614D0FEF7DCFAF8BD716CEC\n"
+":403080003046FFF72FFFF8BD6770A078A57040282570304602D0FEF7DFFAF8BDFEF7CAFBF8BDFEF7B5FBF8BD00E800FE0000FFFF70B50025064640360446B57071782020A4\n"
+":4030C000212970700BD012202063022120466563FFF75CFE35702046FEF7ACFA70BD11202063012120466563FFF750FE35702046FEF7B2FA70BD0000F8B5044600682026DC\n"
+":403100000F46C66121680820C86107212046FFF73DFE20684168B20211434160206841682D4A114041602046FFF78EFE20680168254649044035002902DB0168090406D5A9\n"
+":40314000697821292FD0E16B096849686185628D0421002A02D0626C0A4362647A070FD5426A606A431C63620270208D002807D0401E2085608D401E6085606C08436064B5\n"
+":4031800000202063A8706063616C00290DD0616C2046FFF7A7FE6878282803D139462046FFF706FFF8BDA16BCEE7E26A0B498A4206D0E1626E7028702046FEF729FAF8BD68\n"
+":4031C00069786E7022292870204602D0FEF7BCFBF8BDFEF791FBF8BD00E800FE0000FFFF70B50026044640340546A6706178282029290ED061782A290AD16070222028631B\n"
+":4032000002212846FFF7C2FD26702846FEF774FB70BD60702120286301212846FFF7B6FD26702846FEF790FB70BD0000F7B5044600680E468069C043C0062CD42027254617\n"
+":40324000403520688069C04380060FD5701CF8D0002E05D0FEF77AF80299401AB042F0D96F700020A87028700320FEBD21681020C8612068C7612046FFF7E6FD20684168FE\n"
+":40328000064A11404160042060646F700020A87028700120FEBD0020FEBD000000E800FEF8B50546044640352878012816D001202870C8060026002812DAD00610D521682D\n"
+":4032C0001020C861606C04210843606412212046FFF788FD2046FFF7B7FD3FE00220F8BD080634D5500632D520680168402291430160608D002825D0206840688105608DB2\n"
+":40330000890DFF2803D9FF202085930403E0608D012320855B060096208DC2B2204600F079F9608D218D401A6085687822282068016804D001229203114301600EE00122D9\n"
+":40334000D203F9E740212046FFF7CCFD06E0880604D5900602D52046FFF75AFE2E700020F8BD0000F8B5074604464037387815460E46012810D001203870F0060ED5E8067E\n"
+":403380000CD521681020C861606C0421084360642046FFF759FD5BE00220F8BD700708D5680706D52068416A606A421C6262017009E0B0070ED5A8070CD5606A411C61625B\n"
+":4033C000216800788862208D401E2085608D401E60853DE02C4A30062FD568062DD5208D002825D1608D002822D0206840688105608D890DFF2806D9FF22002022850123A8\n"
+":403400001B06009010E0608D2085E06A904205D000200090E36A208DC2B205E000200090208D0123C2B25B06204600F0F3F80FE020684068800123D506E0700608D568068F\n"
+":4034400006D5608D00280ED040212046FFF74AFDB00605D5A80603D531462046FFF7D8FD00203870F8BD206841688901F0D4E16A914205D141680122920311434160E7E7A8\n"
+":403480002046FFF715FEE3E70000FFFF10B5044640342378012B15D001232370CB0618D5D30616D5617821290ED0C16B09684968102200290AD00168CA61416C042211432E\n"
+":4034C000416414E0022010BD816BEFE70068C2610DE00B0705D5130703D500680821C16105E08B0603D5920601D5FFF705FE0020207010BDF8B50546044640352878164694\n"
+":403500000F46012811D0012028704149F8062DD5F0062BD5628D1020002A08D02168C861606C04210843606467E00220F8BDE36A01225206934202D0E36A934202D16A78BC\n"
+":40354000282A08D0E26A8A4202D06978292907D02168C86151E039462046FFF729FD4CE02168C8612046FFF76FFC43E0780719D5700717D5608D002820680BD0426A606AC3\n"
+":40358000431C63620270208D401E2085608D401E608500E0406A608D00282ED1E06A884228D12AE0380706D5300704D539462046FFF75BFC21E0B8071FD5B0071DD5608D3A\n"
+":4035C00000280CD0606A411C6162216800788862608D401E6085208D401E20850DE0216862208862E06A01210906884202D0E06A002802D12046FFF7F3FDB80605D5B0063A\n"
+":4036000003D539462046FFF777FD00202870F8BD0000FFFF70B50568049C68688905890D1204044E11431943304021430143696070BD0000009800FCF8B51C4617460E4658\n"
+":40364000054611E0601C0FD0002C05D0FDF77EFE0699401AA04207D92020403568700020A87028700320F8BD286881693046884304D00020B842E5D00020F8BD0120F9E71E\n"
+":4036800070B516460D4604461AE0324629462046FFF7CCFD002801D0012070BD002D04D0FDF754FE801BA8420AD9616C202001436164403460700020A0702070032070BD86\n"
+":4036C00020688069C0438006DFD4002070BD70B516460D4604461CE0324629462046FFF7A5FD002801D0012070BD681C11D0002D04D0FDF72BFE801BA8420AD9616C202092\n"
+":4037000001436164403460700020A0702070032070BD20688069C0438007DDD4002070BD0EB5002002909021C0A001F041F9CC4C012211462046FDF703FE012005F048FE39\n"
+":40374000002202212046FDF7FBFD012005F040FE002201212046FDF7F3FD012005F038FE012202212046FDF7EBFD012005F030FEFF24BC4D91342146286805F075FE012047\n"
+":4037800000900223B84A00210194902005F078FAB64E040003D0B6A001F00AF93471286805F03CFEB04CB8A0083C218901F000F90027A07801286DD1B949BAA001F0F8F8ED\n"
+":4037C000BE49BFA001F0F4F801221146A448FDF7B7FD012005F0FCFD00220221A048FDF7AFFD012005F0F4FD002201219C48FDF7A7FD012005F0ECFD012202219848FDF7BC\n"
+":403800009FFDC82005F0E4FDB3A001F0D1F8B9A001F0CEF86421C4A001F0CAF80321C7A001F0C6F8A549CB4802F030FF00280FD0C94A9B49C9A001F0BBF8D148029005203E\n"
+":403840003071D0A001F0B4F8322005F0C1FD10E0CCA001F0ADF8322005F0BAFD0298002807D103F013FE307100F0B8F9CCA001F09FF8FF219131286805F0F6FDA07860708F\n"
+":40388000029800280AD01220A0700298E080286805F0C4FDA078092804D01DE01020A070E780F4E7002202216D48FDF749FD012211466B48FDF744FD022005F089FDB771F3\n"
+":4038C000FF219131286805F0CFFDA07860701220A070286805F0A2FDA07802280CD1F771FF219131286805F0BFFDA07860701020A070286805F092FDA07803280CD1377298\n"
+":40390000FF219131286805F0AFFDA07860701020A070286805F082FDA07804280ED104F07FF97072FF219131286805F09DFDA07860701020A070286805F070FDA078052877\n"
+":403940000ED103F02DFA7074FF219131286805F08BFDA07860701020A070286805F05EFDA07806281ED1FF209130934A01900097137A11889020121D05F082F9009000282C\n"
+":4039800002D08EA001F014F80098F074FF219131286805F069FDA07860701020A070286805F03CFDA07807281CD1002202212C48FDF7C6FC012005F00BFD012211462848B0\n"
+":4039C000FDF7BEFC012005F003FD7775FF219131286805F049FDA07860701120A070286805F01CFDA07808281CD1002201211C48FDF7A6FC012005F0EBFC0122022118488D\n"
+":403A0000FDF79EFCC82005F0E3FCB775FF219131286805F029FDA07860701220A070286805F0FCFC05F073FDC3E600000A0D20415030323032205468726561642043726590\n"
+":403A40006174656420536C617665204944203D20307825303278202E2E2E200A0D000000000400508400002098000020E4220020204572726F722043484950204944205278\n"
+":403A8000656164200A0D00002043484950204944203D20307825303478200A0D0000000004530208257320456E746572656420546872656164202E2E200A0D00911E00009D\n"
+":403AC00020426F6F74646174612053697A65203D202575200A0D0000494E49545F4F4E20424F4F54204E6F7420456E61626C65640A0D00003C3C3C3C3C3C3C3C3C3C3C46DE\n"
+":403B00006C617368696E672041523032333320426F6F74646174613E3E3E3E3E3E3E3E3E3E200A0D0000000054696D656F75742076616C75653D25640A0D0000426F6F749E\n"
+":403B40005F646174612076657273696F6E3D25640A0D0000D8CB0108A503000020257328293A20256420426F6F742044617461205772697465204552524F52200A0D0000AF\n"
+":403B8000FFFF0000426F6F746461746120666C61736820737563636573730A0D000000002049535020496E69742053756363657373202121200A0D0018190020204572728F\n"
+":403BC0006F722052656769737465722052656164204572726F72200A0D00000010B508210148FDF7A9FB10BD00040050F0B5274887B0C16A01242143C162C16A214005914E\n"
+":403C0000C26A02210A43C262C06A002508400590202000900195694602951D48FDF7CAFA1020052703263F07009001946946039602943846FDF7BEFA0194009669461448A1\n"
+":403C400003960294FDF7B6FA012210213846FDF777FB002202210E48FDF772FB012211460B48FDF76DFBA00200900A480190694602953846FDF79EFA002203210720FDF74E\n"
+":403C800061FF0720FDF754FF07B0F0BD00100240000400500000111010B512481049016011494160842181600121C1600021016141618161C1610162FDF750FC00280BD19E\n"
+":403CC00000210848FDF748FB002805D100210548FDF767FB002801D0FDF766F810BD000000540040B40D00202A12B00010B511480F4901601049416000218160016141610A\n"
+":403D000081610122C161C2600162FDF727FC00280BD100210748FDF71FFB002805D100210448FDF73EFB002801D0FDF73DF810BD00780040000E0020330F600010B50F4813\n"
+":403D40000D490160FF21053141600021816002220261C16001224261C161016252024162826181620721C162FEF7E4FB002801D0FDF71AF810BD0000003001404C0E00200D\n"
+":403D800010B5164A164886B0910706C02021016000241E21846041600838FEF7B6FD002814D1049404A90E480594FEF751FC00280CD16020009004200190039000226946C9\n"
+":403DC00002940748FEF739FD002801D0FCF7ECFF0348FEF71BFD06B010BD000055D00000A40E002010B50C480A490160E1214902416000218160C16001618161C1610C2298\n"
+":403E0000016242614162FEF763FE002801D0FCF7CBFF10BD00440040DC0E002010B50CA000F0C6FD0F480E490160FF21813141607F218160C160012149020161FEF737FF30\n"
+":403E4000002801D0FCF7B0FF07A000F0B1FD10BD20494E49542057574447200A0D000000002C00404C0F002020494E495420575744472053554343455353200A0D000000AD\n"
+":403E8000704700008307FF22DB0E9A408907090E994000280BDA0007000F0838830808489B001818C36993430B43C3617047830804489B001B1818689043084318607047B7\n"
+":403EC00000ED00E000E400E0BFF34F8F04490348C860BFF34F8F00BFFDE700000400FA0500ED00E038B50D461A494418206800902346194A19491AA000F05AFDE843000469\n"
+":403F0000284320602068144A00902346521D134922A000F04DFD2E4CA069C007FCD10E4A0E490D322BA000F043FDA069800702D50220A06105E0084A084914322AA000F0DE\n"
+":403F400037FD4F22120105492EA000F031FD002038BD00000000F81FD9040000D8AB0008202D2D2D20204265666F72652025732825642920417420416464726573732030E4\n"
+":403F800078253038782056616C7565203D20307825303878202D2D2D200A0D00202D2D2D202573282564292041742041646472657373203078253038782056616C75652061\n"
+":403FC0003D20307825303878202D2D2D200A0D0000200240202D2D2D20257328256429202D2D2D200A0D0000202D2D2D204552524F52202D20257328256429202D2D2D2069\n"
+":404000000A0D0000202D2D2D205355434345535320257328256429202D2D2D200A0D000070B517490023CA681206120F18D18A6B154CD500134A02D51268224009E08E6B00\n"
+":4040400001252D072E438E6312688E6B2240AE438E63A24204D103218903884200D101230A48016849084900194301600068C007C00F984201D0012070BD002070BD00004F\n"
+":404080000010024000700040001800000020024070B512A000F08CFC154D28680168490849000160286800248462286844624B2149011048FCF7CBFA0F4805210482818144\n"
+":4040C00041818471FF210171417129680A6801231A430A6081784170847070BD524553455420534C41564520493243200A0D0000B40D0020600F00206000002010B50248DA\n"
+":40410000FEF7B7F910BD00004C0E00207047000030A000F04DFC0025344C0426A078042801D1FFF7B5FFA289002A04D0A078082805D00C2803D0A078002802D010E0607025\n"
+":40414000A5706281A58165700A20A07028492948FDF722FC002803D027A000F029FC2EE0A0780C2804D008282DD1A08900282AD11E4B61890C331A1D1D4804F0EFFA00286C\n"
+":4041800008D06922D200284928A000F011FC3348208111E0228A002A15D0E2812582A07860700620A07012491248FDF721FC002809D02BA000F0FCFB60780428AED0A07891\n"
+":4041C0006070A670AAE70520E07009481438FEF79BFDA3E720456E746572656420736C617665207468726561640A0D0060000020600F0020B40D00204572726F72204F6382\n"
+":4042000063757272656420696E2048414C5F4932435F536C6176655F526563656976655F4954200A0D000000D4AA000820257328256429204572726F72206F63637572655E\n"
+":4042400064206F6E20686F73745F6672616D65776F726B202121200A0D00000008200000204572726F72204F63637572726564206174205472616E736D6974200A0D0000F2\n"
+":4042800010B505F025F910BD10B523489AB001680322D2029143C21489180160012102200391102100900491099040040B90000100240C900A946846FDF7E4FE002817D138\n"
+":4042C0000F20159003201690179418940121199415A8FDF7A1FD00280AD1FF200B3012940D90109413940DA8FDF7DAFC002801D0FCF75AFDFDF764FE7D21C900FCF734F922\n"
+":40430000FEF78EF90420FEF77FF903210022081FFDF718FC1AB010BD0070004010480168821511430160C1680E4A1140C16001680D4A114001608168490849008160016875\n"
+":404340000122920491430160C168FD2212049143C160002101610549C003886070470000001002400C40FF88F6FFF6FE00ED00E010B50248FEF7B7F910BD0000A40E00209B\n"
+":4043800010B50248FEF7AFF910BD0000E0180020F0B502680124A407124D134E134FA04205D0A84203D0B04201D0B84204D11346702293434A681A43A04205D0A84203D021\n"
+":4043C000B04201D0B84204D103231B029A43CB681A4302608A68C2620968816201214161F0BD000000040040000801400014014030B5026A520852000262026A45688369F6\n"
+":404400007024A3439C080B68A40023430224A2438C6845601443836149684163046230BD30B5026A10239A430262036A4568826973242402A2430C682402144320229343E5\n"
+":404440008A68456012011A43846149688163026230BD30B5026AFF2301339A430262026A4568C3697024A3439C080B68A400234301246402A2438C68456024021443C361F8\n"
+":404480004968C163046230BD30B5026A01231B039A430262036A4568C26973242402A2430C68240214430122520393438A68456012031A43C46149680164026230BD10B580\n"
+":4044C000818CC90707D001684A6801235B049A43836A1A434A60818C890707D501684A6801231B049A43C36A1A434A60818C490707D501684A6801239B049A43036B1A43F2\n"
+":404500004A60818C090707D501684A680123DB039A43436B1A434A60818CC90607D50268916801231B039943836B19439160818C890607D501688A6801235B039A43C36B55\n"
+":404540001A438A60818C490612D503685A6801210905046C8A4322435A60026C8A4207D10268516803235B059943436C19435160818C090607D501684A680123DB04806CA3\n"
+":404580009A4302434A6010BDF8B500260446C666FCF7DCFE054620680068124F000709D501212B46002249052046009700F0BFF900280DD12068006840070BD501212B4673\n"
+":4045C000002289052046009700F0B1F9002801D00320F8BD202060346072A07226720020F8BD0000FFFFFF0110B5806A0022014640314A834A82FEF7C7F910BD01680A6801\n"
+":40460000FF2321339A430A6001688A68520852008A60202160308172704770B50246403201466031938B8D7A0C460168222D05D08869082210438861022070BD496A012616\n"
+":404640008568360389B2B54202D10569002D0BD01940436D5D1C45651970518B491E0904090C518307D015E0456D19402980416D891C4165F1E701680A68FF2321339A432C\n"
+":404680000A6001688A68520852008A602021A172FEF788FA002070BDFEB50446016880682269E36910436269102700261A4310430A683546784B1A4002430A60206841684D\n"
+":4046C000032212039143E26811434160734A2168A069914201D0226A10438A680B231B029A4302438A606E4A20686E4990420CD1C8688007800F06D0012843D002283FD01B\n"
+":40470000032826D124E0012723E0674A90420AD1C8680C21084031D0042833D008282FD00C2816D114E0614A904227D0604A904224D05A4A90420CD1C96803208002014069\n"
+":404740001CD01015091A1DD0091A19D0814200D108270220FDF7FAF90190504B514922684039D81300929A4235D1002F0CD0022F0DD0042F12D0082F1CD113E00027E8E7DD\n"
+":404780000227E6E70427E4E7FDF720FC08E00868C00601D5474805E0474803E0FDF736FC002873D0626851005118814202D81103814201D2012569E0010E060250080023C6\n"
+":4047C00030185941FBF7FAFE032109023B4A411A914259D9EEE7E26982422DD13B0000F00EF90906080B24192424241F2400019812E0FDF7FBFB0FE008686168C00602D57D\n"
+":4048000048082F4A01E02F4A48088018FBF7ACFE86B20BE0FDF7FAFB616840004A08F4E76168012248081204EFE70125310909013007400F084327E03B0000F0E0F8090712\n"
+":404840000A0D061D060606290600B3E7FDF7BEFB14E0FDF7CBFB11E008686168C00602D54A08144801E014484A081018FBF77CFE81B20098C16009E0FDF7C8FB61684A0889\n"
+":404880008018FBF771FE80B22168C8602846FEBD61684A08E9E70000F369FFEF00480040003801404010024000440040004C00400050004000093D000024F400FFFC0F0023\n"
+":4048C00000127A000048E8016921095C212901D00220704702464032518A002912D0012381681B03994202D10169002915D0C16C4B1CC364006809788162508A401E508296\n"
+":404900000020704701680A6880239A430A6000680168402211430160F2E7C16C03680988C905C90D9962C16C891CC164E5E7FFB581B017460E4604460A9D1DE0681C1BD09C\n"
+":40494000002D05D0FCF702FD0499401AA84213D920680168FF22A1329143016020688168490849008160202060346072A07200202072032005B0F0BD2068C169304688438E\n"
+":4049800004D00020B842D9D00020F3E70120F9E710B50248FDF7FAFF10BD0000DC0E002010B50248FEF774F910BD00004C0F00200FB410B503A9044B044A029800F03CF84A\n"
+":4049C00010BC08BC04B0184741870008A80000202021020C01D010211046020A01D010460839020901D01046091F820801D01046891E420801D0881E7047081A704730B47A\n"
+":404A00007446641E2578641CAB4200D21D46635D5B00E31830BC184702E008C8121F08C1002AFAD170477047002001E001C1121F002AFBD170470000FFB591B00F46054655\n"
+":404A4000002606E025280AD0149A139990476D1C761C28780028F5D1304615B0F0BD002400940121F34A029400E004436D1C2B780846203B98401042F7D128782A280ED0D6\n"
+":404A8000022128780246303A092A15D8009A0A235A43303A80180C436D1C0090F1E701CF0090002805DA012040030443009840420090022004436D1C28782E2815D104200D\n"
+":404AC000044368786D1C2A280AD101CF6D1C02900BE002990A225143303940186D1C02902878014630390929F3D928786C2810D006DC4C281AD068280ED06A2817D104E05E\n"
+":404B0000742813D07A2812D110E00120400504430CE00121090501E0032109050C436978814203D10120000524186D1C6D1C287803906E281ED00CDC632831D004DC002837\n"
+":404B40008AD0582811D1B2E064287BD069280CD178E073282DD004DC6F2870D0702804D1A7E075286CD078286BD0149A13999047761C62E06002400F022807D003280AD097\n"
+":404B8000042838680AD006603F1D56E03868F11706604160F8E738680680F5E70670F3E73878694608740020487404A80390012003E0386803900020C0433F1D61070FD57F\n"
+":404BC000002101E00199491C029A0191914213DA8142F7DB019A0399895C0029F2D10BE0002101E00199491C01918142FADB019A0399895C0029F5D101990098139A401ACF\n"
+":404C000000902146149B00F03BF901998019461807E0039803990078491C0391149A139990470198401E0190401CF2D12146149B139A009800F014F986196D1C09E741E021\n"
+":404C400033E034E00A200021049005916002410F022905D001CFC2179446032905D007E0FF1DFF08FF0003CF06E000B2C2179446042902D140B2C1178C46002261469445FE\n"
+":404C800006DA0A460021404291418C462D2102E0210504D52B216A461176012103E0E10701D02021F7E7019154E00A200BE0102009E01020049000210420044308200591EC\n"
+":404CC000029003E008200021059104906002410F022905D001CF00229446032906D006E0FF1DFF08FF0003CF8C4603E080B2042900D1C0B20021019121072BD5039970290B\n"
+":404D000006D0049A1021059B4A401A4305D00EE040216A461176012108E06146014306D030216A4611760399517602210191049A0821059B4A401A430CD16146014301D199\n"
+":404D4000610707D530216A461176012101910299491E02910399582904D037A103910FA90F910DE039A1F9E76146059B049AFBF725FC039B8C469B5C0F9A521E0F92137026\n"
+":404D800061460143F0D10F9807A9081A20300390600704D5012000048443029801E0012002900399884201DD401A00E0002041180290019809180098401A0090E00306D40F\n"
+":404DC0002146149B139A009800F05AF886190020049008E006A9085C149A139990470498401C761C049001998842F3DBE0030CD52146149B139A009800F042F8861904E07B\n"
+":404E0000149A302013999047761C0299481E02900029F5DC08E00F980F990078491C0F91149A13999047761C0399481E03900029F1DCFBE609280100303132333435363721\n"
+":404E40003839616263646566000000003031323334353637383941424344454600000000F8B5044600251E461746880404D405E039462020B0476D1C641EF9D52846F8BDF2\n"
+":404E8000FFB50446002581B01E46C80301D5302700E02027880404D505E038460399B0476D1C641EF9D5284605B0F0BD70B50D46002812D001780446432903D015A0FFF7E8\n"
+":404EC00077FD0AE00221A01C03F024FC21790246914204D017A0FFF76BFD022070BD22480178052901D0214A11706178017061880802090A084381B2012901D9012100E0D3\n"
+":404F000000214018801C2880194901200870002070BD000020496E76616C6964205369676E617475726520307825303278202121200A0D0020476976656E20204352432002\n"
+":404F40003D2030782530327820213D2043616C63756C6174656420435243203D20307825303278200A0D000065000020640000206600002070B5044609A0FFF719FD08E0AF\n"
+":404F800014210D4801F082FB050008D1642004F01FFA2046641EE4B20028F1D1284670BD62696E5F746F5F63726F705F737769746368696E670A0D001C460208FEB5064648\n"
+":404FC0000025684605814048FF24C07B3F499134002813D03E486A461081022302AA90200095019403F04CFE070041D002466846018938A0FFF7DCFC3846FEBD34486A46C8\n"
+":40500000801E1081022302AA90200095019403F037FE0700EAD13300FFF7F1FC060A04061013160A374801E01720400169460881022302AA344F0095019432E00120400236\n"
+":40504000F4E7FF205530F1E7C820EFE7022302AA394690200095019403F012FE040030D002466846018929A0FFF7A2FC2046FEBD3300FFF7C4FC061004060B0E24102F481F\n"
+":4050800001E0312040016946088104E07D20C000F9E7684604811C4F022302AABF1C009501943946902003F0EBFD0600CED002466846018915A0FFF77BFC3046FEBDC82047\n"
+":4050C000E1E70020FEBD0000381900208E090000984900004572726F722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A8B\n"
+":405100000D0000008813000096C900004572726F722057726974696E6720307843393936203D2030782530347820657272203D20307825303278200A0D000000B80B0000FA\n"
+":405140003EB50024684604810A2004F041F90521C90268460181FF2091303F210190022302AA89020094902003F08AFD040007D00346684602890C490CA0FFF719FC0EE02A\n"
+":405180000A2004F025F98120000200F0DBFF040007D005490246C91D12A0FFF709FC20463EBD00203EBD00001B14000025642D2D2D2D4572726F722057726974696E67202C\n"
+":4051C000436F6D6D616E64203D2030782530347820657272203D20307825303278200A0D0000000025642D2D2D2D4572726F722057726974696E6720436F6D6D616E6420BC\n"
+":4052000030783831303020657272203D20307825303278200A0D0000F0B585B00646002468460481FF25012091350090022302AA3A4901950394902003F022FD070006D001\n"
+":4052400002466846018936A0FFF7B2FB21E0684601893F48891FF82903D33E49097B002902D00179002957D004713B4869460881022302AA394990200195009403F000FDB9\n"
+":40528000070009D003466846028935A00399FFF78FFB384605B0F0BD3300FFF7B0FB0604070B0D0F1128FF20013000E0CD206946088107E0A820FAE79220F8E77820F6E78B\n"
+":4052C00068460481154F0223923702AA394690200195009403F0D4FC06000AD00346684602891FA00399FFF763FB3046D2E70A20D0E7022302AA394690200195009403F023\n"
+":40530000BFFC040008D003466846028914A00399FFF74EFB2046BDE70020BBE71ECA00004572726F722057726974696E6720307830393845203D2030782530347820657238\n"
+":4053400072203D20307825303278200A0D0000009000002038190020A44A00008E0900004572726F722057726974696E6720307825303478203D20307825303478206572C6\n"
+":4053800072203D20307825303278200A0D000000F1B586B000246846047204734F4E0682FF259135022304AA4D4990200195009403F066FC070008D002466846018A49A095\n"
+":4053C000FFF7F6FA384607B0F0BD06980300FFF716FB0B39070C12171C21262B30353900152168460172402103E03521684601722521017326E07521684601721421F8E7F4\n"
+":405400008521684601721021F3E79521684601720C21EEE7A521684601720A21E9E7B521684601720721E4E7C521684601720421DFE7D521684601720221DAE7FF2168463A\n"
+":4054400001720473012302AA314690200195009403F016FC060003D002466846017B0DE01E49012303AA491E90200195009403F007FC060004D002466846017A25A010E075\n"
+":40548000304869460882022304AA402190200195009403F0F5FB060007D002466846018A29A0FFF785FA30468DE726486946401C0882022304AA402190200195009403F0C0\n"
+":4054C000DFFB040007D002466846018A1EA0FFF76FFA204677E7002075E7000037CA00008E0900004572726F722057726974696E6720307830393845203D20307825303417\n"
+":405500007820657272203D20307825303278200A0D0000004572726F722057726974696E6720307843413337203D2030782530327820657272203D20307825303278200A90\n"
+":405540000D000000068600004572726F722057726974696E6720307830303430203D2030782530327820657272203D20307825303278200A0D000000F0B585B00024694663\n"
+":405580000C812349FF268D1C9136002814D001283BD1FF2004306A4603911081022302AA90200196009403F06BFB07000ED103206A462946108116E0022302AA9020019628\n"
+":4055C0000094039103F05CFB070009D003466846028910A00399FFF7EBF9384605B0F0BD684629460481022302AA90200196009403F046FB040008D0034668460289294682\n"
+":4056000004A0FFF7D5F92046E8E70020E6E7000070CA00004572726F722057726974696E6720307825303478203D2030782530347820657272203D20307825303278200AF2\n"
+":405640000D000000FEB5002469460C81002801D001282ED118480881FF269136022302AA164990200196009403F00AFB050007D002466846018912A0FFF79AF92846FEBD51\n"
+":405680001E2069460881022302AA194990200196009403F0F5FA040007D002466846018907A0FFF785F92046FEBDFFF749FD0028FAD10020FEBD0000E84900008E0900001B\n"
+":4056C0004572726F722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A0D000000E8C9000010B5002804D0012809D0022866\n"
+":405700001FD10FE0FFF79EFF002819D100F0B2F905E0FFF797FF002812D100F0FBF900280ED10EE000F078FA002809D10648408801F056FA040004D004A0FFF739F9204630\n"
+":4057400010BD002010BD0000581900204572726F722073657474696E67206374726C3A20524F49204D616E75616C200A0D000000F1B584B00024684604728148408EFBF73D\n"
+":40578000C9F8804A804BFBF74BF8FBF7FEF80546049864214843FBF7ABF82946FBF702F8FBF7DFF885B2794968468181FF269136022303AA764990200196009403F060FA78\n"
+":4057C000070004D002466846818972A09BE068468581022303AA7B4990200196009403F04FFA050006D002466846818976A0FFF7DFF870E001256846057272492B4602AAAF\n"
+":40580000223990200196009403F03AFA070005D0034668469321027A49018AE06327FF2668460672FF20913066490190012302AA22390095902003F023FA040026D0072CB2\n"
+":4058400005D06D4A6D496EA0FFF7B2F817E068460572FF219131019100205A490090012302AA2239902003F00BFA04000AD0034668466149027A083169A0FFF799F8204658\n"
+":4058800005B0F0BD0A2003F0A3FD06E00A2003F09FFD6846007A002804D038467F1EBFB20028BCD1012069460872FF24454991340027034602AA223990200097019403F0BF\n"
+":4058C000DFF9050009D0034668464B49027A293153A0FFF76DF82846D2E763250126FF20694608723749012302AA223990200096019403F0C5F9070024D0072F06D03E4A5F\n"
+":405900003E4936323EA0FFF753F815E06846067200202C490090012302AA22390194902003F0AEF9070009D0034668463249027A3E313BA0FFF73CF83846A1E70A2003F0AA\n"
+":4059400047FD06E00A2003F043FD6846007A002804D028466D1EADB20028C0D1002D09D03D490498884203D1FFF7EAFB002887D1002085E739A0FFF71BF8012080E7000054\n"
+":4059800018190020D3DD7536E49F893F644800008E0900004572726F722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A14\n"
+":4059C0000D00000064C800004572726F722057726974696E6720307843383634203D2030782530347820657272203D20307825303278200A0D0000006D120000815302086C\n"
+":405A000020257328256429204572726F7220696E2049324320436F6D6D200A0D0000000025642D2D2D2D4572726F722057726974696E6720436F6D6D616E64203D203078A3\n"
+":405A40002530347820657272203D20307825303278200A0D000000008813000020506F6C6C696E672054696D6564206F7574200A0D000000F0B585B0002468460473174F86\n"
+":405A80000781FF269136022302AA154990200196009403F0F5F8050008D002466846018910A0FEF785FF284605B0F0BD68460473012303AA394690200196009403F0E0F817\n"
+":405AC000040007D002466846018906A0FEF770FF2046E9E7FFF734FBE6E70000BCC800008E0900004572726F722057726974696E6720307830393845203D20307825303494\n"
+":405B00007820657272203D20307825303278200A0D000000F0B585B00025684605722E4E8681FF249134022303AA2C4990200095019403F0A5F8070008D00246684681890A\n"
+":405B400027A0FEF735FF384605B0F0BD342069460872012302AA314690200095019403F08FF8060010D1642003F032FC28486946888102239F0303AA3946902000950194BC\n"
+":405B800003F07EF8060007D002466846017A14A0FEF70EFF3046D7E71D486946401C8881022303AA394690200095019403F068F8040007D002466846017A09A0FEF7F8FE6D\n"
+":405BC0002046C1E7FFF7BCFA0028BDD11148808FFFF7CEFDB8E70000BCC800008E0900004572726F722057726974696E6720307830393845203D2030782530347820657279\n"
+":405C000072203D20307825303278200A0D0000000686000018190020FEB5002468460481FFF728FF002801D00220FEBD204869460881FF269136022302AA1E4990200196B2\n"
+":405C4000009403F01DF8050007D002466846018919A0FEF7ADFE2846FEBD1C2069460881022302AA204990200196009403F008F8040004D00246684601890FA011E01B48D3\n"
+":405C800000F060FA040002D00246194908E01748401C00F057FA040007D015490246891D14A0FEF785FE2046FEBD0020FEBD0000E84900008E0900004572726F722057722C\n"
+":405CC0006974696E6720307830393845203D2030782530347820657272203D20307825303278200A0D000000E8C90000068600003112000025642D2D2D4572726F722057E0\n"
+":405D0000726974696E6720436F6D6D616E6420657272203D20307825303278200A0D0000F0B585B006460024684604815B480394008F012871D18D20000269460881FF2577\n"
+":405D40009135022302AA402190200195009402F097FF070029D11F20800269460881022302AA4F4990200195009402F089FF07001BD14C48694608813F21022302AA890297\n"
+":405D800090200195009402F07BFF07000DD10120400269460881022302AA434990200195009402F06DFF070009D00346684602893EA00399FEF7FCFD384605B0F0BD3300AB\n"
+":405DC000FEF71DFE092C06090C1C1F2225282C006846048106E01120000201E011204002694608813049022302AA891C90200195009402F045FF06002DD111E0332000024C\n"
+":405E0000EEE711208002EBE755200002E8E733204002E5E777200002E2E73CE00A20CCE72E4869460881022302AA402190200195009402F025FF06000DD128486946801C97\n"
+":405E40000881022302AA402190200195009402F017FF060008D003466846028913A00399FEF7A6FD3046A8E71C486946001F0881022302AA402190200195009402F000FF81\n"
+":405E8000040008D003466846028908A00399FEF78FFD204691E700208FE70000181900208E0900006633000002FC00004572726F722057726974696E6720307825303478F5\n"
+":405EC000203D2030782530347820657272203D20307825303278200A0D000000068D0000012803D0032801D00020704701207047F0B585B0002469463E4E0C813B493C4AAE\n"
+":405F00003C4D0C36002802D001286DD130E0684603910281FF2091300190022302AA0094902002F0ADFE07003FD10395FF225932684602812946FF259135022302AA9020D7\n"
+":405F40000195009402F09CFE07002ED178206A4610813146022302AA90200195009402F08FFE040040D0034668460289314636E0684603910281FF2091300190022302AAC1\n"
+":405F80000094902002F07CFE07000ED10396684631460481FF269136022302AA90200196009402F06DFE070009D003466846028911A00399FEF7FCFC384605B0F0BD6846E9\n"
+":405FC00004812946022302AA90200196009402F057FE040008D0034668460289294606A0FEF7E6FC2046E8E70020E6E78E090000A44A0000A4CA00004572726F7220577268\n"
+":406000006974696E6720307825303478203D2030782530347820657272203D20307825303278200A0D000000FEB500256946224C0D81218E002819D04808400020861F48B2\n"
+":4060400069460881FF279137022302AA1C4990200197009502F014FE06000BD002466846018918A0FEF7A4FC3046FEBD012001432186E4E7208E69460881022302AA1D4910\n"
+":4060800090200197009502F0FBFD040004D002466846018918A006E0FFF752F8040006D0214A224922A0FEF783FC2046FEBD012003F08EF90020FEBD181900204648000087\n"
+":4060C0008E0900004572726F722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A0D00000046C800004572726F7220577262\n"
+":406100006974696E6720307843383436203D2030782530347820657272203D20307825303278200A0D000000A50A000060530208204572726F7220257328256429200A0D4E\n"
+":4061400000000000FEB5074600246846048168460781FF269136022302AA402190200196009402F08DFD050007D00346684602894B494CA0FEF71CFC8FE00120C003694630\n"
+":406180000881FF2091300190022302AA40210094902002F075FD050005D0414A4F490A324FA0FEF705FC0A2003F012F9642622E068460481FF2191310120019100900223BC\n"
+":4061C00002AA4021902002F05BFD05000CD0072D06D0334A4149163241A0FEF7E9FB5CE05A2003F0F5F8B2E768460089000407D50A2003F0EDF8761E3604360CD8D101E0C2\n"
+":40620000002E4AD126492A4626313DA0FEF7D0FB454D012211462846FBF792F80A2003F0D7F8002202212846FBF78AF80A2003F0CFF8002201212846FBF782F80A2003F01A\n"
+":40624000C7F8012202212846FBF77AF8C82003F0BFF836A0FEF7ACFB3BA0FEF7A9FB642146A0FEF7A5FB4A494A4800F00FFA002805D00B4A1949403247A0FEF799FB4FA02C\n"
+":40628000FEF796FB322003F0A3F853480125447100F0C8FB0A2003F09BF82846FEBD0000AC13000025642D2D2D2D4572726F722057726974696E6720436F6D6D616E64206D\n"
+":4062C0003D2030782530347820657272203D20307825303278200A0D00000000AC53020820257328256429204572726F7220696E2049324320436F6D6D200A0D0000000057\n"
+":40630000506F6C6C696E672054696D6564206F7574203A202564097265745F636F64652564200A0D0000000000040050494E49545F4F4E20424F4F54204E6F7420456E618F\n"
+":40634000626C65640A0D00003C3C3C3C3C3C3C3C3C3C3C466C617368696E672041523032333320426F6F74646174613E3E3E3E3E3E3E3E3E3E200A0D0000000054696D65B4\n"
+":406380006F75742076616C75653D25640A0D0000911E0000D8CB010820257328293A20256420426F6F742044617461205772697465204552524F52200A0D0000426F6F7436\n"
+":4063C0006461746120666C61736820737563636573730A0D0000000078190020F0B585B007460024684604721E498181FF259135022303AA1C4990200195009402F040FCF3\n"
+":4064000006000BD168468781022303AA174990200195009402F034FC060008D002466846818913A0FEF7C4FA304605B0F0BD0220694608720D49012302AAE63990200195A4\n"
+":40644000009402F01DFC040006D002466846818913A0FEF7ADFA02E0642002F0B9FF2046E3E70000284900008E09000028C900004572726F722057726974696E6720307845\n"
+":4064800030393845203D2030782530347820657272203D20307825303278200A0D0000004572726F722057726974696E6720307843393744203D2030782530347820657222\n"
+":4064C00072203D20307825303278200A0D000000F0B587B004460020694608815848818903293CD006464036052938D00C20414354480C22091803A8FAF790F8E1210901AC\n"
+":406500002046FAF747F80446684680890F21C901081AC10F08184010FAF7EAF94A490090FAF740F90746FAF703FA0546FAF7E0F93946FAF747FA45D2307C444F00280AD0EE\n"
+":40654000681CB4214843FAF7D3F90099FAF7E5F8FAF707FA7881002C04DB204603E0002007B0F0BD60427F89791C88422ADB211E00DA61422046FAF70DF8211E00DA61426E\n"
+":40658000C91B48436946098A6C43091B081A84B26946488A0025001987B235742C4869460881FF2091300190022302AA29490095902002F065FB06000CD003466846028903\n"
+":4065C000244919E06846008A6C43001B84B26846408ADFE768460481FF249134022302AA1D4990200095019402F04AFB060008D0034668460289184918A0FEF7D9F93046A6\n"
+":40660000AEE7684607810095134D02232D1D02AA01942946902002F033FB040008D003466846028929460DA0FEF7C2F9204697E7FEF786FD002893D1012002F0C9FE8EE74A\n"
+":4066400018190020488001080000344390000020064800008E09000006C800004572726F722057726974696E6720307825303478203D2030782530347820657272203D203B\n"
+":40668000307825303278200A0D000000F3B500248BB0694607940C830C72054626460894002803D00C988000E84279D102200DB0F0BDA0000490285A7D49884277D101207D\n"
+":4066C000C00369460883FF27002091370090022306AA40210197902002F0D2FA060036D02346744A12E000206946088301200090022306AA40210197902002F0C1FA060062\n"
+":4067000028D0072E05D06B4A23460A326A496BA0ACE074A00599FEF74BF904986946401940380590C08F088301200090022306AA40210197902002F0A3FA060036D10598D5\n"
+":40674000C18F6FA0FEF734F90A2002F041FE63210591C8E76846008B000408D50A2002F037FE0598411EC9B205910028BBD10598002829D121466AA0FEF71AF9A000441913\n"
+":4067800004986288295A6EA0FEF712F920464038C28F818F74A0FEF70BF9E288A18801E080E004E07BA0FEF703F901267EE0844988420AD183A0FEF7FBF8FF20913002F0DE\n"
+":4067C00007FE86A0FEF7F4F86BE08A49884226D1049840194088012705901BE0E0198000411989786A461172FF229132002101920091295A012302AA902002F041FA0600D3\n"
+":4068000003D02C4A2346483280E7012002F0E0FD7F1CBFB205988742E0D9241841E076498842049827D14619F08871890004084307900898002804D11E2002F0C9FD0120C5\n"
+":4068400008901E2002F0C4FDFF210020913100900191B188042307AA902002F011FA060007D0144A23466432134964A0FEF7A0F81CE0E41C16E04019408869460883002019\n"
+":40688000FF210090913104980191295A022306AA902002F0F5F9060003D0064A2346703234E7641C0C98844200D202E73046FEE6FFFF0000A5140000C1530208202573284D\n"
+":4068C000256429204572726F7220696E2049324320436F6D6D206C6F6F70203D202575200A0D000020436F6D6D616E642054696D656F75742061742025686875200A0D0077\n"
+":4069000052652D69737375696E6720436F6D6D616E6420307825303478200A0D0000000020506F6C6C696E672054696D6564206F7574206C6F6F70203D202575200A0D00EA\n"
+":406940005B6C6F6F705D54696D65206F757420617420726567203D307825782076616C203D307825780A0D005B6C6F6F70202D315D54696D65206F75742061742072656743\n"
+":40698000203D307825782076616C203D307825780A0D00005B6C6F6F70202B315D54696D65206F757420617420726567203D307825782076616C203D307825780A0D000013\n"
+":4069C000AAAA0000456E7465726564203430306D732064656C61790A0D0000003430306D732064656C617920436F6D706C657465640A0D00222200001111000025732825E0\n"
+":406A0000642920204572726F7220696E2049324320436F6D6D206C6F6F70203D202575200A0D000070B54CA0FDF7C2FF01F0F8F8514C2079022801D0FEF7C0FAA079062808\n"
+":406A400001D001F04FF84C4E20367079002802D0FFF7EAFA07E00020FFF7E6FA050002D046A0FDF7A5FFB079002802D001F0FEFC07E0002001F0FAFC050002D047A0FDF780\n"
+":406A800097FF607A012806D0002001F067FD3088FFF7A4FC02E0012001F060FDE079012801D001F0A9FBA07A032801D000F000FF207A052801D0FFF733F9E07A002801D059\n"
+":406AC000FEF7AAFB607B022818D000280AD0012814D169213948FFF7D9FD05000ED01522920106E069213648FFF7D0FD050005D0344A354935A0FDF75BFF2BE0A07BFEF7B6\n"
+":406B00003BFD207B002801D0FFF7F2F9E07B00280BD1012002F05CFC002000F08FFEFA2002F056FC002000F089FE134E203E308FFEF7E0FD0A2002F04BFCA07A00F0B8FED9\n"
+":406B4000F06C002801D001F09FFBB06C002801D0FFF7BEFC284670BD526573746F72696E672053747265616D20616E6420436F6E74726F6C730A0D00381900204572726FA5\n"
+":406B8000722053657474696E67204374726C3A2048466C6970200A0D000000004572726F722073657474696E67206374726C3A2056466C6970200A0D00000000304D020856\n"
+":406BC000D44E0208490500002653020820257328293A202564204552524F52200A0D0000F0B585B000216A461181070AC0B25F490490888A80B20190088B80B20090084657\n"
+":406C000040300179019848438002050C009848438002040C0198F9F776FE06463846F9F772FE534F3946F9F7BDFD3146F9F77DFD06460098F9F767FE03900498F9F763FE72\n"
+":406C40003946F9F7AFFD0399F9F76FFD07463046F9F76EFE6908401A86B23846F9F768FE6108401A87B230B2002802DAA81985B2002638B2002802DAE01984B20027019A2C\n"
+":406C800071193819914202DD891A691A8DB20099884202DD401A201A84B202213548FFF7F5FC0090002807D0334A344934A0FDF77FFE009805B0F0BD364869460881FF21B1\n"
+":406CC0009131002001910090022302AA3249902001F0D6FF0028EDD168460681FF20913000260190022302AA2C490096902001F0C7FF0028DED168460581FF252749913574\n"
+":406D0000022302AA091D90200096019501F0B8FF0028CFD11F486946801C0881022302AA1D4990200096019501F0AAFF0028C1D1684607811949022302AA891C902000961A\n"
+":406D4000019501F09DFF0028B4D1684604811349022302AA891D90200096019501F090FF0028A7D1FEF7ECF9A4E700001819002000007F43408001081E1300009A530208D8\n"
+":406D800020257328293A202564204552524F52200A0D0000F84900008E090000F8C90000F8B5E54C0D22E08C920103465343E44DE24FE34A5D19D2583B4639682E791B79F6\n"
+":406DC000914201D1B34204D0DEA00096FDF7F0FD0CE0012B0CD1B968EA68914202DCAB68994207DAE7A0AB68FDF7E2FD0220F8BD0920F8BD78212085CF4E4843403E851924\n"
+":406E000028460A466C30CD49F9F708FCE34AE86E3746811A2037904270D027DCE04A811A904261D00FDCDF4A811A904252D005DCDD49401838D0012831D13FE00A2968D060\n"
+":406E400011292CD1B6E006296DD004DC012956D0042924D1A4E0072971D0D448C1421ED1706D0028686F78D0708763E1282970D00DDC012022296DD004DC06296BD0072988\n"
+":406E80000DD140E1242967D0262908D19CE0292976D02C2975D02D2974D02E2973D0C449C4A0FDF785FDA3E7686FFEF787F8040001D0C6A008E0686F38713BE1686FFEF7FE\n"
+":406EC00067FA040003D0CAA0FDF772FDE4E0686F78712FE1686F00F005FE040001D0CCA0F2E7686FB87125E1686FFFF79DF8060001D0D0A098E0686F60711BE136E0686F5D\n"
+":406F000001F0B4FA060001D0D2A08DE0686FA07110E1686F01F022FB040001D0D5A0D3E7686F787206E1686FFFF758FA060001D0DAA079E0686F2080FCE000E00DE0686FD2\n"
+":406F400001F05AF9040001D0DFA0BDE7686FF871F0E070E05BE0BEE05CE0FEF7CBFB040001D0E2A0B0E7686F3087E3E0706D00280AD0FF21686F3931884205DDB087D9E08A\n"
+":406F800063E094E09DE06BE0308F012806D1686FFEF7EEFB040001D0DEA095E7686FEDE7686F00F085FC040001D0E3A08CE7686FB872BFE0686FFEF7B3FE040001D0E7A0D8\n"
+":406FC00082E7686F3872B5E05B492031C978002904D0696F002901D0F873ABE0686FC0B200F02CFC040008D1642002F0F1F9686FC0B200F023FC040001D0DFA064E7308FC3\n"
+":40700000002802D1387AFEF78BFE686FE4E7686F20718FE0308F02280CD1686F80B2FFF7DFFD060004D0DBA0FDF7C2FC3046F8BD686F60807EE0686FFEF7EEF8040001D03D\n"
+":40704000DDA041E7686FF87274E0716D686F814270D000F0EDFA0028E9D1686F706569E0686F002804D001280AD0022862D115E06921DA48FFF70AFB04005BD0D84A07E069\n"
+":407080006921D848FFF702FB040053D0D44A08324749D5A0FDF78CFC2046F8BD6921D748FFF7F4FA040045D0CD4A1132F0E7686FFEF762FA040001D0D1A005E7686FB873E5\n"
+":4070C00038E0686FFEF714FF040001D0D2A0FBE6686F38732EE02074686FFFF7F9F9040001D0D4A0F0E6308F012809D1B08FFEF73FFB040004D0BA4A2D493632D2A0C9E763\n"
+":40710000686FB06416E06074686F01F0BDF8040001D0D3A0D8E6308F012809D1B08FFEF727FB040004D0AE4A21494832D1A0B1E7686FF0640020F8BD58190020F823002076\n"
+":40714000188101080A0D204374726C2049442030782530387820213D20307825303878206F72204374726C20547970652030782530327820213D20307825303278200A0D21\n"
+":40718000000000000A0A0D202564203E20256420203C202564200A0A0D00000002099A00140998000209980000F767FF1300FEFF5053020825733A20756E6B6E6F776E205F\n"
+":4071C0006374726C2069642E0A0D00004572726F722053657474696E67206374726C3A204272696768746E6573730A0D000000004572726F722053657474696E6720637442\n"
+":40720000726C3A20436F6E74726173740A0D00004572726F722053657474696E67206374726C3A2053617475726174696F6E200A0D0000004572726F722053657474696E78\n"
+":4072400067204374726C3A2048466C6970200A0D000000004572726F722073657474696E67206374726C3A2056466C6970200A0D000000004572726F722073657474696E5E\n"
+":4072800067206374726C3A2057686974652042616C616E6365200A0D000000004572726F722073657474696E67206374726C3A204D616E75616C2077686974652042616C15\n"
+":4072C000616E6365200A0D004572726F722073657474696E67206374726C3A2053686172706E657373200A0D000000004572726F722073657474696E67206374726C3A2024\n"
+":407300004578706F73757265204175746F200A0D000000004572726F722073657474696E67206374726C3A20455850204162736F6C757465200A0D004572726F7220736526\n"
+":407340007474696E67206374726C3A20506C696E652046726571200A0D0000004572726F722073657474696E67206374726C3A204761696E200A0D004572726F72207365CC\n"
+":407380007474696E67206374726C3A20484452200A0D00004572726F722073657474696E67206374726C3A20524F49204D616E75616C200A0D0000004572726F7220696E6C\n"
+":4073C0002073657474696E67206374726C3A20436F6C6F726B696C6C200A0D00D44E0208FB080000304D020820257328293A202564204552524F52200A0D00008C4B0208FA\n"
+":407400004572726F722077726974696E672044656E6F6973650A00004572726F722077726974696E6720477261797363616C650A000000004572726F722077726974696E73\n"
+":40744000672050414E0A000020257328293A2025642050414E204552524F52200A0D00004572726F722077726974696E672054494C540A0020257328293A20256420546972\n"
+":407480006C74204552524F52200A0D0070B50024424A434943A0FDF78BFA0020FEF72AF90A2001F095FF032000F002FA052001F08FFF26214148FFF7E9F8002807D0374A8D\n"
+":4074C000374917323EA0FDF773FA052070BDFDF737FE0028FAD1012001F07AFFFDF730FE0028F3D1FEF7A0FD050001D03CA005E0002000F0BBFF050004D041A0FDF758FA8A\n"
+":40750000284670BD46480521818103210186054601232035EB730021FF2201873932828702460826403216713E4E5680517191713D4E16801E2686650646416560363171E0\n"
+":40754000D1776B72B170F17038490D23224678269B0172436343CD581218D5665D182B797026B354012B01D12B695367641C172CEBD38189182251432C4A943A5358891841\n"
+":4075800003618A884261CA8882614A89C26189890162012000F052F9002070BD6D0400001253020820257328256429202D2053746172746564200A0D00000000F44A020834\n"
+":4075C00020257328293A202564205365742044656661756C7473204552524F52200A0D004572726F722053657474696E67204374726C3A2048466C6970200A0D00000000F9\n"
+":407600004572726F722073657474696E67206374726C3A2056466C6970200A0D0000000018190020808000009411000018810108F0B585B0002569468D81684E684C0D729E\n"
+":40764000002802D0012840D170E0642001F0C0FE68468681FF27002091370090022303AA60490197902001F00BFB050004D00346684682895B498BE0002069460872009083\n"
+":40768000012302AA31460197902001F0F9FA05007AD1FDF755FD002846D1642001F098FEFDF74EFD00283FD1608F218F884203D1E18FA28F914208D02087E18FA187002810\n"
+":4076C00004D0012810D0022818D084E0642001F07FFE208FFDF7B6FF002825D1962001F077FEFEF7C7F974E0642001F071FE208FFDF7A8FF002817D1962066E0642001F0FB\n"
+":4077000067FE208FFEF788FA00280DD1962001F05FFE334840304088FFF762FA04005AD031A0FDF745F9204605B0F0BD03270F72FF2091300190012302AA28490095902014\n"
+":4077400001F09EFA060008D003466846828923492EA0FDF72DF93046E6E7FDF7F1FC0028E2D1642001F034FE68460772FF201B4E9130761C0190012302AA31460095902087\n"
+":4077800001F07EFA050008D003466846828931461EA0FDF70DF92846C6E7FDF7D1FC0028C2D1208F6087A08FE08701212187FF213931884200D9A187642001F009FE208F45\n"
+":4077C000FDF740FF0028AFD1642001F001FEFEF7A1F90028A8D10020A6E7000090C80000181900208E0900004572726F722073657474696E67206374726C3A20524F4920BC\n"
+":407800004D616E75616C200A0D0000004572726F722057726974696E6720307825303478203D2030782530347820657272203D20307825303278200A0D00000010B5002805\n"
+":4078400002D0012816D107E050210E48FEF71EFF04000FD00C4A07E053210C48FEF716FF040007D0084A0D3209490AA0FDF7A0F8204610BDFDF764FC0028FAD1FDF760FCB6\n"
+":4078800010BD00007850020845110000B85102086D53020820257328293A2025642052455320496E6974204552524F52200A0D00F0B585B0064600246846048104737748B8\n"
+":4078C000008FFDF717FF0A2001F082FDFF259135002E27D0012E73D0022E71D0032E6ED16F4869460881022302AA6E4990200195009401F0C5F9070003D002466846018999\n"
+":4079000087E0322069460873012303AA644990200195009401F0B4F90700EED1FDF710FC002837D1604869460881022302AA5D4990200195009401F0A3F90700DDD1002ED7\n"
+":4079400010D0032069460881022302AA574990200195009401F094F9060006D002466846018913E068460481EEE751486946088102239F0302AA394690200195009401F01E\n"
+":407980007FF9060008D002466846017B49A0FDF70FF8304605B0F0BD45486946401C0881022302AA394690200195009401F068F9040067D002466846017B5CE000E068E095\n"
+":4079C000394869460881022302AA364990200195009401F055F907008FD168460481022302AA324990200195009401F049F9070083D12F4869460881022302AA990390204B\n"
+":407A00000195009401F03CF9070007D002466846017B28A0FCF7CCFF3846BBE724486946401C0881022302AA990390200195009401F026F90700E9D119486946088102232A\n"
+":407A400002AA184990200195009401F019F90700C2D1012E14D03C2069460873012303AA0F4990200195009401F00AF9040009D00246684601890FA0FCF79AFF204689E784\n"
+":407A80003220E9E7052001F0A3FCFDF759FB002880D1012001F09CFC00207BE718190020D1C800008E090000104B000010CB0000068600004572726F722057726974696E18\n"
+":407AC0006720307830393845203D2030782530347820657272203D20307825303278200A0D000000F1B586B00024684604720473314E0682FF259135022304AA2F49902000\n"
+":407B00000195009401F0BCF8070006D002466846018A2BA0FCF74CFF25E006980300FCF76EFF0B11070B0D2527292B2D2F31110068460472047305E00C2000E01A2069461B\n"
+":407B4000087208733146012302AA90200195009401F096F8070017D003466846027A314623A0FCF725FF384607B0F0BD2620E6E73620E4E74820E2E76520E0E79520DEE7B1\n"
+":407B8000CF20DCE7FF20DAE70B490123491C0E4603AA90200195009401F072F8040008D003466846027B314611A0FCF701FF2046DAE70020D8E7000028CA00008E09000026\n"
+":407BC0004572726F722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A0D0000004572726F722057726974696E6720307809\n"
+":407C000025303478203D2030782530327820657272203D20307825303278200A0D000000F0B585B0002768468781F74818214489F648F64B066820464843F54904960A5847\n"
+":407C4000401881889D688C46C1885B68964203D1634501D18D4208D06046029100900195EC480499FCF7A4FE1EE0E849037ACA680969012B07D0C3899A4202D843899A4231\n"
+":407C800009D2E5A00EE043899A4202D1808981420DD0EAA006E0028A914202D88089814205D2EEA0FCF784FE022005B0F0BDD64D14222846AC81D5491030F8F7AFFCE0B201\n"
+":407CC0000094FEF70DF90446ED48C078FF2801D1EB48C470CC4ECC486036F470008F022809D10020FDF7AEFC002804D0E54AE649E6A0FCF75DFEC44D2035002C1AD1B07892\n"
+":407D0000002802D1E87B002814D0E87BFFF796FD0190002808D10A2001F05AFBE87BFFF78DFD0190002804D0DFA0FCF741FE0198BBE7B770D248C470E2A00099FCF738FED6\n"
+":407D4000B14C009840340300FCF759FE06043D80C355E6B5E07F002807D00220FDF70AF9060002D0C74A213202E12621DC48FEF78DFC060005D0C34A2832EBE0FCF718FE9E\n"
+":407D800020E1052001F024FB2621D548FEF77EFC060002D0BB4A2F32DCE0E07F002807D00320FDF7E7F8060002D0C722D200DFE0E87B002805D0FFF741FD060001D0BAA055\n"
+":407DC000FEE0E77777E0E87B002806D0B0700020FFF734FD0600F2D100E0B770C04858219830FEF753FC060002D0A64A5B32B1E00120E0775FE0E07F002807D00220FDF7BA\n"
+":407E0000B9F8060002D09F4A6B32B1E02621B548FEF73CFC060002D09A4A72329AE0052001F0D6FA2621AF48FEF730FC060002D0944A79328EE0E07F0028C2D00320FDF713\n"
+":407E400099F80600BDD08F4A863291E0E07F002807D00220FDF78EF8060002D0894AB63286E0A04826219830FEF710FC060002D0844ABE326EE0052001F0AAFA994826212B\n"
+":407E80009830FEF703FC060002D07E4AC53261E0E07F002807D00320FDF76CF8060002D0784AD33264E0E777E87B002803D0FFF7C5FC060083D1FF209130012701900223E7\n"
+":407EC00003AA89490097902000F0DAFE060063D151E0E87B00280ED0B0700020FFF7AEFC0600E7D1052001F073FA0020FFF7A6FC0600DFD100E0B77058217C48FEF7C6FB97\n"
+":407F0000060002D05F4AFB3224E00020FFF796FC060000D16CE752E7E07F002806D00220FDF728F8060001D0714A21E026217148FEF7ACFB060002D06D4A08320AE00520EA\n"
+":407F400001F046FA26216B48FEF7A0FB060004D0674A0F324C494DA010E7E07F002800D12FE70320FDF706F80600F9D0604A1B32454961A002E768468189234802238186F1\n"
+":407F8000FF2091305849019003AA891C0097902000F076FE060004D002466846818963A0ECE66846818918484186818EC186806C00280CD02774FEF78BFA060004D067A0E8\n"
+":407FC000FCF7F6FC304670E6012001F001FA0E4EF06C00280BD0677400F056F9070003D063A0FCF7E5FCDAE0012001F0F1F9308F022807D16088FEF7F3FD070002D03C4A9A\n"
+":408000007032C8E0BEE0000018190020E42300208480010828AD0008496E76616C6964204672616D652052617465202D20434F4E54206D6178200A0D00000000496E7661AC\n"
+":408040006C6964204672616D652052617465202D2044495343200A0D00000000496E76616C6964204672616D652052617465202D20434F4E54206D696E200A0D000000008F\n"
+":4080800090000020FC0500003E53020820257328293A2025642052455320496E6974204552524F52200A0D004572726F722073657474696E67206374726C3A204844522094\n"
+":4080C0000A0D00002053747265616D204D6F6465203D20307825303478200A0D000000006C4602086448020814C80000944902080E070000F44A020820257328293A2025C1\n"
+":40810000642042696E20746F2043726F7020737769746368207265736F6C7574696F6E204552524F52200A0D000000004572726F722057726974696E672030783039384528\n"
+":40814000203D2030782530347820657272203D20307825303278200A0D0000004572726F722077726974696E672050414E0A00004572726F722077726974696E67205449F3\n"
+":408180004C540A00308F01280BD1B08FFDF7F0FA070006D0154A16491648FCF709FC384683E5E07F002801D0002000E0E87BFFF745FB040012D1308F002815D1322001F075\n"
+":4081C00007F9287AFDF7ACFD040007D1322001F0FFF8287AFDF7A4FD040005D005481C30FCF7E6FB204660E500205EE5890700003E5302088C8000083EB500216A46117219\n"
+":40820000144C0300FCF7FBFB06210804061D1F21182000E030201072FF20913000910190022302AA2146902000F02AFD05000ED003466846027A214607A0FCF7B9FB2846F8\n"
+":408240003EBD4820E7E76020E5E70A203EBD00203EBD0000A6C900004572726F722057726974696E6720307825303478203D2030782530327820657272203D2030782530F4\n"
+":408280003278200A0D000000F0B587B0444200216A46634891828089032842D0052840D00C2148435F490C22411802A8F8F7B6F9E12109012046F8F76DF9044668464189B1\n"
+":4082C0008720C000401AC10F08184010F8F710FB554D00902946F8F765FA0190F8F728FB06464F4F294600984037504D884254DD3046F8F7FDFA0199F8F764FB19D2787CCE\n"
+":4083000000280AD0701CB4214843F8F7F1FA0099F8F703FAF8F725FBA881002C04DB204603E0002007B0F0BD6042A9890091884205DC6946088A7443001BE88114E0002C34\n"
+":4083400001DB214600E061422046F8F723F9211E00DA6142009A7443891A48436946098A091B081AE8816946498A0024081828827C742F4869468882FF269136022305AA4A\n"
+":408380002C4990200196009400F07AFC070011D003466846828A27491DE001462248F8F701FAF8F7C5FA01462046F8F7F3F86946098AD6E7E88969468882022305AA1E497B\n"
+":4083C00090200196009400F05BFC070008D003466846828A184919A0FCF7EAFA3846A1E7288A69468882144D02232D1D05AA294690200196009400F043FC040008D00346FA\n"
+":408400006846828A29460DA0FCF7D2FA204689E7FCF796FE002885D1012000F0D9FF80E718190020488001080000344390000020064800008E09000004C800004572726FEA\n"
+":40844000722057726974696E6720307825303478203D2030782530347820657272203D20307825303278200A0D000000FEB5002569461F4C0D810222218E002817D091439D\n"
+":4084800021861C4869460881C711022302AA1A4990200197009500F0F3FB060009D002466846018915A0FCF783FA3046FEBD1143E6E7208E69460881022302AA0D4990201F\n"
+":4084C0000197009500F0DCFB040007D002466846018916A0FCF76CFA2046FEBDFCF730FE0028FAD1012000F073FF0020FEBD00001819002046C800008E0900004572726FFD\n"
+":40850000722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A0D0000004572726F722057726974696E672030784338343672\n"
+":40854000203D2030782530347820657272203D20307825303278200A0D000000F0B585B000256946FF240D8191340D73002842486A4610813E4E3F490095019444D0022303\n"
+":4085800002AA902000F07CFB070004D00246684601893AA026E0102069460873012303AA354990200095019400F06AFB070004D00246684601893DA014E0FCF7C1FD0028E0\n"
+":4085C00013D1022069460873012303AA434990200095019400F054FB070008D00246684601893FA0FCF7E4F9384605B0F0BD68460681022302AA990390200095019400F07B\n"
+":408600003FFB040024D131E0022302AA902000F037FB0700BAD1122069460873012303AA154990200095019400F02AFB0700BFD1FCF786FD0028D8D168460681022302AA63\n"
+":40864000990390200095019400F01AFB040007D002466846018922A0FCF7AAF92046C4E72B480088FDF7BAFE0028BED10020BCE7068600008E0900007DC900004572726F99\n"
+":40868000722057726974696E6720307830393845203D2030782530347820657272203D20307825303278200A0D0000004572726F722057726974696E6720307843393744DF\n"
+":4086C000203D2030782530347820657272203D20307825303278200A0D00000042C800004572726F722057726974696E6720307843383432203D20307825303478206572B2\n"
+":4087000072203D20307825303278200A0D000000581900200346002010B50246002B05D0002903D04B246401A14205D9002010BD9C5C6040521C92B28A42F9D310BD000038\n"
+":4087400013B5044B012269460348FAF72CFA00981CBD0000FFFF0000DC0E0020F8B51D461446002825D0002923D0002C21D04B267601052903D1114A1278002A09D022463B\n"
+":4087800000F0CAFE07000ED00DA0FCF711F93846F8BD1946FCF78AFB070001D012A0F4E70020208002E02088B04202D82888B04201D90220F8BD0020F8BD0000660000203F\n"
+":4087C0004572726F72206F6363757272656420696E2070726F636573735F636F6D6D616E64200A0D000000004572726F72206F6363757272656420696E20616E616C797A46\n"
+":40880000655F6C656E6774685F7061636B6574200A0D0000EFF30580002800D00120704770B5104CA078102808D00F49112814D0122814D001208871002070BD0B4D012190\n"
+":40884000286800F011FE002801D0072070BD0920A070286800F0E2FDEEE70320EBE70820E9E7000090000020E42200208400002070B50022002907D003230B80002829D02F\n"
+":408880000478FF2C02D004E0022070BD12490978017012490F258B78F126FF2B0DD0002B0BD0122B09D0F026112B06D0DB060025002B05DB4670857007E04570867004E099\n"
+":4088C000CB881E0A46708370CD800548005D002800D00246104670BD6400002090000020E422002070B500290AD0244B9B78102B0CD02348D90605D401210174084670BD4A\n"
+":40890000022070BD03210174084670BD0024172806D30C8001461BA0FCF74AF80A2070BD78235843204BC018034660331D7C012D02D00C80092070BD09240C80002A1AD0E1\n"
+":40894000C16E090E1170C16E090C5170C16E090A9170C16ED170197C1171197C01290AD1416F090E5171416F090C9171416F090AD171406F1072002070BD00009000002044\n"
+":40898000E422002020496E646578202D2030782530347820697320706F7574206F662072616E6765200A0D001819002070B50024002905D0172805D3002008800A2070BD78\n"
+":4089C000022070BD0D239B01344D584343191E79012E02D0022E05D101E0152601E09E890A360E80002A56D02958090E11702958090C5170295A090A9170285CD0701879A8\n"
+":408A000010711879012802D0022844D12CE09868000E50719868000C90711889000AD071187A1072D868000E5072D868000C90729889000AD072187B10731869000E5073CF\n"
+":408A40001869000C9073188A000AD073187C10745869000E50745869000C9074988A000AD074187D107516E0187A5071D868000E9071D868000CD0719889000A1072187B0C\n"
+":408A8000507205E0181920301119007C8872641CD868A042F6D8002070BD000018810108F8B500271546002905D0172805D3002008800A20F8BD0220F8BD0D229201504398\n"
+":408AC0001D4A861830793446A034012802D0022809D11CE0207E032801D0232002E0A07E400124300880002D24D03146983120222846F7F793FD2846217E20300170002107\n"
+":408B00004170617E8170217E032904D012E0002008800920F8BDA17EC17008E078013118401920222430BB31F7F778FD7F1CA07EB842F3DC0020F8BD188101087CB50446F1\n"
+":408B400000291FD002200880002C19D0FF21913101200191009002230B4A0021902000F08FF8050004D009A0FBF722FF0D484570054D0DA0083D2989FBF71AFF2889208046\n"
+":408B800000207CBD02207CBD980000204572726F7220434849502049442052656164200A0D000000E422002043484950204944203D20307825303478200A0D0030B5002919\n"
+":408BC00005D0062805D3002008800A2030BD022030BD1823294C584303191D7A012D20D015250D80002A47D02158090E11702158090C5170215A090A9170205CD0709888DD\n"
+":408C0000000A107118795071D888000A90719879D071187A1072187A012804D002282BD10CE00D25DDE75889000A5072987A90729889000AD072187B10731DE05889000AC3\n"
+":408C40005072987A90729889000AD072187B1073D889000A5073987B9073188A000AD073187C1074588A000A5074987C9074988A000AD074187D1075002030BD84800108E4\n"
+":408C8000FFB585B01D460E980F9B14460E4601280DD8042D0BD8002C09D0604A00215164320AF1B2002872D0012860D102E0022009B0F0BD6846027141710093022301AA80\n"
+":408CC00056480599F8F718FD07001FD05348F8F743FC0446059800903346224639465048FBF766FE4D4D28680168490849000160012000F06DFB28680168012211430160D8\n"
+":408D00001EE0042C7ED0032F7CD081E000200190029003904348092101702B4601AA3F480599F8F7ABFC07000DD03C48F8F714FC04460096024639463B48059BFBF738FEAC\n"
+":408D4000202C67D0DDE700F0E2FB364E02E0012000F03EFB30780928F9D0012D04D0022D06D0042D58D108E068460079207053E06846808840BA20804EE00198694600BADA\n"
+":408D8000000AC97900020843206045E0FFE720686C4622716171012D04D0022D04D0042D0DD105E0A0710AE0020AA271E07106E0020EA271020CE271020A2272607200931D\n"
+":408DC000AB1C01AA15480599F8F796FC040023D01248F8F7C1FB05460598009033462A4621461248FBF7E4FD0C4E30680168490849000160012000F0EBFA30680168012224\n"
+":408E0000114300E006E00160202D03D0032C01D005204DE707204BE7002049E7000E00207CAD00089000002024AE0008D0AD000870B5104D104CA878002807D0122805D01B\n"
+":408E4000112814D008202071082070BD0B4E0121306800F009FB0121002802D02171012070BDA970306800F0D9FA002070BD0320E9E7000090000020E42200208400002096\n"
+":408E800070B50E4CA078102807D0122805D0002803D00B490120487570BD0A4D0121286800F0E2FA002801D0072070BD0720A070286800F0B3FA002070BD00009000002020\n"
+":408EC000E422002084000020FFB583B01D46140006460AD021488178012010290AD0CA061F4904D4887407B0F0BD0220FBE703208874F8E7194A009001901432314690202B\n"
+":408F0000049BFFF7BDFE070006D016A0FBF750FD002020803846E6E70498012806D0022806D0042817D000202080DEE7032000E004202080002D0CD081B22846F7F787FBF0\n"
+":408F4000300A287005486E70818A090AA970007DE8700020C7E70620EBE7000090000020E4220020204572726F722052656769737465722052656164204572726F72200ACD\n"
+":408F80000D000000F8B504462348244E8078102807D0C00602D401207074F8BD03207074F8BD607821780002084345BA172D06D30A2070741AA0FBF7FBFC0A20F8BDA01C91\n"
+":408FC000F7F750FB00BA000A617900021A4F08433860A0793871012802D009207074F8BDE01DF7F73FFB00BA000AA17A00020843B8601248124CC5840121206800F034FA9B\n"
+":40900000002801D00720F8BD034805218170206800F004FA0020F8BD90000020E42200200A0A0A0D20455252434F44455F52414E4745200A0D000000F823002058190020BA\n"
+":4090400084000020F8B504000AD0284E2848B17810290BD0C90605D4012141720846F8BD0220F8BD032141720846F8BD61782278090211434DBA062D03D30A21417208465F\n"
+":40908000F8BD1C4F0121386800F0EEF9002801D00720F8BDA01CF7F7E5FA00BA010A60790902014314480160E179A2790902114349BA4160617A227A0902114349BA8160BD\n"
+":4090C000E17AA27A0902114349BAC160617B227B0902114349BA0161084845810420B070386800F09BF90020F8BD000090000020E422002084000020E423002018190020F4\n"
+":4091000070B50F4C0325A078102809D0C1060D4803D401210172084670BD0572032070BD094E0121306800F09FF9002801D0072070BDA570306800F071F9002070BD00005A\n"
+":4091400090000020E42200208400002070B50F4CA07810280AD0C1060D4803D40121C171084670BD0321C171084670BD094D0121286800F079F9002801D0072070BD02205F\n"
+":40918000A070286800F04AF9002070BD90000020E42200208400002070B50C4C0825A078112803D00A488575082070BD094E0121306800F059F9002801D0072070BDA570F1\n"
+":4091C000306800F02BF9002070BD000090000020E422002084000020F8B51F4F0446B8781E4E102804D0C00623D50320F074F8BD6078217800020843194D40BA2880A07817\n"
+":409200002872012806D0022806D0042814D00220F074F8BDE07804E02079E1780002084340BA104C68600121206800F01DF900280BD00120F074F8BDE01CF7F713FA00BA13\n"
+":40924000000AA17900020843EBE70620B870206800F0E4F80020F8BD90000020E4220020181900208400002092B03F493D488860002080F3108862B6F8F7EEFBFBF704F829\n"
+":40928000FAF7B0FDFAF7B2FCFAF706FDFAF72EFDFAF776FDFAF752FD3448C26A02210A43C262C06A324C0840009008200D9001200E900320002510900F950DA92046F7F7E7\n"
+":4092C00079FF002208212046F8F73AF82948C069009029480368C12228492948FBF768FB28A22BA12DA0FBF763FBF7F749FC1F4C40342069400002D50120F7F795FE206974\n"
+":409300000121C90508432061FAF788FD2B4C20222B486169F7F782F90520A0810BA80B9500F063F8206201210CA80C9500F062F8124960621422083101A8F7F76FF90021C9\n"
+":4093400001A800F0CDF80D49A06114221C3106A8F7F764F9002106A800F0C2F8E06100F03FF8FEE70004000800ED00E000100240000400500020024000000140A4AA00087E\n"
+":40938000C8AC000831333A30343A3036000000005365702020322032303231004275696C64204461746520616E642054696D653A202573202573200A0D000000600000201F\n"
+":4093C000C018002001460020842900D0C81C704710B5002800D1012000F0DCFE002010BD10B500F045FF002010BD10B5012000F0C3FF10BD10B5012901D0002010BD032243\n"
+":409400000021012000F0CAFF040004D000231A46194601F0B7F8204610BD000038B5002405460094FFF7F6F900280FD06946284601F034F9012801D0FF2038BD00980028BF\n"
+":409440000DD0012007490007486008E000231A461946284601F096F8012800D0FF24204638BD000000ED00E038B5054600200090002D11D00024481C10D0002900D00C464B\n"
+":40948000FFF7C8F9002814D06A460021284601F03FF9012815D104E0802038BD0024E443EEE7009800280ED0012008490007486009E0002322461946284600F091FF012830\n"
+":4094C00001D0FF2038BD002038BD000000ED00E010B501F0ABF9012801D000F03BFF10BD3EB5044608200D46205EFFF76BFF02A901910090208A2B4682B22168606801F066\n"
+":409500006DF9012801D000203EBD02983EBD10B500F034FE002010BDFFB5044689B000276846878007821D4616460297002C11D00A98C4420ED02178432903D0EFA0FBF767\n"
+":4095400037FA07E0F54861780278914205D0F4A0FBF72EFA02200DB0F0BD0A980B00C01E0590F648808807900A982218F448203A0078FBF744FA170D2A67AAFCFBFAF9F809\n"
+":40958000F7D8F6F6F6F6F6F5F4F3F2F1F0EFF600012802D0022804D087E201204003608029E0E84902980A5C201882700298401C02902028F6D32021A01CFFF7ABF80299A6\n"
+":4095C00061188870CF7024203AE0012802D002281DD06AE201A90020FFF7B0FA002804D0D9A0FBF7E5F968460782684680880102000A014361800221A01CFFF78BF8207148\n"
+":40960000677106203080CE4902200870F6E101A904A8FFF793FA0290002804D0CAA0FBF7C7F9684607826846008A010AA170E0700221A01CFFF76EF8207102986071062039\n"
+":40964000308062E2012802D0022826D05DE20692D17F0598039181B2A01CFFF75BF80399814207D006980A99C27FBFA0C91EFBF79FF939E0E178A27808021043AF4940BAE8\n"
+":409680008880002201A9FFF799FA40E0684681880802090A0843608080E0A21C01A90798FFF78CFA93E069468988A01CFFF732F86946898861188870694689880298611838\n"
+":4096C000C87069468888001D70E0012802D0022823D01AE2D17F0598039181B2A01CFFF719F80399814207D0AAA0FBF761F96846878002200290C9E7E178A27808021043C6\n"
+":409700008E4940BA8880002201A9FFF74FF902900028BBD068468780B8E7A21C01A90798FFF744F953E0012802D002284AD0ECE1D17F0598039181B2A01CFEF7EBFF039949\n"
+":40974000814215D093A0FBF733F968468780022002901DE0D6E1D2E1C7E1B8E16AE15AE191E0D4E17AE076E072E06EE041E03AE0E178A27808021043704940BA88800022FB\n"
+":4097800001A9FFF78DF90290002801D068468780684680880102000A014361800221A01CFEF7B8FF2071029860710620308064480178012912D002298BD068468088002869\n"
+":4097C00087D072E1A21C01A90798FFF769F90290002800D167E76846878064E76946898800297DD191E1FFF723FB55480770378059E152484088002810D06EA0FBF7D8F88B\n"
+":40980000FF20A0704D4841880A0AE270217103216A46918002210291478004E001A9A01CFFF726F8029069468988A01CFEF772FF694689886118887069468988029861186B\n"
+":40984000C87069468888001DFAE6FEF7E9FF5BE1FFF77CFC58E1FFF753FC55E1D17F0598039181B2A01CFEF755FF0399814206D048A0FBF79DF831495548488044E1A01C9C\n"
+":40988000FFF7E0FB40E1012802D0022835D00CE1D17F0598039181B2A01CFEF73BFF0399814207D03BA0FBF783F8684687800220029012E0E178A278080210431F4940BAF5\n"
+":4098C0008880002201A9FFF70DF80290002804D040A0FBF76DF8684687806846818800E08AE00802090A084360800221A01CFEF711FF207102986071CEE081E020496E769A\n"
+":40990000616C6964205369676E617475726520307825303278202121200A0D0065000020204944203D2030782530327820213D20307825303278200A0D00000088000020E1\n"
+":4099400066000020C01800204572726F7220696E2047657474696E672053656E736F72204944200A0D00000020435243204C656E677468203D203078253032782C206F722D\n"
+":40998000696720637263203D20307825303278200A0D00002043524320766572696669636174696F6E204572726F72202121200A0D0000004572726F7220696E204D435540\n"
+":4099C00020697473656C66202121200A0D0000000A2000004572726F7220696E2047657474696E67204374726C200A0D0000000069468988002955D0022101702F8054E099\n"
+":409A0000A21C01A90798FEF76DFF0290002800D109E7404856E0D17F0598039181B2A01CFEF778FE0399814200D021E7A01CFFF7A9FA69E0012802D0022838D035E0D17F43\n"
+":409A40000598039181B2A01CFEF764FE0399814202D0304840380FE0E178A278080210432D4A40BAD08021791170002301AAFFF72BFA002804D029A0FAF79AFF68468780C6\n"
+":409A8000684680880102000A014361800221A01CFEF740FE2071677106203080254801780129A5D0077005202880002053E51A48A31C017801AAC088FFF706FA029000280F\n"
+":409AC000A6D016A0FAF774FF68468780ABE6D17F0598039181B2A01CFEF71CFE03998142A3D1A01CFFF778FB0EE013A0FAF760FF174918A0FAF75CFFF7F7D4F904E0FFF72F\n"
+":409B0000BFF901E0FFF748FB37800A48CAE7092021E50000D4990008880000204572726F7220696E205265616420495350200A0D000000006600002046572055706474206D\n"
+":409B4000496E69746961746564200A0D00000000A50E0008204669726D776172655F757064617465203D20307825303878200A0D00000000F8B5134C0F46E6680546206836\n"
+":409B8000001D00F069FA681C07D1002F05D021680D48091D00F098FAF8BD2068751945602168B54204D2A06B091D00F075FAF8BD606B091D00F070FAA06A8542F7D2A56258\n"
+":409BC000F8BD00000C000020A0010020F8B5054600F086FA2A4CA068401CA0602068294F002803D06069002827D02CE02560A068012828D1002614207043C01900F03EFAD5\n"
+":409C0000761C072EF7D31F488C3000F037FA1D48A03000F033FA1B48B43000F02FFA1948C83000F02BFA1748DC3000F027FA15488C3060631430A06305E02068E96AC06AA6\n"
+":409C4000884200D82560606A401C60626864E86A2169884200D9206114214843C019291D00F032FA00F048FA6069002806D02068E96AC06A884201D200F080FAF8BD000054\n"
+":409C80000C000020C400002070B5114E114C18E000F014FB3068002817D000F09BFE00F01FFAF068C568281D00F0D6F9A068401EA0606068401E606000F01EFA284600F048\n"
+":409CC00056F860680028E3D170BD00F083FEF8E78C0100200C00002010B5026C0C46002A0CD0C1688B18C36041688B4201D2194601E00168C1602046F6F790FC10BDF8B536\n"
+":409D0000856B174604460026026C002A11D0002F19D0E068F6F782FCE168206C091AE1602268914202D26168081AE060022F17D019E02068002816D1606800F0E5FD0646FF\n"
+":409D4000002060600FE0A068F6F768FC216CA0684018A0606168884205D32068A06002E0002D00D06D1E6D1CA5633046F8BD10B50446006B00F0CEF9204600F0CBF910BD9D\n"
+":409D800003210E488902420705D0C01DC0080B4AC000821A891A0A4A0023411809C20839C908C900183A11604B600B600B1A0AC093600120C0075360D0607047B4010020FF\n"
+":409DC00058000020044CFFF75FFF20680128FAD900F0D4F9F7E70000C4000020FFB581B097000C9C0E460A9DA5223946206BF6F727FC206B3F1FC019C708FF00780701D064\n"
+":409E000072B6FEE72218315C20321175315C002902D0401C1028F5D32046403000260090C670072D00D30625E5622665201DE56400F02FF92046183000F02BF924610720C0\n"
+":409E4000401B6462A0616665009806763846049A019900F0F1F820600B98002800D0046005B0F0BD30B5114900E011460A688242FBD34B685C18844203D1406818184860B6\n"
+":409E8000084643681C18944209D1084C103C2468A24209D052689A1842600A6812680260814200D0086030BD0460F9E75800002010B5044600F014F9A06B002804D00024A5\n"
+":409EC00000F01AF9204610BD0124F9E70648416B0968002905D0416BC968C9684968816270470021C943FAE70C00002003480068401C72B600D0FEE7FEE700000800002032\n"
+":409F0000F8B5044600F0ECF8254640350526AE57274624370BE0606A00280AD0384600F027FD002801D000F04DF9761E76B2002EF1DC0027FF436F7100F0DEF800F0D0F888\n"
+":409F40000426AE572046103000900BE0206900280AD0009800F00CFD002801D000F032F9761E76B2002EF1DC2F7100F0C5F8F8BDF8B50546002700F0A1F9284E30680028C9\n"
+":409F800001D1FFF7FDFEF06805423FD1002D3DD00835680708D06807400F0821081A4519680701D072B6FEE7002D2FD0706885422CD81A48103001460C6801E020460C46F8\n"
+":409FC0006168A94202D221680029F7D131688C421CD007682168016060680837411B102908D96019420701D072B6FEE741606560FFF738FF61687068401A7060B26890424C\n"
+":40A0000000D2B060F0680143002003C400F0E2FC780701D072B6FEE73846F8BD4800002004490868002803D00868026D521C0265086870470C00002010B50124031F240600\n"
+":40A040001C601B1F1960191F024B0B60143940380A6010BDED9E00084368826801699A60836842685A604A68824201D182684A60002202610868401E08607047014608311C\n"
+":40A0800000224160D243C1608260016100210160704700210161704730B50B685A1C02D00246083202E0026904E02246546825689D42FAD953684B6099608A6051600861D7\n"
+":40A0C0000168491C016030BD42684A6093688B6093685960916008610168491C0160704772B604480168491C0160BFF34F8FBFF36F8F70470800002005490868002804D09A\n"
+":40A10000401E086000D162B6704772B6FEE700000800002070B500281AD004460D4D083C6068E968084201D172B6FEE72268002A01D072B6FEE78843606000F0BFF8606897\n"
+":40A140006968401868602046FFF78CFE00F042FC70BD00004800002010B506487D21C9000068F6F701FA0449401E48610720086110BD00000000002000E000E0012004497C\n"
+":40A1800000074860BFF34F8FBFF36F8F7047000000ED00E010B502000FD00948006B002801D072B6FEE700F089F800211046FFF7E1FC00F00FFC002801D1FFF7DFFF10BD73\n"
+":40A1C0000C00002001490120C86170470C00002010B50C46002809D0054909681831FFF75BFF01212046FFF7C5FC10BD72B6FEE70C00002070B5040025D0154DE06A2968AC\n"
+":40A20000C96A88421FD2A069002804DB28680721C06A081AA061E06A14220E4E504361698019814210D1201DFFF716FF2868C06AE0622969884200D928611421484380194A\n"
+":40A24000211DFFF741FF70BD2868C06AE06270BD0C000020C4000020002805D003490A6A0260C9684160704772B6FEE70C0000201CB50E4800240190234680220CA10094FB\n"
+":40A280000D4800F0ABFA012803D0401C0CD172B6FEE772B600210548C9432C38816201214161C46000F03EF81CBD00003800002049444C4500000000C59D00080248016B0C\n"
+":40A2C000491C0163704700000C00002010B51348016B002902D00121C16110BD0021C16101690F4A02E0002915D0491E14234B43D358002BF7D014234B439A18536814464F\n"
+":40A300005B6808345360A34201D15B685360DA680260016110BD72B6FEE700000C000020C400002010B50948016AFF22120411430162016A120211430162FFF70DFF04495A\n"
+":40A3400000200860F6F7C6F8002010BD00ED00E00800002010B5F6F7D1F8044600F076FA002803D001200349000748602046F6F7C9F810BD00ED00E010B50246002101208F\n"
+":40A3800000F00CF8041E07D00021416001600B460A46C16000F0F6F8204610BDF8B517460E46050016D0002E16D070435030FFF7DFFD04000CD020465030002E0ED0206006\n"
+":40A3C000266420460121E56300F0A6F84C2007552046F8BD72B6FEE70020E7E72460EFE7FFB5002583B0040003D00498002802D006E072B6FEE7206C002801D072B6FEE73F\n"
+":40A4000000F014FA0026002804D10598002801D072B6FEE7FFF764FEA76B002F26D0E56820460499FFF758FC0698002810D0E560606A002807D02046243000F099FA002816\n"
+":40A4400001D0FFF79BFEFFF757FE012007B0F0BD7F1EA7632068002802D1FFF7E1FD606020690028EFD020461030E6E70598002802D0002D03D006E0FFF73EFE27E06846A7\n"
+":40A48000FFF7EAFE0125FFF737FEFFF717FFFFF727FE2046403004214156491C00D1067105214156491C00D14671FFF725FE05A9684600F069F9002820460AD0FFF720FD1B\n"
+":40A4C00000F088FA2046FFF7F3FC0028A2D00020BCE7FFF7EDFC002818D02068002806D1FFF7FEFD6068FFF785FEFFF705FE204624300599FFF76CFE2046FFF701FD00F09F\n"
+":40A5000069FA002886D1FFF739FE83E72046FFF7F7FC00F05FFA7DE770B50D46040025D0FFF7DEFD216CE06B48432168411861600021A1632168A160E06B216C401E4843EE\n"
+":40A5400021684118E1600021C94320464030017141713038002D0BD0FFF790FD20462430FFF78CFDFFF7C8FD012070BD72B6FEE721690029F6D000F0FBF90028F2D0FFF712\n"
+":40A58000FDFDEFE7FFB5002683B01D46040003D00498002802D006E072B6FEE7206C002801D072B6FEE7022D04D1E06B012801D072B6FEE700F03AF90027002804D105982F\n"
+":40A5C000002801D072B6FEE7FFF78AFDA06BE16B884207D3022D05D00598002817D0002E18D01BE02A4620460499FFF788FB616A002903D02046243000F0BAF9002801D013\n"
+":40A60000FFF7BCFDFFF778FD012007B0F0BDFFF773FD22E06846FFF71FFE0126FFF76CFDFFF74CFEFFF75CFD2046403004214156491C00D1077105214156491C00D1477152\n"
+":40A64000FFF75AFD05A9684600F09EF8002806D02046FFF755FC00F0BDF90020D5E7FFF73FFDA06BE16B884210D1FFF745FD204610300599FFF7ACFD2046FFF741FC00F0A6\n"
+":40A68000A9F90028A0D1FFF779FD9DE7FFF734FD2046FFF735FC00F09DF995E770B50D46040004D0206C002803D072B6FEE772B6FEE72068002804D16068002801D072B65A\n"
+":40A6C000FEE7F5F71BFFA26B0646E06B904219D92146403105200856521CA263421C03D0401C487101240EE0606A0028FAD02046243000F03DF90028F4D0002DF2D0012048\n"
+":40A700002860EFE700243046F5F7FCFE204670BDF7B582B0040003D00398002802D006E072B6FEE7206C002801D072B6FEE7F5F7E5FE0090A66B002E1FD02046403004254D\n"
+":40A740004557074620460399FFF7C6FA761EA663681C03D06D1C3D7101240FE020690028FAD02046103000F003F90028F4D004980028F1D001210160EEE700240098F5F77B\n"
+":40A78000C1FE204605B0F0BD70B50D4604001AD0002D1AD0FFF7A4FC0F4AD1682868431C0FD02368126A934202D062688A420ED96268891A81420AD2401A28602046FFF72A\n"
+":40A7C0004BFD002404E072B6FEE772B6FEE70124FFF792FC204670BD0C000020FFB585B0164690000F9FFFF7C3FB05001AD05C20FFF7BEFB040012D0256300210E9803916D\n"
+":40A800000197009002943246089B06990598FFF7E5FA2046FFF7DAF9012009B0F0BD2846FFF778FC0020C043F7E7000006484169002904D0006B002803D00020704701204C\n"
+":40A8400070470220704700000C000020F8B52C4C0027206B002808D0A069401CA061E069002800D001273846F8BDE668761CE6600ED1606B0068002801D072B6FEE7606B3A\n"
+":40A88000A16B6163A063206A401C2062FFF71EFBA06A86420AD3606B0068002810D0606BC068C568686886420DD2A06220681421C06A4843134908580128D0D90127CEE7EE\n"
+":40A8C0000020C043F1E7281DFFF7C6FBA86A002803D028461830FFF7BFFBE86A2169884200D920611421484306494018291DFFF7EBFBE86A2168C96A8842CCD30127CAE715\n"
+":40A900000C000020C400002070B500210446002828D0154D2868844201D072B6FEE7206D002808D0401E2065E36CE26A9A4219D0002802D016E072B6FEE7201DFFF78CFB3A\n"
+":40A94000E06C0721E062081AA061E06A2969884200D928611421484304494018211DFFF7B3FB0121084670BD0C000020C400002070B5C068C468002C0BD020461830064688\n"
+":40A98000FFF76AFB114D286B002804D0314610480FE072B6FEE7201DFFF75EFBE06A2969884200D92861142148430949B4394018211DFFF789FBE06A2968C96A884202D92E\n"
+":40A9C0000120E86170BD002070BD00000C00002078010020F8B5284C0025206B2E46002808D0FFF77DFB206B401E2063206B002802D03DE072B6FEE7A168204F00291DD151\n"
+":40AA000036E0F868C56828461830FFF725FB281DFFF722FBE86A2169884200D92061142148431649B4394018291DFFF74DFBE86A2168C96A884201D30120E0613868002891\n"
+":40AA4000DFD1002D01D0FFF741FAA569002D09D00127FFF7FBFE002800D0E7616D1EF8D10020A061E069002802D00126FFF786FBFFF742FB3046F8BD0C0000207801002013\n"
+":40AA800000000000000000000102030406070809030406080C1018203000000000010203040000006D61696E000000001CAD000811410008000000000000000000010000FA\n"
+":40AAC00010AD000821370008000000000000000080000000537461727444656661756C745461736B0048414C5F4932435F536C617665547843706C7443616C6C6261636B93\n"
+":40AB00000048414C5F4932435F536C617665527843706C7443616C6C6261636B0048414C5F4932435F4572726F7243616C6C6261636B0048414C5F4932435F4164647243E8\n"
+":40AB4000616C6C6261636B0048414C5F4932435F4C697374656E43706C7443616C6C6261636B0048414C5F4932435F4D656D547843706C7443616C6C6261636B0048414CFA\n"
+":40AB80005F4932435F4D656D527843706C7443616C6C6261636B0048414C5F4932435F41626F727443706C7443616C6C6261636B0048414C5F4750494F5F455854495F4309\n"
+":40ABC000616C6C6261636B004669726D776172655F557064617465004F7074696F6E4279746550726F6700424642325F636865636B5F656E61626C650000000020257328E8\n"
+":40AC0000256429204572726F72204F6363757272656420696E2048414C5F4932435F536C617665527843706C7443616C6C6261636B2020537461747573203D2030782530D6\n"
+":40AC400032782C20675F736C6176655F6E6578745F72785F6C656E203D20257520200A0D0000000020257328256429204572726F72204F6363757272656420696E204841D7\n"
+":40AC80004C5F4932435F536C617665547843706C7443616C6C6261636B2020737461747573203D2030782530327820675F736C6176655F6E6578745F72785F6C656E203DFA\n"
+":40ACC000202575200A0D000025732825642920446562756720496E69746961746564205359534346475F4346475231203D203078253038782020464C4153482D3E4F505458\n"
+":40AD000052203D20307825303878200A0D00000049535054687265616400000064656661756C745461736B00496E76616C696420466F726D6174202D20307825303878201A\n"
+":40AD4000213D20307825303878202C20205769647468202D2025687520213D20256875202C20486569676874202D2025687520213D20256875200A0D000000000A0D205279\n"
+":40AD8000454144204D4173746572205472616E736D6974204572726F7220212120202D20307825303278203078253038782020524547203D2030782530347820666F722093\n"
+":40ADC000736C61766520307825303278200A0D000A0D205752495445204D4173746572205472616E736D6974204572726F7220212120202D203078253032782030782530BD\n"
+":40AE0000387820524547203D2030782530347820666F7220736C61766520307825303278200A0D000A0D204D41737465722052656365697665204572726F72202121202D5F\n"
+":40AE4000203078253032782030782530387820666F7220736C617665203078253032782020666F7220524547202D20307825303478200A0D0000000098AE00080000002095\n"
+":40AE8000AC000000184A000844AF0008AC000020C4270000284A000880841E0000000000AAAAAAAA0000000000000000000000000000000000000000000000000000000086\n"
+":40AEC000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005FFFF00004F\n"
+":40AF0000000000000000000000000000C0FF0208000000000000000000000000000000000000000000000000000000FF010000000000000000000000000000000000000048\n"
+":04AF4000000000000D\n"
+":020000040801F1\n"
+":408040008E09E849E8C91C008002E00102037F02F401DF010005C003C201FF040401BF03C0031C026202BF03D6011B020000000000000000000000000005D002C201FF04C0\n"
+":408080007C01CF02555956598002E00101003C00010000000000000000000000555956598002E00101002D0001000000000000000000000055595659C0031C0201003A000C\n"
+":4080C00001000000000000000000000055595659C0031C0201001E00010000000000000000000000555956590005D00201002D000100000000000000000000005559565961\n"
+":408100008007380401001E000100000000000000000000000000000000099800010000000100000005000000020000000100000000000000000000000000000000000000B1\n"
+":4081400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FF\n"
+":4081800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BF\n"
+":4081C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007F\n"
+":40820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003E\n"
+":4082400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FE\n"
+":4082800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BE\n"
+":4082C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007E\n"
+":40830000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003D\n"
+":4083400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FD\n"
+":4083800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BD\n"
+":4083C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007D\n"
+":40840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003C\n"
+":408440000000000000000000000000000000000000000000000000000109980001000000010000000A0000000300000001000000000000000000000000000000000000004A\n"
+":4084800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BC\n"
+":4084C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007C\n"
+":40850000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003B\n"
+":4085400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FB\n"
+":4085800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BB\n"
+":4085C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007B\n"
+":40860000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003A\n"
+":4086400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FA\n"
+":4086800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BA\n"
+":4086C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007A\n"
+":408700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000039\n"
+":4087400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F9\n"
+":408780000000000000000000000000000000000000000000000000000209980001000000010000000A00000006000000010000000000000000000000000000000000000003\n"
+":4087C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000079\n"
+":408800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038\n"
+":4088400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F8\n"
+":4088800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B8\n"
+":4088C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000078\n"
+":408900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037\n"
+":4089400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F7\n"
+":4089800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B7\n"
+":4089C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077\n"
+":408A00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036\n"
+":408A400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F6\n"
+":408A800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B6\n"
+":408AC00000000000000000000000000000000000000000000000000014099800010000000000000001000000000000000100000000000000000000000000000000000000BE\n"
+":408B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035\n"
+":408B400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F5\n"
+":408B800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B5\n"
+":408BC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000075\n"
+":408C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034\n"
+":408C400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F4\n"
+":408C800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B4\n"
+":408CC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000074\n"
+":408D00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033\n"
+":408D400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F3\n"
+":408D800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B3\n"
+":408DC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000073\n"
+":408E00000000000000000000000000000000000000000000000000001509980001000000000000000100000000000000010000000000000000000000000000000000000079\n"
+":408E400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F2\n"
+":408E800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B2\n"
+":408EC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000072\n"
+":408F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000031\n"
+":408F400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F1\n"
+":408F800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B1\n"
+":408FC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000071\n"
+":409000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030\n"
+":4090400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F0\n"
+":4090800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B0\n"
+":4090C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070\n"
+":40910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002F\n"
+":409140000000000000000000000000000000000000000000000000000C0998000100000000000000010000000100000001000000000000000000000000000000000000003E\n"
+":4091800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AF\n"
+":4091C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006F\n"
+":40920000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002E\n"
+":4092400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000EE\n"
+":4092800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AE\n"
+":4092C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006E\n"
+":40930000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002D\n"
+":4093400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ED\n"
+":4093800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AD\n"
+":4093C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006D\n"
+":40940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002C\n"
+":4094400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000EC\n"
+":409480000000000000000000000000000000000000000000000000001A09980001000000C409000070170000941100001900000000000000000000000000000000000000DE\n"
+":4094C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006C\n"
+":40950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002B\n"
+":4095400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000EB\n"
+":4095800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AB\n"
+":4095C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006B\n"
+":40960000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002A\n"
+":4096400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000EA\n"
+":4096800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AA\n"
+":4096C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006A\n"
+":409700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000029\n"
+":4097400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E9\n"
+":4097800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A9\n"
+":4097C0000000000000000000000000000000000000000000000000001B099800010000000100000005000000010000000100000000000000000000000000000000000000A4\n"
+":409800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000028\n"
+":4098400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E8\n"
+":4098800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A8\n"
+":4098C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000068\n"
+":409900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027\n"
+":4099400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E7\n"
+":4099800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A7\n"
+":4099C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000067\n"
+":409A00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026\n"
+":409A400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E6\n"
+":409A800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A6\n"
+":409AC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066\n"
+":409B000000000000000000000000000000000000000000000000000001099A000100000000000000020000000000000001000000000000000000000000000000000000007D\n"
+":409B400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E5\n"
+":409B80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004578706F737572652C204175746F000065\n"
+":409BC0000000000000000000000000000000000003000346756C6C20464F56204175746F204D6F646500000000000000000000000000004D616E75616C204D6F6465000060\n"
+":409C000000000000000000000000000000000000000000524F49204261736564204175746F204D6F64650000000000000000000000000000000000000000000000000000DD\n"
+":409C400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E4\n"
+":409C800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A4\n"
+":409CC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064\n"
+":409D00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000023\n"
+":409D400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E3\n"
+":409D800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A3\n"
+":409DC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063\n"
+":409E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022\n"
+":409E400000000000000000000000000000000000000000000000000002099A00010000000A000000881300003801000001000000000000000000000000000000000000005D\n"
+":409E800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A2\n"
+":409EC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062\n"
+":409F00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021\n"
+":409F400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E1\n"
+":409F800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A1\n"
+":409FC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000061\n"
+":40A000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020\n"
+":40A0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E0\n"
+":40A0800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A0\n"
+":40A0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060\n"
+":40A10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001F\n"
+":40A1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DF\n"
+":40A1800000000000000000000000000000000000000000000000000018099800010000000000000003000000030000000100000000000000000000000000000000000000DE\n"
+":40A1C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005F\n"
+":40A20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001E\n"
+":40A2400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DE\n"
+":40A28000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009E\n"
+":40A2C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005E\n"
+":40A30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001D\n"
+":40A3400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DD\n"
+":40A38000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009D\n"
+":40A3C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005D\n"
+":40A40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001C\n"
+":40A4400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DC\n"
+":40A48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009C\n"
+":40A4C0000000000000000000000000000000000000000000000000001309980001000000010000000800000005000000010000000000000000000000000000000000000098\n"
+":40A50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001B\n"
+":40A5400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DB\n"
+":40A58000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009B\n"
+":40A5C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005B\n"
+":40A60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001A\n"
+":40A6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DA\n"
+":40A68000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009A\n"
+":40A6C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005A\n"
+":40A700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019\n"
+":40A7400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D9\n"
+":40A780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000099\n"
+":40A7C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000059\n"
+":40A8000000000000000000000000000000000000000000000000000028099A0001000000000000000100000001000000010000000000000000000000000000000000000049\n"
+":40A8400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D8\n"
+":40A8800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048445200000000000000000000000000BA\n"
+":40A8C000000000000000000000000000000000000300025344520000000000000000000000000000000000000000000000000000000000484452000000000000000000008C\n"
+":40A900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000017\n"
+":40A9400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D7\n"
+":40A980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000097\n"
+":40A9C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057\n"
+":40AA00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016\n"
+":40AA400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D6\n"
+":40AA80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096\n"
+":40AAC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056\n"
+":40AB00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000015\n"
+":40AB400000000000000000000000000000000000000000000000000029099A0001000000000000000100000000000000010000000000000000000000000000000000000006\n"
+":40AB80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000095\n"
+":40ABC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005452494747455200000000000000000041\n"
+":40AC000000000000000000000000000000000000030002494E5445524E414C00000000000000000000000000000000000000000000000045585445524E414C00000000004F\n"
+":40AC400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D4\n"
+":40AC80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000094\n"
+":40ACC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000054\n"
+":40AD00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013\n"
+":40AD400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D3\n"
+":40AD80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000093\n"
+":40ADC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000053\n"
+":40AE00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012\n"
+":40AE400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D2\n"
+":40AE800000000000000000000000000000000000000000000000000024099A0001000000080000004000000008000000080000000000000000000000000000000000000072\n"
+":40AEC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052\n"
+":40AF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000524F492057696E646F772053697A6500D4\n"
+":40AF400000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B0\n"
+":40AF80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000091\n"
+":40AFC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000051\n"
+":40B000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010\n"
+":40B0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D0\n"
+":40B080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000090\n"
+":40B0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050\n"
+":40B10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F\n"
+":40B1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CF\n"
+":40B18000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008F\n"
+":40B1C00000000000000000000000000000000000000000000000000026099A000100000000000000FFFF000080800000010000000000000000000000000000000000000086\n"
+":40B20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E\n"
+":40B24000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000524F49204578706F73757265205B782C4A\n"
+":40B28000795D000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000097\n"
+":40B2C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004E\n"
+":40B30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000D\n"
+":40B3400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CD\n"
+":40B38000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008D\n"
+":40B3C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004D\n"
+":40B40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C\n"
+":40B4400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CC\n"
+":40B48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008C\n"
+":40B4C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004C\n"
+":40B500000000000000000000000000000000000000000000000000002A099A0001000000000000000500000000000000010000000000000000000000000000000000000037\n"
+":40B5400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CB\n"
+":40B58000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000436F6C6F72204B696C6C000000000000E0\n"
+":40B5C000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002A\n"
+":40B60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000A\n"
+":40B6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CA\n"
+":40B68000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008A\n"
+":40B6C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004A\n"
+":40B700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009\n"
+":40B7400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C9\n"
+":40B780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000089\n"
+":40B7C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049\n"
+":40B800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008\n"
+":40B840000000000000000000000000000000000000000000000000002B099A00010000000000000001000000000000000100000000000000000000000000000000000000F7\n"
+":40B880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088\n"
+":40B8C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004672616D652053796E63204D6F646500FB\n"
+":40B900000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005\n"
+":40B9400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C7\n"
+":40B980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000087\n"
+":40B9C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000047\n"
+":40BA00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006\n"
+":40BA400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C6\n"
+":40BA80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000086\n"
+":40BAC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046\n"
+":40BB00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005\n"
+":40BB400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C5\n"
+":40BB800000000000000000000000000000000000000000000000000030099A00010000000000000002000000020000000100000000000000000000000000000000000000AC\n"
+":40BBC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045\n"
+":40BC00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004C656E7320436F7272656374696F6E201A\n"
+":40BC40004D6F64650000000000000000000000000300035761726D204C6967687400000000000000000000000000000000000000000000427269676874204C696768740012\n"
+":40BC800000000000000000000000000000000000000000446179204C696768740000000000000000000000000000000000000000000000000000000000000000000000004E\n"
+":40BCC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044\n"
+":40BD00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003\n"
+":40BD400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C3\n"
+":40BD80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000083\n"
+":40BDC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000043\n"
+":40BE00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002\n"
+":40BE400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C2\n"
+":40BE80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000082\n"
+":40BEC0000000000000000000000000000000000000000000000000002E099A000100000000000000010000000100000001000000000000000000000000000000000000006D\n"
+":40BF00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001\n"
+":40BF400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044652D4E6F6973650000000000000000ED\n"
+":40BF80000000000000000000000000000000000003000244697361626C6500000000000000000000000000000000000000000000000000456E61626C650000000000000081\n"
+":40BFC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041\n"
+":40C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n"
+":40C0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C0\n"
+":40C080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080\n"
+":40C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040\n"
+":40C1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FF\n"
+":40C1400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BF\n"
+":40C18000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007F\n"
+":40C1C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003F\n"
+":40C200000000000000000000000000000000000000000000000000002F099A0001000000000000000100000000000000010000000000000000000000000000000000000029\n"
+":40C2400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BE\n"
+":40C280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005370656369616C204566666563747300DD\n"
+":40C2C000000000000000000000000000000000000300024E6F726D616C0000000000000000000000000000000000000000000000000000477261797363616C650000000035\n"
+":40C3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FD\n"
+":40C3400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BD\n"
+":40C38000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007D\n"
+":40C3C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003D\n"
+":40C4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FC\n"
+":40C4400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BC\n"
+":40C48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007C\n"
+":40C4C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003C\n"
+":40C5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FB\n"
+":40C5400000000000000000000000000000000000000000000000000008099A0001000000C01CF6FF40E3090000000000100E000000000000000000000000000000000000F4\n"
+":40C58000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007B\n"
+":40C5C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003B\n"
+":40C6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FA\n"
+":40C6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BA\n"
+":40C68000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007A\n"
+":40C6C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003A\n"
+":40C7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F9\n"
+":40C7400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B9\n"
+":40C780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000079\n"
+":40C7C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000039\n"
+":40C8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F8\n"
+":40C8400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B8\n"
+":40C8800000000000000000000000000000000000000000000000000009099A0001000000C01CF6FF40E3090000000000100E000000000000000000000000000000000000B0\n"
+":40C8C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000038\n"
+":40C9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F7\n"
+":40C9400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B7\n"
+":40C980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077\n"
+":40C9C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037\n"
+":40CA000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F6\n"
+":40CA400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B6\n"
+":40CA80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000076\n"
+":40CAC0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000036\n"
+":40CB000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000F5\n"
+":40CB400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000B5\n"
+":40CB80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000075\n"
+":40CBC0000000000000000000000000000000000000000000000000008E09007C00FC000002FC540040000687FFFFFFFF820901008A09504750C7F1C052C7EA0C54C7401310\n"
+":40CC000056C7CF7558C7FFFF5AC7A8A15CC7C48D5EC70B0E60C7D11062C704D864C704AD66C7CF7068C701006AC7067C6CC740786EC70F0E70C7111172C700D874C7EE0C46\n"
+":40CC400076C7600778C704AD7AC731057CC740137EC7E07880C700D982C70AF084C7CF7086C7FFFF88C79CC78AC735788CC741808EC7008090C702E192C740A094C7F109DD\n"
+":40CC800096C7948098C7E07F9AC700D89CC7FFFF9EC760C1A0C7FFFFA2C750C78E09000000FC300002FC380104FC03A106FC040208FC540040000287FFFFFFFF40000187B5\n"
+":40CCC000FFFFFFFF00FC540002FC200640000687FFFFFFFF820901008A09A447A4C7F1C0A6C7CF71A8C7FFFFAAC730B5ACC74391AEC7CF70B0C7FFFFB2C734ADB4C759B017\n"
+":40CD0000B6C71E0AB8C7200EBAC70D91BCC7CF72BEC7FFFFC0C7B0B5C2C718B2C4C73892C6C71792C8C70920CAC74000CCC718B2CEC7D1C0D0C7E07ED2C7E078D4C7F1C033\n"
+":40CD4000D6C75E0CD8C74013DAC7CF76DCC7FFFFDEC730B5E0C72A96E2C70A20E4C7802FE6C7FFFFE8C768A1EAC76996ECC75269EEC7AC86F0C7052BF2C7BE00F4C7170D70\n"
+":40CD8000F6C7451EF8C7412DFAC7C011FCC71078FEC7092000C8C00002C8107F04C80BB606C807BF08C820F00AC8CF700CC8FFFF0EC894AD10C81C8812C8862014C8FF0E9A\n"
+":40CDC00016C8422818C8BE801AC8E8961CC80BF41EC8152520C8401022C861B824C8D60C26C8601328C848712AC810782CC809272EC8001030C8E9F132C801E734C8EBB662\n"
+":40CE000036C8C60C38C860133AC8156D3CC823863EC8107140C8CA2742C8061044C8CA2746C8451048C8176D4AC8B20C4CC860134EC8E97150C80AA652C8059654C805285D\n"
+":40CE400056C8FE0358C841295AC8C0715CC80DB65EC81E1060C8002162C8390464C8601366C80CB668C8F1C06AC8BE0B6CC840136EC8CE0C70C8C00D72C8CF7574C8FFFF0C\n"
+":40CE800076C8B4AD78C83A707AC822957CC8CF777EC8FFFF80C8B0B582C80A8784C8CF7686C8FFFF88C830B58AC865968CC830708EC8CA2190C80D0092C8039694C8CF7211\n"
+":40CEC00096C8FFFF98C8F4AC9AC86C789CC8BC129EC88000A0C88620A2C8FF0EA4C84228A6C8BE80A8C80A22AAC8402EACC80CF2AEC84995B0C81C97B2C8150AB4C80100EE\n"
+":40CF0000B6C84386B8C82A70BAC8052ABCC83E00BEC84129C0C8C071C2C807F0C4C84896C6C82A70C8C8052ACAC83E00CCC82F70CEC81A70D0C84129D2C80002D4C83860AD\n"
+":40CF4000D6C84E0AD8C8E010DAC808D9DCC80FB6DEC84A70E0C8420AE2C8E010E4C808D9E6C810B6E8C80A70EAC83A0AECC8E010EEC808D9F0C83096F2C88220F4C81C0043\n"
+":40CF8000F6C83860F8C84996FAC812B6FCC831B6FEC8402A00C9000202C9586004C91E0A06C9E01008C908D90AC90A200CC9802F0EC9000010C9000812C9319614C9022089\n"
+":40CFC00016C9000418C938601AC911B61CC90A871EC90B0A20C9042022C90F9624C910F026C9427028C961B82AC9D20B2CC960132EC94A7130C9402832C9010234C93860A6\n"
+":40D0000036C9EE0938C9E0103AC908D93CC930963EC9022040C9000442C9386044C9D21E46C9041048C90D954AC945954CC923954EC90CB850C94C7952C95A7154C92F7198\n"
+":40D0400056C9B60B58C960135AC90A205CC9402E5EC92F2360C9082062C9079564C90CB866C9A60B68C960136AC90A716CC910786EC9402970C9412172C927B974C9727175\n"
+":40D0800076C9CA2178C9C6047AC948207CC900087EC90EB680C9049582C92AB684C95B9786C90EB888C9042A8AC9BE048CC97E0B8EC9601390C92F7192C9F10294C9601384\n"
+":40D0C00096C91AB798C9F1C09AC9920A9CC940139EC9320BA0C9C003A2C90A22A4C9802FA6C9FFFFA8C9F4ACAAC90876ACC9CF75AEC9FFFFB0C930B5B2C9D112B4C980203E\n"
+":40D10000B6C92395B8C95209BAC9E00DBCC9C972BEC905B5C0C92495C2C90395C4C90A20C6C9802FC8C9FFFFCAC968A1CCC92210CEC90F21D0C90C79D2C9C971D4C900D8F0\n"
+":40D14000D6C92777D8C96E0DDAC96013DCC908DADEC9E973E0C96A0CE2C96013E4C900DAE6C93A71E8C93E09EAC9E00DECC9D21AEEC94420F0C9CF76F2C9FFFFF4C9B0B56B\n"
+":40D18000F6C91CB6F8C92410FAC98020FCC9E495FEC935E800CA760902CAE00D04CAE97006CA2A1208CA01210ACA00DA0CCA10710ECACA2710CA061012CACA2714CA45107D\n"
+":40D1C00016CA096F18CA30121ACA01201CCA17B61ECA442120CA800322CA1D7824CA02E026CA862128CAFE032ACA0F222CCA02002ECA24B930CA00D832CA02E134CA0F2096\n"
+":40D2000036CA400038CA4C783ACA2E123CCA80203ECA042840CA7E0E42CA422944CA007146CA3BB848CA27704ACABA094CCAE00D4ECA45B850CA1A7052CAB20954CAE00D1D\n"
+":40D2400056CAE97058CA23955ACA08775CCA05295ECA3E0460CA281E62CA401E64CA06F066CA096F68CA17B66ACA1E106CCA00216ECA0AA670CA096F72CA16B674CA1696F0\n"
+":40D2800076CA259578CA07B87ACA920A7CCA60137ECA1A7180CA03A582CA029584CA350886CA1E0188CA052F8ACA7E148CCA2F708ECA6E0A90CA601392CA3C9694CA660A3E\n"
+":40D2C00096CA601398CA0A719ACA08769CCAE9709ECA5E0AA0CA6013A2CA0A71A4CA81E0A6CA01D9A8CACA21AACA0D00ACCA3078AECA29B5B0CAD170B2CACA26B4CA0D101C\n"
+":40D30000B6CAC8B5B8CAD101BACA4013BCCAF1C0BECAE1C5C0CACF75C2CAFFFFC4CA30B5C6CA2195C8CACF72CACAFFFFCCCA68A1CECA5F09D0CA5E02D2CA2412D4CA810060\n"
+":40D34000D6CA2BE9D8CA80E0DACA01DBDCCA5A15DECA8110E0CAC07BE2CA4B0BE4CA4000E6CACF71E8CAFFFFEACAF4ACECCA8A19EECAC200F0CA04E8F2CA00D8F4CA0FB2D4\n"
+":40D38000F6CA05F0F8CA0D92FACA0FB2FCCA0E92FECA10B200CBC41502CB801004CB84E806CB960D08CBC00D0ACB03F00CCB32FF0ECB9E0F10CBC00D12CB0C9514CBCF71F7\n"
+":40D3C00016CBFFFF18CB34AD1ACB13B11CCBB0151ECB001120CB12B122CB038924CB452026CB400128CB03A92ACB89012CCB40132ECBE07830CBF1C032CB020934CB4013CF\n"
+":40D4000036CB1A7138CBCF763ACBFFFF3CCB30B53ECB2F9640CBCF7742CBFFFF44CB68A146CB082148CB01004ACB12964CCB09204ECB400050CB229652CB107854CB2B0978\n"
+":40D4400056CB1E0058CBFE0C5ACBC00D5CCBC4165ECB801060CB84E862CB3A0D64CBC00D66CB03F068CB1BFF6ACB420F6CCBC00D6ECB0C9670CBCF7172CBFFFF74CB34ADE1\n"
+":40D4800076CB13B178CBB0167ACB00117CCB12B17ECB029680CB0F0882CB5E0084CB3E0F86CBE00D88CB0A708ACB5A088CCB000E8ECB029690CB250892CB9E0094CBCF703B\n"
+":40D4C00096CBFFFF98CBF4AC9ACBBC109CCB80009ECBCF75A0CBFFFFA2CB34ADA4CB0D08A6CB5E00A8CB1E09AACB200EACCB1295AECB03F0B0CB0496B2CB18B5B4CB0196BF\n"
+":40D50000B6CB2F08B8CB5E01BACBCF75BCCBFFFFBECBF4ACC0CB8A15C2CB8010C4CB8FE8C6CB0C87C8CB1B08CACB5E03CCCB520BCECBA00BD0CBB016D2CB0011D4CB891D31\n"
+":40D54000D6CB0210D8CB4315DACB8010DCCB82B8DECB431DE0CB0210E2CBB900E4CB4013E6CBE078E8CBF1C0EACB5208ECCB4013EECBCF70F0CBFFFFF2CB8482F4CB4020A0\n"
+":40D58000F6CB0D08F8CB1390FACBC08DFCCB1108FECBD10000CC80E602CCCC2604CC629006CC04F408CC02D80ACC00AD0CCCCF700ECC010010CC2A7E12CC407814CC950073\n"
+":40D5C00016CC601318CCC0AD1ACCE0781CCCF1C01ECC160820CC401322CCAE0824CCC00326CC1A7028CCD2082ACC60132CCC8A212ECC0F0A30CC087732CCCF7534CCFFFFEC\n"
+":40D6000036CC68A138CCCF703ACC01003CCC12873ECC407840CC241542CC801044CC2DE846CCCF7648CCFFFF4ACC30B54CCC23964ECCCF7550CCFFFF52CCB0B554CC16952F\n"
+":40D6400056CC7DDB58CC0ABB5ACC2C785CCC42295ECCC07760CC2F7162CCC60A64CC601366CC00DA68CC0A736ACCE2096CCC60136ECC00DA70CCCF7272CC000074CCFFFF86\n"
+":40D6800076CC507178CCCA227ACC45007CCCCF717ECCFFFF80CCB4AD82CC229184CCC01E86CC841088CC4A858ACC30728CCCCA218ECC8D0090CC07B992CCF86194CC61B889\n"
+":40D6C00096CC660898CC60139ACCE9719CCC1FB59ECCFD07A0CC0013A2CCE078A4CCF1C0A6CC960FA8CC0013AACC0875ACCCD190AECC80D8B0CC11B5B2CC160AB4CC2002F5\n"
+":40D70000B6CCA970B8CCD1B5BACCCC78BCCCED07BECC2013C0CC4129C2CCC071C4CCF1C0C6CC720FC8CC0013CACC0875CCCCF6FFCECC07B8D0CCCF71D2CCFFFFD4CCB0B51B\n"
+":40D74000D6CC2608D8CC6013DACC3D91DCCC0877DECC0095E0CC2195E2CCF60DE4CCA013E6CC4795E8CC0876EACCE970ECCC360EEECCA010F0CC08D9F2CC0875F4CC8225FE\n"
+":40D78000F6CC1C10F8CCC970FACC2A0EFCCCA010FECC08D900CDA10702CD201304CDB86006CDE07808CDF1C00ACD2E0F0CCD00130ECDCF7710CDFFFF12CD048014CDA20F5B\n"
+":40D7C00016CD800318CDCF751ACDFFFF1CCD00AC1ECD087620CD058F22CD229524CD107626CDD12128CDA2802ACD12F22CCD80E62ECDCC2630CD629032CD0EF434CDCF70A6\n"
+":40D8000036CDFFFF38CD60B93ACDE3FF3CCD04B53ECDBE0C40CDE00142CD00D844CD01D846CD0EAD48CDC5AF4ACD06F04CCDCF704ECD000050CD7E0F52CD407854CD4D07BD\n"
+":40D8400056CD201358CD00D85ACDE0785CCD00D95ECD0AF060CDCF7062CDFFFF64CD84CD66CD357868CD41806ACD00806CCD02E16ECD40A070CDF10972CD148474CDCF7141\n"
+":40D8800076CDFFFF78CD94AD7ACD1C897CCD82B87ECD1CA980CDE07F82CD00D884CDFFFF86CDA4C188CDFFFF8ACDA4C78CCDFFFF8ECD94C190CDFFFF92CD68C894CDFFFFE3\n"
+":40D8C00096CD90C198CDFFFF9ACD98C99CCDFFFF9ECDC4C1A0CDFFFFA2CDBCCAA4CDFFFFA6CDB8C1A8CDFFFFAACD30CBACCDFFFFAECD64C1B0CDFFFFB2CDE8CBB4CDFFFF0F\n"
+":40D90000B6CD98C1B8CDFFFFBACD1CCCBCCDFFFFBECD6CBBC0CDFFFFC2CD08CD8E09000000FC0C0602FC380204FC03A106FC040208FC200640000287FFFFFFFF40000187B1\n"
+":40D94000FFFFFFFF00FC740602FC180140000687FFFFFFFF820901008A09C44DC4CDF1C0C6CD5E0EC8CD0013CACD1A70CCCDCF70CECDFFFFD0CD50ACD2CDDD90D4CDCF7025\n"
+":40D98000D6CDFFFFD8CD30B5DACD0190DCCD3A71DECD0F08E0CD5E00E2CD8A0EE4CD8003E6CD0875E8CD02F0EACD80DDECCDCF70EECDFFFFF0CD54AEF2CD3D88F4CD9A71BD\n"
+":40D9C000F6CDE4B9F8CDCA22FACD8223FCCDCA22FECD412300CE2A7002CE092004CE010406CE80D808CE09210ACE00000CCE2F230ECE082010CE402A12CEC02114CEE60E7B\n"
+":40DA000016CE201318CE6A711ACE08771CCE4A701ECE052820CE3E0422CE2F7024CED60E26CE201328CE6A712ACE1A702CCE2A702ECE052A30CE3E2032CE2F7034CEC60E4B\n"
+":40DA400036CE201338CE6A713ACECF733CCEFFFF3ECE34AD40CECF7242CEFFFF44CE74AD46CE1B0C48CE1E214ACEFCB34CCEFDB34ECE361B50CE040452CE1EB354CEA0B2A6\n"
+":40DA800056CEA1B258CEBFB35ACEA2B25CCE0AF05ECEE0B260CEE1B262CE3E1B64CE040466CE02B268CEDCB36ACEDDB36CCEDBB36ECEDEB370CE090672CE001374CECF704A\n"
+":40DAC00076CEFFFF78CEC4CD7ACECF717CCEFFFF7ECED2CE80CECF7282CE000084CEFFFF86CEE1C588CE10F08ACE01108CCE8D048ECE422A90CE030292CE08BA94CEA77BAD\n"
+":40DB000096CE6F7B98CEBC6B9ACE677D9CCEA77A9ECE756DA0CE677AA2CE0CBDA4CEA77AA6CE507AA8CEE308AACE4480ACCECF70AECEFFFFB0CED2CEB2CE40B0B4CE00D9D3\n"
+":40DB4000B6CE0AF0B8CECF70BACEFFFFBCCED4CEBECE3578C0CE4180C2CE0080C4CE02E1C6CE40A0C8CEF109CACE9480CCCE00D8CECEE07FD0CEC1C5D2CE0000D4CEFFFF22\n"
+":40DB8000D6CEE8C1D8CEFFFFDACEC4CD8E09000000FC240702FC381104FC03A106FC040208FC180140000287FFFFFFFF40000187FFFFFFFF00FC8C0702FCB80040000687D2\n"
+":40DBC000FFFFFFFF820901008A09DC4EDCCEF1C0DECEE1C5E0CE80E1E2CE01D9E4CECF75E6CE0200E8CE0E42EACE607DECCEC079EECEC505F0CE0013F2CEE078F4CEF1C07E\n"
+":40DC0000F6CE420DF8CE0013FACECF72FCCE0000FECE224000CF607A02CF287704CFCF7106CFFFFF08CFD4AF0ACF2A890CCFCF760ECFFFFF10CF848212CF82E114CF01D931\n"
+":40DC400016CFC07918CFCF751ACFFFFF1CCF68A11ECF470F20CF111A22CF430824CF500226CF9FE928CFCF712ACFFFFF2CCFF4AC2ECF461130CF010132CF1B0934CF1E00C1\n"
+":40DC800036CF3B1538CFC2103ACFCF733CCFFFFF3ECF74AD40CFF99342CF427F44CFF9B346CF599348CF47B64ACF1B094CCF5E004ECFCF7250CFFFFF52CF74AD54CF3A9211\n"
+":40DCC00056CF3C1558CFC3105ACF62795CCF3AB25ECF3A9260CF28B662CF410564CF001366CFE07868CF00D96ACF0AF06CCFCF706ECFFFFF70CF84CF72CF357874CF4180CD\n"
+":40DD000076CF008078CF02E17ACF40A07CCFF1097ECF148180CFE07F82CF00D884CFFFFF86CF1CC188CFFFFF8ACFDCCE8CCFFFFF8ECF20BC90CFFFFF92CFF4CE8E09000049\n"
+":40DD400000FC180802FC382104FC03A106FC040208FCB80040000287FFFFFFFF40000187FFFFFFFF00FC440802FC482540000687FFFFFFFF820901008A09944F94CFF1C0AD\n"
+":40DD800096CF960C98CF00139ACF24109CCF80009ECFCF75A0CFFFFFA2CF30B5A4CF2876A6CF4215A8CF1111AACF8BE8ACCF01E6AECFCF70B0CFFFFFB2CFA4F3B4CFD3B0CB\n"
+":40DDC000B6CF20D8B8CFD61DBACF0410BCCF3EF0BECF0A22C0CF802FC2CFFFFFC4CFF4ACC6CF2412C8CF0F21CACF88EFCCCF5815CECF8010D0CF20DFD2CF02E0D4CF187FEB\n"
+":40DE0000D6CFF07FD8CF4826DACFCE10DCCF0429DECFBE23E0CF00D8E2CF2F71E4CF0A20E6CF402EE8CF5E0FEACF2013ECCF05DAEECFE973F0CF5A0EF2CF2013F4CF00DA79\n"
+":40DE4000F6CF2877F8CF2870FACF020DFCCF2013FECF2A7100D002D902D082E004D0CA2106D00D0008D02C120AD000210CD030700ED0CA2010D0460012D0CF7114D0FFFFA1\n"
+":40DE800016D0A4F318D014B11AD014911CD0027E1ED0D3B120D0402822D0012124D000D826D0220F28D020132AD005DA2CD0E9732ED01E0E30D0201332D000DA34D0D61DE0\n"
+":40DEC00036D0441038D020D93AD051043CD020133ED0D81D40D0441042D0E07844D0F1C046D0F60B48D000134AD0CF704CD001004ED01E8450D0407852D0CF7554D0FFFFBB\n"
+":40DF000056D030B558D0AC155AD000115CD0CF765ED0FFFF60D068A162D007B864D0A60C66D0201368D025956AD003A56CD038166ED0801070D01B7872D0296874D00495ED\n"
+":40DF400076D0227878D0CF717AD0FFFF7CD0F4AC7ED0359180D0107182D0CA2084D0450086D0250488D020138AD0AE1D8CD004108ED0E07890D0E07E92D0E07894D0CF71DA\n"
+":40DF800096D0FFFF98D068A19AD038119CD081009ED03B79A0D061B9A2D01071A4D0E07FA6D0CA20A8D04D00AAD0E078ACD0E07FAED00FD8B0D0F1C0B2D0E1C5B4D0CF7522\n"
+":40DFC000B6D0FFFFB8D068A1BAD084E9BCD007D9BED021A5C0D095E8C2D02185C4D01509C6D0D001C8D02309CAD01102CCD02595CED00D09D0D0DE00D2D000D9D4D021A519\n"
+":40E00000D6D00BF0D8D04025DAD08112DCD008D8DED0560FE0D0A004E2D08DB8E4D008D8E6D001A5E8D009D8EAD0C903ECD00013EED0E078F0D0F1C0F2D0E1C5F4D0CF7536\n"
+":40E04000F6D0FFFFF8D068A1FAD000DAFCD084E9FED009D900D121A502D145B504D1A50806D1110008D141850AD1DFE20CD191F20ED1DB0A10D1900C12D1990A14D1550311\n"
+":40E0800016D1402718D181721AD155791CD100791ED18D0020D1000022D1890024D1000026D1850028D100002AD181002CD100002ED17D0030D1000032D1790034D100004D\n"
+":40E0C00036D1750038D100003AD171003CD100003ED16D0040D1000042D1130044D1000046D11F0048D100004AD14D004CD100004ED1610050D1000052D1402554D1811295\n"
+":40E1000056D131D858D1DA0E5AD1A0045CD108B85ED10AD860D122F062D1059564D1CF7266D1FFFF68D134AD6AD150206CD181036ED1029270D1C2B872D1AFB974D11508F5\n"
+":40E1400076D1910078D10A927AD1E0B87CD1CF217ED1A20380D1090882D15E0084D18FB986D1307988D131D88AD15E0E8CD1A0048ED108B890D10BD892D10AF094D1CF7090\n"
+":40E1800096D1000098D116319AD19A0E9CD1A0049ED14025A0D18112A2D10CD8A4D101A5A6D109D8A8D10903AAD10013ACD10595AED1CF72B0D1FFFFB2D134ADB4D15020C0\n"
+":40E1C000B6D10100B8D1AEB9BAD10292BCD1AFB9BED1C2B8C0D182E0C2D1CF21C4D12100C6D10492C8D10908CAD11E00CCD18EB9CED13079D0D10908D2D1DE00D4D18FB982\n"
+":40E20000D6D13079D8D1CF70DAD10000DCD11631DED10A0EE0D18004E2D132D8E4D1E0F1E6D1CF70E8D1FFFFEAD1A4ECECD10090EED181E0F0D1CA21F2D1E100F4D1C02965\n"
+":40E24000F6D12103F8D110F2FAD183E0FCD1CA21FED1210000D2CF2102D2210304D20AF206D280E008D2CA210AD2810F0CD200000ED2076010D2CA2112D2E20014D2C02996\n"
+":40E2800016D2620318D205211AD2810F1CD200001ED2700F20D2307922D23DD824D2C20D26D2A00428D208B82AD25FD82CD2BCF12ED2CF7030D2FFFF32D2A4EC34D22390FF\n"
+":40E2C00036D2CF7038D2FFFF3AD2A4F33CD22FB03ED2CF7040D2000042D2643344D2A20D46D2800448D200D84AD2AEF14CD2F1C04ED2EA0950D2201352D200DA54D2CF7586\n"
+":40E3000056D2FFFF58D268A15AD285E95CD211D95ED221A560D245B562D2B30864D2110066D2218568D2AB096AD210006CD22D096ED2500470D23B0972D2900474D2822113\n"
+":40E3400076D2810478D29B097AD255017CD240277ED2007280D2357882D2007884D2510086D2000088D261008AD200008CD271008ED2000090D2870092D2000094D297006F\n"
+":40E3800096D2000098D2CF709AD200009CD264309ED2960DA0D2A004A2D24025A4D28112A6D212D8A8D233F0AAD22595ACD2CF70AED2FFFFB0D234ADB2D20290B4D28621BD\n"
+":40E3C000B6D20600B8D2ECB8BAD28A20BCD20600BED2CA20C0D22100C2D20579C4D2CF70C6D20000C8D26430CAD21E0DCCD2A004CED23079D0D252D8D2D21FF0D4D2CF7007\n"
+":40E40000D6D20000D8D23E3EDAD2CF71DCD2FFFFDED2C6F3E0D2520DE2D28004E4D253D8E6D215F0E8D2CF70EAD20000ECD24430EED2CF71F0D2FFFFF2D23CF4F4D23E0D7A\n"
+":40E44000F6D28004F8D254D8FAD20BF0FCD2CF70FED2000000D3E03302D3CF7104D3FFFF06D33EF408D32A0D0AD380040CD355D80ED301A510D309D812D3910114D30013A0\n"
+":40E4800016D3CF7018D300001AD3E4331CD3CF711ED3FFFF20D340F422D3120D24D3800426D356D828D3F3F12AD3CF712CD3FFFF2ED3F4AC30D3441132D3000134D34A24BD\n"
+":40E4C00036D3400038D3CF723AD3FFFF3CD32CF43ED3ECB840D3689242D3C22444D3010146D3862348D3F30F4AD348BB4CD32F204ED3000150D3090B52D3500054D3090B01\n"
+":40E5000056D3D20058D33CDB5AD308F05CD382E35ED300DB60D3CA2362D3810F64D3000066D32C0168D3E5916AD360B26CD3C3916ED37F6770D302B272D3C27F74D3C9927E\n"
+":40E5400076D364B278D3F0D87AD3CF737CD3FFFF7ED3A4F380D3047E82D301E784D3E1B286D344BE88D314268AD30E118CD3C3B28ED3719390D3E5B292D3C2BB94D380E31E\n"
+":40E5800096D304E398D3CA239AD32C009CD3DB639ED3CA92A0D3C478A2D344B8A4D380E0A6D304E0A8D3CA20AAD32C00ACD37860AED302E0B0D36491B2D306B2B4D3229195\n"
+":40E5C000B6D37860B8D32278BAD301E0BCD307B2BED3CF70C0D30000C2D3083DC4D34871C6D3D60CC8D3A004CAD310DACCD300D8CED3A1F1D0D3F1C0D2D3E1C5D4D3CF75DD\n"
+":40E60000D6D3FFFFD8D368A1DAD386E9DCD31DD9DED321A5E0D300D9E2D325B5E4D3ACE8E6D32185E8D32AE9EAD39DE1ECD3CC21EED3A287F0D326F4F2D3CF70F4D3FFFF3D\n"
+":40E64000F6D334ADF8D30290FAD3CF72FCD3FFFFFED370B500D4EFB802D401D804D4C22006D4010008D40EB80AD405200CD4810F0ED4000010D40C0C12D45A8A14D404203A\n"
+":40E6800016D4800F18D400001AD4FFE01CD485EA1ED4052020D4810F22D4000024D40C1826D4CF7028D400002AD4AC312CD4BA0B2ED4800430D4018532D49DE034D41ED8B6\n"
+":40E6C00036D4C07838D401A53AD409D83CD475003ED4001340D4F1C042D4E1C544D4CF7546D4FFFF48D468A14AD484E94CD41FD94ED421A550D491E852D4218554D40FE95F\n"
+":40E7000056D41F0958D4D1075AD4CF715CD4FFFF5ED474AD60D4CF7062D4000064D41E3066D4820B68D4A0046AD426916CD400D86ED401A570D409D872D4410074D40013C2\n"
+":40E7400076D4E07878D4F1C07AD4E1C57CD4CF757ED4FFFF80D468A182D400DA84D484E986D444D988D421A58AD445B58CD480E08ED4060390D4020092D4218594D480E179\n"
+":40E7800096D4FE0298D401009AD473B99CD4BEE19ED4F602A0D40D00A2D44027A4D48272A6D4357AA8D4007AAAD4AB02ACD40000AED4B902B0D40000B2D4E302B4D4000027\n"
+":40E7C000B6D4DF02B8D40000BAD4DB02BCD40000BED4D702C0D40000C2D4D302C4D40000C6D4CF02C8D40000CAD4CB02CCD40000CED4C702D0D40000D2D4C302D4D40000F1\n"
+":40E80000D6D4BF02D8D40000DAD4BB02DCD40000DED4B702E0D40000E2D4B302E4D40000E6D4AF02E8D40000EAD4AB02ECD40000EED4A702F0D40000F2D4A302F4D40000B0\n"
+":40E84000F6D49F02F8D40000FAD49B02FCD40000FED4970200D5000002D5930204D5000006D58F0208D500000AD58B020CD500000ED5870210D5000012D5830214D5000065\n"
+":40E8800016D57F0218D500001AD57B021CD500001ED5770220D5000022D5730224D5000026D56F0228D500002AD56B022CD500002ED5670230D5000032D5630234D5000020\n"
+":40E8C00036D55F0238D500003AD55B023CD500003ED5570240D5000042D5530244D5000046D54F0248D500004AD54B024CD500004ED5470250D5000052D5430254D50000E0\n"
+":40E9000056D53F0258D500005AD53B025CD500005ED5370260D5000062D5330264D5000066D52F0268D500006AD52B026CD500006ED53B0070D5000072D5490074D5000069\n"
+":40E9400076D5710078D500007AD57D007CD500007ED5A70080D5000082D5B30084D5000086D5DD0088D500008AD5E9008CD500008ED5130190D5000092D5210194D50000B3\n"
+":40E9800096D5470198D500009AD555019CD500009ED57B01A0D50000A2D58901A4D50000A6D54025A8D58112AAD505D8ACD5860AAED5A004B0D50CB8B2D5DF01B4D5200046\n"
+":40E9C000B6D545D8B8D5CF70BAD5FFFFBCD534ADBED50290C0D52595C2D50F08C4D55E03C6D58521C8D51808CAD525B5CCD506F0CED52870D0D58620D2D51808D4D51079FB\n"
+":40EA0000D6D505B5D8D505D8DAD50E0ADCD5A004DED50CB8E0D546D8E2D5D7F0E4D54025E6D58112E8D529D8EAD54A0AECD5A004EED509B8F0D547D8F2D5CFF0F4D5CF706B\n"
+":40EA4000F6D5FFFFF8D534ADFAD52290FCD50595FED5130900D65E0302D64F2004D6410106D689B908D68AB90AD625B50CD605F00ED6862010D6180812D6107914D605B535\n"
+":40EA800016D629D818D6CE091AD6A0041CD609B81ED648D820D6B7F022D6402524D6811226D653D828D60A0A2AD6A0042CD608B82ED649D830D6AFF032D6CF7034D6FFFF0A\n"
+":40EAC00036D634AD38D622903AD605953CD611093ED65E0340D64F2042D6410144D689B946D68AB948D625B54AD606F04CD686204ED6180850D6107952D605B554D653D884\n"
+":40EB000056D6920958D6A0045AD608B85CD64AD85ED699F060D6402562D6811264D615D866D6CE0968D6A0046AD60AB86CD64BD86ED691F070D6CF7072D6FFFF74D634AD97\n"
+":40EB400076D6229078D605957AD613097CD65E037ED64F2080D6410182D689B984D68AB986D625B588D605F08AD686208CD618088ED6107990D605B592D615D894D65209C6\n"
+":40EB800096D6A00498D60AB89AD64CD89CD679F09ED6CF70A0D60000A2D64252A4D68E09A6D6A004A8D64025AAD68112ACD64DD8AED671F0B0D6CF70B2D6FFFFB4D634AD08\n"
+":40EBC000B6D62290B8D60595BAD60F09BCD65E03BED64F20C0D64100C2D625B5C4D604F0C6D6A1B8C8D61079CAD605B5CCD6CF70CED60000D0D64252D2D61609D4D6800410\n"
+":40EC0000D6D64ED8D8D65BF0DAD6CF70DCD60000DED64253E0D65209E2D6A004E4D64025E6D68112E8D64FD8EAD653F0ECD6CF70EED6FFFFF0D634ADF2D60290F4D6259514\n"
+":40EC4000F6D60D08F8D65E03FAD681B9FCD625B5FED606F000D7502102D7400004D7107906D705B508D7CF700AD700000CD742530ED7DA0810D7800412D750D814D73DF0D6\n"
+":40EC800016D7CF7018D700001AD742541CD716091ED7A00420D7402522D7811224D751D826D735F028D7CF702AD7FFFF2CD734AD2ED7229030D7059532D70F0934D75E03D3\n"
+":40ECC00036D74F2038D741003AD725B53CD704F03ED7A1B840D7107942D705B544D7CF7046D7000048D742544AD79E084CD780044ED713D850D71FF052D7CF7054D7000002\n"
+":40ED000056D7E03358D7DA085AD7A0045CD740255ED7811260D714D862D717F064D7CF7066D7FFFF68D734AD6AD722906CD705956ED7ECB970D7C42072D7820F74D7FFFF0D\n"
+":40ED400076D70FF078D7F0DC7AD7C6207CD701037ED7107980D705B582D7CF7084D7000086D7E03388D75E088AD780048CD700D88ED701A590D709D892D7210594D7C01248\n"
+":40ED800096D7E07898D7F1C09AD7E1C59CD7CF759ED7FFFFA0D768A1A2D784E9A4D730D9A6D721A5A8D794E8AAD72185ACD712E9AED72509B0D7110CB2D7CF70B4D7FFFFB8\n"
+":40EDC000B6D770B5B8D71A88BAD701D9BCD780E0BED7CF70C0D70000C2D7D031C4D72208C6D7A004C8D7C079CAD700D8CCD701A5CED709D8D0D7E104D2D7C012D4D7F1C044\n"
+":40EE0000D6D7E1C5D8D7CF75DAD7FFFFDCD768A1DED786E9E0D701D9E2D721A5E4D700D9E6D725B5E8D7B5E8EAD74185ECD7670AEED7D501F0D74027F2D70172F4D755790D\n"
+":40EE4000F6D70079F8D75B00FAD70000FCD71900FED7000000D8270002D8000004D83B0006D8000008D84F000AD800000CD85F000ED8000010D86D0012D8000014D8CF701E\n"
+":40EE800016D8000018D8CE301AD81A081CD8A0041ED8402520D8811222D802D824D815F026D82A0C28D8E00B2AD805952CD808712ED805B530D8CF7032D8000034D8CE30BC\n"
+":40EEC00036D8B20F38D840043AD803D83CD809F03ED8CF7040D8000042D80A3444D8EE0F46D8600448D840254AD881124CD804D84ED801A550D809D852D8610454D8C012F9\n"
+":40EF000056D8259558D8CF705AD800005CD80A345ED88A0F60D8600462D8862164D8020266D805D868D8F3F16AD8CF706CD800006ED80C3470D8C20F72D8600474D8402548\n"
+":40EF400076D8811278D806D87AD8EBF17CD825957ED8CF7080D8000082D80C3484D8620F86D8600488D887B98AD800D88CD8E1F18ED8E07890D8F1C092D8E1C594D8CF7589\n"
+":40EF800096D8FFFF98D868A19AD886E99CD801D99ED821A5A0D800D9A2D825B5A4D8B7E8A6D82185A8D84221AAD84180ACD808F2AED82709B0D85000B2D83909B4D8900003\n"
+":40EFC000B6D83B09B8D8D000BAD823F0BCD8CF70BED80000C0D81A30C2D8720FC4D86004C6D84025C8D88112CAD802D8CCD801A5CED809D8D0D821F0D2D82595D4D8CF7049\n"
+":40F00000D6D80000D8D81A30DAD88621DCD80401DED80A0FE0D86004E2D825B5E4D804D8E6D8F4F1E8D82595EAD81709ECD85F00EED84025F0D88112F2D808D8F4D83E0F94\n"
+":40F04000F6D86004F8D88DB8FAD803D8FCD8E8F1FED800D900D9311D02D9421004D9CF7206D9FFFF08D930B50AD920920CD9A3B90ED9A7B910D920B212D9A10314D9C01205\n"
+":40F0800016D9E07818D9F1C01AD9CF701CD9FFFF1ED9F0B520D9039022D9020B24D9601226D922B828D9CF732AD966662CD966662ED9CF7230D9714032D9661234D9220F24\n"
+":40F0C00036D9C01138D9CE0E3AD940123CD98A213ED93E0040D9082042D9410044D97FD846D9092148D900004AD90D784CD9D1C04ED9E07E50D9F1C052D9E1C554D9CF754F\n"
+":40F1000056D9FFFF58D968A15AD98FE95CD900D95ED925B560D9CF7162D9FFFF64D930B566D9209168D9E9B96AD959D96CD9CA216ED9810F70D9000072D95A0074D921A57A\n"
+":40F1400076D9E90878D911007AD921857CD9DAE17ED95EF280D90FF682D9CB0984D9100086D9D9E188D96AF48AD9CF708CD900008ED99A3E90D9CF7192D9FFFF94D9F6B5FB\n"
+":40F1800096D99E0E98D940049AD95BD89CD910F09ED9DBE1A0D911F2A2D9DCE1A4D95CF4A6D9CF70A8D9FFFFAAD9F4AFACD90B10AED9C000B0D98A21B2D93F06B4D941088C\n"
+":40F1C000B6D94300B8D92870BAD920F0BCD901A5BED909D8C0D94EF0C2D9CF72C4D9FFFFC6D9A4F3C8D9CF70CAD9FFFFCCD9F4AFCED90B10D0D9C000D2D92F92D4D90B081A\n"
+":40F20000D6D97205D8D930B2DAD9D0E0DCD985F6DED94221E0D94006E2D91079E4D910B2E6D9CF70E8D90000EAD96433ECD9FA0DEED94004F0D95CD8F2D9E6F1F4D98920A1\n"
+":40F24000F6D90104F8D94220FAD9C00DFCD90AB8FED90E0B00DAE01202DAB4D904DACF7206DAFFFF08DAA4EC0ADA22820CDA38600EDA03A210DA00D912DA05F014DA01E1B5\n"
+":40F2800016DA307918DA1D781ADA8C201CDADF8F1EDA3CF720DA0AB922DA822024DA100026DA057928DACF702ADA00002CDA183E2EDABA0D30DA600432DA307934DA00D89F\n"
+":40F2C00036DAC4F138DACF703ADA00003CDA64333EDACF7140DAFFFF42DAC4F344DAEE0D46DA400448DAF6F14ADACF714CDAFFFF4EDAA4F350DA309152DACF7254DAFFFFA3\n"
+":40F3000056DAF4AC58DA42B95ADA34B25CDA55025EDAC01260DAF1C062DAE1C564DACF7566DAFFFF68DA68A16ADA92E96CDACF716EDAFFFF70DAF4AF72DA429174DACF7320\n"
+":40F3400076DAFFFF78DA30B57ADA20937CDA350A7EDA1E0080DA57DA82DA41A584DA00DA86DA45B588DA89B98ADA20B38CDA9FE88EDA218590DA1DE992DAD7E194DA11F2BC\n"
+":40F3800096DAD8E198DA19F49ADA05959CDA45209EDAC100A0DACF70A2DA0000A4DAB830A6DA420DA8DA6004AADA25B5ACDA00D8AEDA0DF0B0DAA9B9B2DA20B3B4DA0BF01E\n"
+":40F3C000B6DACF70B8DA0000BADAB830BCDA760DBEDA6004C0DA4025C2DA8112C4DA58D8C6DA01A5C8DA09D8CADAE901CCDAC012CEDAE078D0DAF1C0D2DA6A09D4DAC01256\n"
+":40F40000D6DACF75D8DAFFFFDADA68A1DCDA86E9DEDA5DDBE0DACF72E2DAFFFFE4DA2CF4E6DA76AAE8DAACE8EADACF76ECDAFFFFEEDA2CF4F0DA568EF2DA28EAF4DADDE2BF\n"
+":40F44000F6DA17F2F8DADEE2FADA24F4FCDA0595FEDAA0B800DB107902DB05B504DBCF7006DBFFFF08DB34AD0ADB03900CDB09080EDB5E0010DB80B912DB25B514DBCF7009\n"
+":40F4800016DB000018DB0E351ADBCE0C1CDB40041EDB00D820DB0EF022DBCF7224DB010026DBF27128DB407A2ADB8BE82CDBCF702EDB000030DB0E3532DB020D34DB60044E\n"
+":40F4C00036DB402538DB81123ADB5ED83CDB16AE3EDB09D840DB690142DBC01244DBF1C046DBF60848DBC0124ADBCF754CDBFFFF4EDBF4AC50DB2E8552DBCF7654DBFFFFA4\n"
+":40F5000056DB2CF458DB06865ADB11095CDB01005EDB401560DB011162DB0E9664DB230966DB000068DBCF706ADB02006CDBC0406EDBCE0E70DB400472DBCF7074DB01002C\n"
+":40F5400076DBB85578DBC20E7ADB40047CDB0E857EDB06A680DB401582DB001184DB0EB686DBCF7088DBFFFF8ADBF0D08CDBAE0E8EDB400490DBCF7092DB010094DB5C72F6\n"
+":40F5800096DBA60E98DB40049ADBCF709CDBFFFF9EDB78D4A0DB9A0EA2DB4004A4DBCF70A6DBFFFFA8DB4CD2AADB920EACDB4004AEDBCF70B0DBFFFFB2DB98D7B4DB860E5F\n"
+":40F5C000B6DB4004B8DBCF70BADBFFFFBCDBD0D3BEDB7E0EC0DB4004C2DBCF70C4DB0100C6DBD46EC8DB720ECADB4004CCDBCF70CEDB0100D0DBE871D2DB6A0ED4DB40047C\n"
+":40F60000D6DBCF70D8DBFFFFDADBD4D7DCDB5E0EDEDB4004E0DBCF70E2DBFFFFE4DBB0D0E6DB560EE8DB4004EADBCF70ECDB0100EEDB146BF0DB4A0EF2DB4004F4DBB500BD\n"
+":40F64000F6DBC012F8DB01DBFADB03F0FCDB01E3FEDB150B00DC550102DCCF7204DCFFFF06DCA4F308DC757A0ADC56920CDCF1080EDC838010DC61BB12DCE07F14DC60B14F\n"
+":40F6800016DCE07818DCCF711ADCFFFF1CDCA4F31EDC157920DCE07F22DC169124DCF1C026DC0A0828DCC0122ADCA1C12CDC08752EDCCF7030DCFFFF32DCA4F434DC201000\n"
+":40F6C00036DC0E8138DCEA0F3ADC20123CDCC9703EDC00DB40DC7FDA42DC560844DC601246DC17BA48DCB60A4ADCC0114CDC00D94EDC3A7050DCC97052DC720F54DC201034\n"
+":40F7000056DC287258DCDE0F5ADC00125CDCCF735EDC514960DCAA8262DCCF7264DC264066DC9DA068DCAA0A6ADC00126CDC920A6EDCC01170DC8B7172DC1A7074DCCF703C\n"
+":40F7400076DCFFFF78DC30B57ADC1D907CDCDFFF7EDC001480DC003182DCCF7784DCFFFF86DCA4F388DC157F8ADC17978CDCCF768EDCFFFF90DCA4EC92DCC3B894DC61B842\n"
+":40F7800096DC107998DC001C9ADC04309CDC14269EDC4110A0DC3421A2DC800FA4DC0000A6DC4007A8DC00B5AADC0014ACDC0031AEDC1426B0DC0010B2DC3420B4DC800F83\n"
+":40F7C000B6DC0000B8DC4C07BADC01B5BCDC0014BEDC0031C0DC1426C2DC0010C4DC3420C6DC800FC8DC0000CADC4C07CCDC02B5CEDC0014D0DC0031D2DC1426D4DC0010E5\n"
+":40F80000D6DC3420D8DC800FDADC0000DCDC4007DEDC03B5E0DC0014E2DC0031E4DC1426E6DC0010E8DC3420EADC800FECDC0000EEDC5807F0DC6E0BF2DC8012F4DCEE0B01\n"
+":40F84000F6DCA012F8DC0A71FADCAA0EFCDC8012FEDC087700DD04B502DD001404DD003106DD142608DD00100ADD34200CDD800F0EDD000010DD640712DD4E0B14DD8012F6\n"
+":40F8800016DDCE0B18DDA0121ADD0A711CDD860E1EDD801220DDE7B522DD05B524DD06B526DD001428DD00312ADD14262CDD00102EDD342030DD800F32DD000034DD700702\n"
+":40F8C00036DD08B538DD00143ADD00313CDD14263EDD001040DD342042DD800F44DD000046DD700748DD09B54ADD00144CDD00314EDD142650DD001052DD342054DD800F12\n"
+":40F9000056DD000058DD70075ADD0AB55CDD00145EDD003160DD142662DD001064DD342066DD800F68DD00006ADD70076CDD0BB56EDD001470DD003172DD147E74DD342697\n"
+":40F9400076DD801F78DD00007ADD7C077CDDE20A7EDD801280DD620B82DDA01284DD2A7186DD1E0E88DD80128ADD0CB58CDD0DB58EDD0EB590DD0FB592DD010794DDA0128B\n"
+":40F9800096DDA1C098DDF1C09ADD8E0E9CDD80129EDD0876A0DDCF70A2DDFFFFA4DD68A1A6DD2710A8DD8000AADD80E0ACDDA1C1AEDD91F2B0DDCF70B2DDFFFFB4DD34AD09\n"
+":40F9C000B6DD2290B8DD0A21BADD802FBCDDFFFFBEDDA4F4C0DDCF75C2DDFFFFC4DDE4F3C6DDE509C8DD9E03CADDCF70CCDDFFFFCEDDA4ECD0DD2090D2DD0A24D4DD800FE3\n"
+":40FA0000D6DDFFFFD8DDA4F3DADD9D09DCDD1100DEDD4A20E0DD0020E2DD2011E4DD0FA1E6DD3E0EE8DD2012EADDE970ECDD0A73EEDD7FDAF0DDA60EF2DD2012F4DD17BA8B\n"
+":40FA4000F6DD0A09F8DDC011FADD0A71FCDD7A70FEDDE97000DEC20D02DE201004DE0A7206DE320E08DE00120ADECF730CDE51490EDEAA8210DECF7212DE264014DE9DA000\n"
+":40FA800016DEFE0818DE00121ADEE6081CDEC0111EDEF49520DE5A7022DE0E9524DE801126DE0DA128DEE1B62ADE00B62CDEE2B62EDE460A30DEA01232DE03B634DEAE0AB2\n"
+":40FAC00036DEA01238DE4A713ADE6A0D3CDE80123EDE1A7040DE04B642DE320A44DEA01246DEE97048DE9A0A4ADEA0124CDE4A714EDE560D50DE801252DE0E1E54DE04148B\n"
+":40FB000056DE05B658DE06B65ADEA8B65CDEA9B65EDEAAB660DEABB662DE120A64DEA01266DEA97068DE7A0A6ADEA0126CDE6A716EDE360D70DE801272DE2BF074DECF7772\n"
+":40FB400076DEFFFF78DE30B57ADE8B717CDE1D977EDE5FFF80DE001482DE013184DE152486DE400088DE17908ADE45178CDE81108EDEC3B890DE61B892DE107894DE147D64\n"
+":40FB800096DE06E998DE40959ADE26959CDE18959EDE09F0A0DE4C95A2DE3295A4DE1E95A6DE05F0A8DE4095AADE2695ACDE1895AEDE40B6B0DE21B6B2DE22B6B4DE43B6C5\n"
+":40FBC000B6DE44B6B8DE25B6BADE26B6BCDE47B6BEDE08B6C0DE09B6C2DE0AB6C4DE0BB6C6DE0CB6C8DE0DB6CADE0EB6CCDE0FB6CEDEB505D0DEA012D2DEA1C0D4DEF1C09D\n"
+":40FC0000D6DE07E8D8DE00D9DADEEA0CDCDE2010DEDE2872E0DE02F0E2DE01D8E4DE6902E6DECFFFE8DEF1C0EADE4A0DECDE8012EEDEA1C1F0DE0876F2DE2877F4DE487532\n"
+":40FC4000F6DECF70F8DEFFFFFADE30B5FCDE8B71FEDE1D9000DF3EFF02DFCF7004DFFFFF06DFA4F308DF00140ADF01310CDF35780EDF179010DF0A2012DF802F14DFFFFFFC\n"
+":40FC800016DFE4F318DFC3B81ADF61B81CDF001C1EDF043020DF209722DF009624DF10B926DF257828DFEBFF2ADF00142CDF02312EDF142030DF812032DF589134DF2091F6\n"
+":40FCC00036DF052938DF3E003ADF41293CDFC0713EDF377240DFCA2242DF0E0044DF219746DF40A548DF01964ADF10B94CDF25784EDFE2FF50DF001452DF023154DF142024\n"
+":40FD000056DF812058DF58915ADF26915CDF05295EDF3E0060DF2F7062DF0B0864DF840066DF412868DFC2016ADF22976CDF41A56EDF029670DF10B972DF257874DFD8FF00\n"
+":40FD400076DF001478DF01317ADF14207CDF42207EDF389280DF469282DF052A84DF3E0086DF377188DF41298ADFC0718CDFCA218EDF0E0090DF22A592DF239794DF039602\n"
+":40FD800096DF10B998DF25789ADFCFFF9CDF00149EDF0131A0DF1420A2DF4220A4DF3892A6DF4092A8DF052AAADF3E00ACDF4129AEDFC071B0DF3771B2DFCA21B4DF0E00AE\n"
+":40FDC000B6DF23A5B8DFE104BADFA012BCDFA1C0BEDFE078C0DFF1C0C2DF760CC4DF8012C6DFA5C1C8DFCF76CADFFFFFCCDF68A1CEDF0875D0DF90E9D2DF23D8D4DF01A69C\n"
+":40FE0000D6DF00D8D8DF05B6DADFCF71DCDFFFFFDEDF30B5E0DFC970E2DFB60FE4DF6FFFE6DF3A91E8DFCF70EADFFFFFECDF4CF4EEDF6BFFF0DF80E5F2DF4604F4DF0200FD\n"
+":40FE4000F6DF2186F8DFC3E1FADF3E04FCDF0D00FEDF402700E0807202E0357804E0007806E0270408E000000AE02F040CE000000EE02B0410E0000012E0270414E0000067\n"
+":40FE800016E0230418E000001AE01F041CE000001EE01B0420E0000022E0170424E0000026E0130428E000002AE00F042CE000002EE00B0430E0000032E0070434E000002A\n"
+":40FEC00036E0030438E000003AE0FF033CE000003EE0FB0340E0000042E0F70344E0000046E0F30348E000004AE0EF034CE000004EE0EB0350E0000052E0E70354E00000F1\n"
+":40FF000056E0E30358E000005AE0DF035CE000005EE0DB0360E0000062E0D70364E0000066E0D30368E000006AE0CF036CE000006EE0CB0370E0000072E0C70374E00000B1\n"
+":40FF400076E0C30378E000007AE0BF037CE000007EE0BB0380E0000082E0B70384E0000086E0B30388E000008AE0AF038CE000008EE0AB0390E0000092E0870094E0000094\n"
+":40FF800096E09F0098E000009AE09F039CE000009EE0B300A0E00000A2E03B01A4E00000A6E08B01A8E00000AAE0F700ACE00000AEE0CD00B0E00000B2E08703B4E00000E7\n"
+":40FFC000B6E08303B8E00000BAE07F03BCE00000BEE07B03C0E00000C2E07703C4E00000C6E07303C8E00000CAE06F03CCE00000CEE06B03D0E00000D2E02302D4E0000036\n"
+":020000040802F0\n"
+":40000000D6E05502D8E00000DAE06702DCE00000DEE07902E0E00000E2E0BB01E4E00000E6E0CD01E8E00000EAE0DF01ECE00000EEE0F101F0E00000F2E07F01F4E0000059\n"
+":40004000F6E09101F8E00000FAE03F03FCE00000FEE03B0300E1000002E1370304E1000006E17F0208E100000AE191020CE100000EE1A30210E1000012E1050314E1000018\n"
+":4000800016E1261618E180101AE10DE81CE1CF711EE1FFFF20E1A4F322E1CF7024E1000026E1123028E1BE0E2AE120042CE133912EE124D830E17BF032E1261634E18010E2\n"
+":4000C00036E10DE838E1CF713AE1FFFF3CE1A4F33EE1CF7040E1000042E1123244E1A20E46E1200448E134914AE126D84CE16DF04EE12A1650E1801052E114E854E1CF7153\n"
+":4001000056E1FFFF58E170B55AE100915CE1001C5EE1043060E1019162E18B7164E1021C66E1043068E1CF706AE100006CE10A306EE12E0F70E1200472E104DA74E12AD8C1\n"
+":4001400076E159F078E1CF757AE1FFFF7CE1A4F37EE11C8D80E10FE882E1CF7184E1FFFF86E1A4EC88E1CF708AE100008CE108338EE15A0E90E1200492E1229194E129D8D5\n"
+":4001800096E101A698E100D89AE11CAD9CE146F09EE12816A0E18010A2E11DE8A4E1CF71A6E1FFFFA8E170B5AAE10491ACE1041CAEE10430B0E10691B2E1061CB4E1043055\n"
+":4001C000B6E10391B8E1081CBAE10430BCE10591BEE181C1C0E10A1CC2E10430C4E1CF70C6E10000C8E15630CAE1D20ECCE12004CEE108DAD0E12716D2E18010D4E128E8F9\n"
+":40020000D6E127D8D8E127F0DAE12716DCE18010DEE124E8E0E1CF70E2E1FFFFE4E130B5E6E181C1E8E11D90EAE184FEECE1CF70EEE1FFFFF0E1A4F3F2E10414F4E10131BE\n"
+":40024000F6E13578F8E13790FAE1CF70FCE1FFFFFEE1A4EC00E2009002E2041C04E2443006E289E808E2C3B90AE205210CE2810F0EE2000010E2301112E2041C14E2443036\n"
+":4002800016E2CF7018E200001AE266331CE2CA0D1EE2000420E228D822E203F024E200D826E201A628E20F022AE220002CE209DD2EE2CF7030E2FFFF32E270B534E20588A3\n"
+":4002C00036E200D938E214E83AE2CF703CE2FFFF3EE2F4AC40E20C8042E2042044E2800F46E2000848E200004AE241284CE2FE864EE207F450E2CF7052E2FFFF54E2A4ECE0\n"
+":4003000056E2009058E283E85AE201D95CE202F05EE20FD960E2CF7062E2000064E2623366E2820D68E200046AE23BD86CE2DDF16EE2CF7070E2000072E2085374E2CF717C\n"
+":4003400076E2FFFF78E24CF47AE2220E7CE220047EE220DA80E23CD882E2D3F184E2CF7086E2000088E208548AE2CF718CE2FFFF8EE24CF490E20A0E92E2200494E220DA5A\n"
+":4003800096E237D898E2C7F19AE2CF709CE200009EE20852A0E2CF71A2E2FFFFA4E24CF4A6E2F60DA8E22004AAE208DAACE238D8AEE2BDF1B0E2CF70B2E20000B4E29C52FB\n"
+":4003C000B6E2CF71B8E2FFFFBAE254F4BCE2DE0DBEE22004C0E208DAC2E239D8C4E2B1F1C6E2CF70C8E20000CAE21852CCE2CF71CEE2FFFFD0E25CF4D2E2CA0DD4E2200431\n"
+":40040000D6E208DAD8E23AD8DAE2A7F1DCE2CF70DEE20000E0E2A452E2E2CF71E4E2FFFFE6E264F4E8E2B20DEAE22004ECE208DAEEE233D8F0E29BF1F2E2CF70F4E2FFFF5C\n"
+":40044000F6E234ADF8E20290FAE2CF75FCE2FFFFFEE24CF400E3170802E39E0304E3CF7006E3FFFF08E3A4EC0AE300900CE380E00EE3180910E3E1FF12E3CA2014E3410360\n"
+":4004800016E3CF7018E300001AE308501CE3A9711EE37E0D20E3200422E308DA24E334D826E381F128E3CF702AE300002CE3C2502EE3CF7130E3FFFF32E354F434E3660DB2\n"
+":4004C00036E3200438E308DA3AE335D83CE375F13EE3CF7040E3000042E3185044E3CF7146E3FFFF48E35CF44AE3520D4CE320044EE308DA50E336D852E36BF154E3CF70C0\n"
+":4005000056E3000058E3CA505AE3CF715CE3FFFF5EE364F460E33A0D62E3200464E308DA66E3CF7068E3FFFF6AE334AD6CE302906EE3EEB870E35AF372E3CF7074E3FFFF5E\n"
+":4005400076E3A4EC78E300907AE380E07CE354F57EE340D880E353F182E3CF7084E3000086E3385088E3CF718AE3FFFF8CE36CF48EE3DA0C90E3200492E308DA94E341D86C\n"
+":4005800096E349F198E3CF709AE300009CE3A0519EE3CF71A0E3FFFFA2E374F4A4E3C20CA6E32004A8E308DAAAE342D8ACE33DF1AEE3CF75B0E3FFFFB2E36CF4B4E359256F\n"
+":4005C000B6E30F12B8E381C2BAE3A970BCE34025BEE30112C0E3CAFEC2E300D8C4E30AF0C6E33268C8E31427CAE30C10CCE38371CEE32181D0E301E0D2E30F78D4E3501C91\n"
+":40060000D6E34410D8E3EF08DAE31281DCE3CF70DEE30000E0E33050E2E34025E4E30114E6E3B60CE8E32004EAE308DAECE300D9EEE310F0F0E31269F2E38370F4E3018093\n"
+":40064000F6E31427F8E34C10FAE301E1FCE32F79FEE3042000E4800F02E40F0004E4000006E430B808E4501C0AE404100CE4E5090EE4128110E443D812E40BF114E4CF70CD\n"
+":4006800016E4000018E498511AE4CF711CE4FFFF1EE47CF420E47A0C22E4200424E408DA26E4010628E4CFFF2AE4CF712CE4FFFF2EE430B530E4009132E484B834E400B111\n"
+":4006C00036E4A97038E469003AE4A0123CE4A5C03EE4E07840E4E07E42E4E07844E4F1C046E408D848E4920F4AE4200F4CE408714EE4CF7050E4000052E41A3054E400D987\n"
+":4007000056E48BB958E4120C5AE4E00A5CE428725EE4CF7060E4FFFF62E4B0D064E40E0E66E4000468E4E5046AE48FFF6CE4F1C06EE4CE0F70E4401272E4CF7574E4FFFFCD\n"
+":4007400076E468A178E495087AE411007CE485E97EE400D880E404B582E42BD884E401A586E4018588E4ABE08AE40BF28CE404F68EE47F0890E4100092E416F094E43708A6\n"
+":4007800096E4100B98E445089AE4500B9CE410F09EE40495A0E4CF71A2E4FFFFA4E424F3A6E41579A8E40C91AAE43E0BACE42004AEE42D91B0E40495B2E401E0B4E410799F\n"
+":4007C000B6E40D09B8E4F507BAE404B5BCE409D8BEE428F0C0E400D8C2E404B5C4E42CD8C6E401A5C8E4FAF1CAE4CF70CCE40000CEE41225D0E400D9D2E4160BD4E42004EB\n"
+":40080000D6E48FB9D8E42DD8DAE4F7F1DCE44495DEE48A20E0E48C02E2E42B0AE4E40300E6E44278E8E44920EAE44E0FECE4CF71EEE4FFFFF0E424EDF2E45479F4E4DB7AB9\n"
+":40084000F6E4CF70F8E40000FAE41025FCE49E0BFEE4200400E54F7A02E5049504E51E6606E5C4B508E5DAF10AE500D80CE59D070EE5401210E5F1C012E5E1C514E5CF7509\n"
+":4008800016E5FFFF18E568A11AE5A3081CE511001EE589E920E52C1522E5811024E500D826E504E928E504B52AE52ED82CE501A52EE5018530E5A1E032E521F234E504F653\n"
+":4008C00036E5850838E510003AE506F03CE50D083EE5900B40E54F0842E5D00B44E509D846E53BF048E5CF704AE5FFFF4CE570B54EE51A8850E581E052E500D854E504F2A4\n"
+":4009000056E5381558E580105AE561B85CE532685EE5CF7060E5000062E5823064E5820A66E5200468E586216AE5FF0C6CE521D86EE501A570E5EAF172E5381574E58110DC\n"
+":4009400076E5CF7078E500007AE5BA307CE561B97EE5C1B980E585B982E588B984E5620A86E5200488E58CB98AE52FD88CE5F1F18EE5CF7190E5FFFF92E570B594E51889D9\n"
+":4009800096E502E098E539899AE5C2B89CE502E19EE504B9A0E58621A2E5FE03A4E50579A6E589B9A8E5CF70AAE50000ACE53832AEE53A0AB0E52004B2E58FB9B4E500D840\n"
+":4009C000B6E5DDF1B8E500D8BAE5F906BCE54012BEE5E078C0E58A20C2E51000C4E500B1C6E50ADAC8E542A9CAE503D8CCE503A9CEE58A20D0E51E00D2E502B1D4E50DD8E7\n"
+":400A0000D6E506A9D8E506D8DAE507A9DCE50819DEE5840FE0E50000E2E5000BE4E510D8E6E50AA9E8E5E07FEAE54BA9ECE5F1C0EEE5CF70F0E50000F2E53AC4F4E5607866\n"
+":400A4000F6E5E1C5F8E5CF72FAE5FFFFFCE5F4AEFEE5049200E63D0802E6DE0004E6CF7006E6FFFF08E640AC0AE665880CE6C1120EE6800010E6110B12E6030014E6A59AC4\n"
+":400A800016E6279A18E630751AE6CA201CE62B001EE68EF620E6C21222E6810024E6386026E6130828E6C2002AE6289A2CE6079A2EE6386030E6259A32E60D0834E64300AB\n"
+":400AC00036E601D838E69A093AE6400D3CE675063EE6401240E6CF7042E6000044E6102546E6E07E48E6F1C04AE6EE0D4CE660124EE600D950E6CF7552E6FFFF54E6F4AC05\n"
+":400B000056E61F9558E6A1C15AE619085CE6800F5EE6000060E6560962E6CF7064E6010066E6FE4268E640786AE627026CE620006EE6087670E6001D72E6841F74E6000021\n"
+":400B400076E6100878E68A207AE614027CE601B57EE6CF7280E6FFFF82E644D084E6CF7086E6FFFF88E690C18AE640A08CE6CF728EE6FFFF90E690D092E6CF7094E6FFFF9A\n"
+":400B800096E688C198E640A09AE6CF729CE6FFFF9EE694D0A0E6CF70A2E6FFFFA4E68CC1A6E640A0A8E6CF72AAE6FFFFACE640D4AEE6CF70B0E6FFFFB2E6F8C0B4E640A027\n"
+":400BC000B6E6CF72B8E6FFFFBAE66CE4BCE6CF70BEE6FFFFC0E6D0C0C2E640A0C4E6CF72C6E6FFFFC8E6C0DFCAE6CF70CCE6FFFFCEE6BCC0D0E640A0D2E6CF72D4E6FFFF53\n"
+":400C0000D6E640E4D8E6CF70DAE6FFFFDCE6E0C0DEE640A0E0E6CF72E2E6FFFFE4E644DBE6E6CF70E8E6FFFFEAE690C0ECE640A0EEE6CF72F0E6FFFFF2E6F8DBF4E6CF7007\n"
+":400C4000F6E6FFFFF8E68CC0FAE640A0FCE6CF72FEE6FFFF00E718DC02E7CF7004E7FFFF06E784C008E740A00AE7CF720CE7FFFF0EE744E410E7CF7012E7FFFF14E780C017\n"
+":400C800016E740A018E7CF721AE701001CE718541EE7CF7020E7FFFF22E778C024E740A026E7CF7228E7FFFF2AE7ACD02CE7CF702EE7FFFF30E774C032E740A034E7CF7244\n"
+":400CC00036E7FFFF38E710E53AE7CF703CE7FFFF3EE7DCC040E740A042E7CF7244E7FFFF46E7C0E548E7CF704AE7FFFF4CE7C0BF4EE740A050E720DA52E74DB554E71C1DD3\n"
+":400D000056E7841F58E700005AE700085CE732B55EE733B560E7CF7162E7FFFF64E734AD66E7029168E751B56AE786206CE71F006EE702B170E7029172E750B574E78BB86E\n"
+":400D400076E78FB878E702B17AE78A207CE704007EE7CC1D80E7041082E7CF7184E7FFFF86E754AE88E71D898AE7CA1D8CE784108EE72A1D90E7841F92E7000094E7003390\n"
+":400D800096E7161D98E7841F9AE700009CE760099EE784B8A0E71DA9A2E780D9A4E7CF70A6E7FFFFA8E750ACAAE73DB0ACE766D8AEE716B5B0E70DD8B2E72F1DB4E7021067\n"
+":400DC000B6E701D8B8E72E1DBAE70210BCE78A20BEE7120CC0E70AB5C2E7101DC4E7841FC6E70000C8E76009CAE7121DCCE7841FCEE70000D0E76009D2E7CF71D4E7FFFFC4\n"
+":400E0000D6E730B5D8E70191DAE74FB5DCE788B8DEE789B8E0E78BB8E2E7E60BE4E7E002E6E701B1E8E798E8EAE748D8ECE703B5EEE78A20F0E7DF01F2E705B5F4E768D852\n"
+":400E4000F6E702B5F8E78A20FAE7D207FCE704B5FEE78A2200E81E0002E8A41D04E8841006E88A2108E8100E0AE8A61D0CE844100EE8CF7010E8FFFF12E8B4AF14E852B013\n"
+":400E800016E833B018E8CF701AE802001CE8043F1EE8560A20E8000422E80A2624E8009026E815F428E8CF772AE8FFFF2CE8A4F32EE8CF7030E8000032E8643334E85A0FB4\n"
+":400EC00036E8E00338E840273AE881173CE82F973EE8087640E81A6942E814B544E8CF7046E8FFFF48E8A4EC4AE830B74CE823B04EE89AEE50E8CF7052E8000054E8183E0C\n"
+":400F000056E83A0F58E8E0035AE88B715CE808765EE8001460E8003162E8532064E8410266E8042068E8800F6AE800006CE8003C6EE84AB870E8802172E8100074E818790D\n"
+":400F400076E8CF7078E8FFFF7AE8A4EC7CE822A07EE823A080E880E682E8CA2084E8820386E8780C88E8620C8AE8CA218CE8E2018EE8C97090E8110492E8601294E8A1C099\n"
+":400F800096E8E07898E8F1C09AE8860B9CE840129EE80A22A0E8802FA2E8FFFFA4E8A4ECA6E80012A8E80121AAE84A21ACE80028AEE80A24B0E8802FB2E8FFFFB4E8F4ACCA\n"
+":400FC000B6E8CF70B8E8FFFFBAE854ADBCE8CF76BEE8FFFFC0E8B4ADC2E87A70C4E887E9C6E801D9C8E835A8CAE82814CCE80D21CEE82A70D0E847F0D2E8CF75D4E8FFFFB1\n"
+":40100000D6E830B5D8E8B215DAE80111DCE80A85DEE81513E0E89520E2E83070E4E8CA21E6E80500E8E8120CEAE86012ECE805B8EEE82596F0E84A20F2E80020F4E8052966\n"
+":40104000F6E83E00F8E82E95FAE84129FCE84F71FEE8307000E9CA2102E90E0404E9480006E92E0008E9CA250AE94E140CE94C250EE900A010E9281412E90D2114E9CA20A1\n"
+":4010800016E9020418E908F41AE9108E1CE9AC781EE92F7020E963E022E9EA0B24E9601226E964D928E9B8602AE90F0F2CE904102EE9441430E9002132E90D0834E9DF024D\n"
+":4010C00036E900D938E920DD3AE90AF03CE94A203EE9402040E9156F42E9BA0B44E9601246E9A97148E908774AE90A714CE906964EE9151B50E9422052E9F17054E9CA2727\n"
+":4011000056E9051058E9660B5AE9600C5CE9F0785EE9052D60E93E1062E9CF7164E9FFFF66E934AD68E914B16AE915B16CE916B16EE917B170E9CF7072E9FFFF74E930B59A\n"
+":4011400076E94A8078E905967AE941297CE941717EE9052880E9BE0082E97A0B84E9601286E92F7088E9E3968AE902128CE901218EE9052F90E93E1092E98C2194E9088027\n"
+":4011800096E9412998E9C0719AE952689CE9CBF69EE98A23A0E90800A2E98C22A4E90880A6E9CA22A8E9CE00AAE93072ACE9CA21AEE98500B0E903F0B2E98A21B4E90800DC\n"
+":4011C000B6E98A22B8E9DF0FBAE95071BCE9CA25BEE98610C0E9CA25C2E94510C4E909B8C6E9360BC8E96012CAE9A971CCE90412CEE90121D0E9041AD2E94423D4E9022579\n"
+":40120000D6E94290D8E9CF71DAE9FFFFDCE9A4F3DEE9CA22E0E96200E2E91077E4E95CA9E6E9CA21E8E90E00EAE90496ECE9CA21EEE9CD03F0E93070F2E9CA21F4E905006F\n"
+":40124000F6E97D02F8E96012FAE9861CFCE94420FEE9E07800EAF1C002EAE1C504EACF7506EAFFFF08EAA4F30AEA05850CEA40780EEA3C8D10EA0EE912EACF7014EAFFFFC5\n"
+":4012800016EAF4AC18EA2C801AEA04D81CEA04211EEA810F20EA000022EA00E024EAB20826EAA00C28EA2DB92AEA01D82CEA85022EEA401230EAF1C032EAE1C534EACF75E8\n"
+":4012C00036EAFFFF38EA68A13AEA84E93CEA60D93EEA21A540EA9EE842EA218544EA1CE946EAE0E148EA1AF44AEACF704CEAFFFF4EEAA4F450EA241052EA818054EACF7240\n"
+":4013000056EAFFFF58EAA4F35AEA11925CEA05E95EEA4F2060EAC10062EA31B264EA04F066EAA3B868EA10796AEA11B26CEACF706EEA000070EA3E3E72EA760D74EAC003E8\n"
+":4013400076EA00D878EA01A57AEA09D87CEA35027EEA401280EAF1C082EAB60984EA401286EACF7688EAFFFF8AEAA4F48CEA18168EEA009090EACF7592EAFFFF94EA68A1EF\n"
+":4013800096EA607898EAF08D9AEA108D9CEA80E09EEACC27A0EAA190A2EA12F4A4EA620BA6EAC003A8EA0EE8AAEA00D8ACEA241EAEEA0290B0EACF70B2EAFFFFB4EA30EA98\n"
+":4013C000B6EA860FB8EAC003BAEACF70BCEA0100BEEA086CC0EA160FC2EAC003C4EADD01C6EA4012C8EAF1C0CAEAE1C5CCEACF75CEEAFFFFD0EA68A1D2EACF70D4EA0100F7\n"
+":40140000D6EA8A7BD8EA4078DAEA3115DCEA8010DEEA17E8E0EA108DE2EA2B08E4EA9100E6EA220BE8EAC003EAEA11E8ECEA01D9EEEACF70F0EAFFFFF2EAC4F3F4EA24A846\n"
+":40144000F6EACF70F8EAFFFFFAEA30EAFCEA3E0FFEEAC00300EBCF7002EB010004EB086C06EBD20E08EBC0030AEBA9010CEB40120EEBE07810EBF1C012EB2A0914EB401229\n"
+":4014800016EB087618EBCF721AEBFFFF1CEB30B51EEB009220EBCF7522EBFFFF24EBF4AC26EBABB828EB05792AEB20B22CEBD2092EEBE00330EBC97032EB03D834EB0CB8CD\n"
+":4014C00036EB5A0C38EBE0033AEB40253CEB811F3EEB84E840EB3C1D42EB821344EB650146EB401248EBF1C04AEBE2084CEB60124EEB10D850EBA1C152EB720B54EBE00ECA\n"
+":4015000056EB087158EB9A095AEB200F5CEB00DD5EEB08D860EB7A0862EB200F64EB087166EB0A0D68EB60076AEB8A206CEB04006EEB760970EB000F72EB0BD874EB0DF0DF\n"
+":4015400076EBCF7678EBFFFF7AEB14AD7CEB148E7EEB00D980EBE4FF82EB06E884EB158E86EB00D988EB8BB98AEBE2FF8CEB01E58EEB8A2290EB0F2A92EB090D94EB831402\n"
+":4015800096EBF1E898EBA7089AEB11009CEB0A219EEB802FA0EBFFFFA2EBF4ACA4EB3E11A6EB0021A8EB9108AAEB810FACEB0000AEEB5609B0EBCF70B2EBFFFFB4EB30B500\n"
+":4015C000B6EB2190B8EB1A70BAEB00DDBCEB8AB9BEEB21B0C0EBA976C2EB03F0C4EB01E6C6EB390EC8EB8314CAEB8B77CCEB0ED8CEEB8DB8D0EBBE0BD2EBE003D4EBE971B5\n"
+":40160000D6EB0A25D8EB0090DAEBF6F5DCEB0014DEEB0031E0EBE508E2EB5E81E4EB0ED8E6EB8DB8E8EBA60BEAEBE003ECEBE971EEEB0A25F0EB0090F2EBEAF5F4EB001424\n"
+":40164000F6EB0031F8EBCD08FAEB5E81FCEB83EDFEEB130E00EC821402EC01D804ECFA0806EC600C08EC23D90AEC08750CEC07F00EEC07EE10EC001012EC012114EC8DB92F\n"
+":4016800016EC001818EC44201AEC98ED1CECCF701EEC000020ECFE3122EC6E0B24ECE00326EC8B7128EC00142AEC00312CEC04B82EEC862030ECFC0332EC3D1934EC022035\n"
+":4016C00036EC0AF038EC01D83AEC22D93CEC03F03EEC0BD840EC01D942ECBE0844EC400C46EC087548ECA9704AEC41004CEC60124EECA1C050EC00D952EC0AF054ECCF708E\n"
+":4017000056ECFFFF58EC84F45AEC35785CEC41805EEC008060EC02E162EC40A064ECF10966EC948568ECCF716AECFFFF6CEC64C16EEC008170ECCF7272ECFFFF74ECA4F3A5\n"
+":4017400076EC05A278ECCF707AECFFFF7CEC00EA7EEC00A180ECCF7182ECFFFF84EC60C186EC008188EC06A28AECCF708CECFFFF8EEC80EA90EC00A192ECCF7194ECFFFFDC\n"
+":4017800096ECA4EC98ECCF709AECFFFF9CEC9CAB9EEC31B0A0ECE07FA2EC00D8A4EC0200A6EC0004A8EC0002AAEC0000ACEC0000AEEC0000B0EC0000B2EC0000B4EC0000E5\n"
+":4017C000B6EC0000B8EC0000BAEC0000BCEC0000BEEC0000C0EC0000C2EC0000C4EC0000C6EC0000C8EC0000CAEC0000CCEC0000CEEC0000D0EC0000D2EC0000D4EC0000D9\n"
+":40180000D6EC0000D8EC0000DAEC0000DCEC0000DEEC0000E0EC0000E2EC0000E4EC0000E6EC0000E8EC0000EAEC0000ECEC0000EEEC0000F0EC0000F2EC0000F4EC000098\n"
+":40184000F6EC0000F8EC0000FAEC0000FCEC0000FEEC000000ED000002ED000004ED000006ED000008ED00000AED00000CED00000EED000010ED000012ED000014ED00004D\n"
+":4018800016ED000018ED00001AED00001CED00001EED000020ED000022ED110024ED0F0726ED111028ED16122AEDFFFF2CEDFFFF2EEDFFFF30EDFFFF32EDFFFF34ED1A196F\n"
+":4018C00036ED1F1E38ED22203AEDFFFF3CED44263EED745540ED8D8742ED969444ED9D9B46EDA19F48EDA5A34AEDFFFF4CEDFFFF4EEDFFFF50EDFFFF52EDFFFF54EDFFFF26\n"
+":4019000056EDFFFF58EDFFFF5AEDFFFF5CED03C05EED5A8060EDE0A062ED413064ED423066ED002068ED48306AED88306CEDA0306EED903070EDC23272EDC0A074ED0890C1\n"
+":4019400076ED028878EDFF207AEDFF207CEDFF207EEDFF2080EDFF2082ED189084ED1A8986ED7E8088EDFF208AED5B898CEDFF208EED7B8990EDFF2092ED7F8994EDFF206D\n"
+":4019800096EDFF7F98EDFF7F9AEDFF7F9CEDFF209EEDFF7FA0EDFF7FA2EDFF7FA4EDFF20A6EDFF7FA8EDFF7FAAEDFF7FACEDFF20AEEDFF7FB0EDFF7FB2EDFF7FB4EDC4A05E\n"
+":4019C000B6EDFF20B8ED5A80BAED3990BCEDFF20BEED7F90C0ED5B89C2ED6420C4ED1B89C6ED1020C8ED0388CAEDFF7FCCEDFF7FCEEDFF7FD0EDFF7FD2EDFF7FD4EDFF207B\n"
+":401A0000D6ED6B90D8ED6420DAED8430DCED0320DEED4430E0ED0020E2ED04A0E4EDFF7FE6EDFF7FE8EDFF7FEAEDFF7FECED0024EEED0124F0EDFF7FF2EDFF7FF4ED002497\n"
+":401A4000F6ED0124F8ED0227FAED4232FCED2024FEED212400EE032702EE423204EE202406EE212408EE04270AEE42320CEE20240EEE212410EEFF7F12EEFF7F14EE012282\n"
+":401A800016EEFF7F18EEFF7F1AEEFF7F1CEE01221EEEFF7F20EEFF7F22EEFF7F24EE042426EE792728EE27242AEE81272CEE27242EEEFF7F30EEFF7F32EEFF7F34EE032735\n"
+":401AC00036EE2A2438EE03273AEE42323CEEBB273EEE282440EEBB2742EE423244EE022746EE292448EE02274AEE42324CEEC3274EEE282450EEFF7F52EEFF7F54EE00B849\n"
+":401B000056EE588058EE05A05AEE01315CEE41305EEE043160EE35B062EE75B064EEC13066EE023168EE41306AEE08B86CEE02326EEE48B870EE4CB872EE012274EE77B33C\n"
+":401B400076EE438878EE6F917AEE01227CEE4EB87EEE05F980EE07F982EE002284EE5B8886EE98A888EED8A88AEEE8F88CEED8808EEE079090EE6F9192EE062294EE08B8C7\n"
+":401B800096EE00C898EE07E89AEEDB889CEEA8F89EEE88F8A0EE0322A2EE7BB0A4EE0020A6EEC880A8EE8880AAEE0B22ACEE6AB0AEEECB88B0EE8B88B2EE2422B4EE4AB00E\n"
+":401BC000B6EE1822B8EE0D21BAEE0821BCEE2F90BEEE4BB0C0EE80F8C2EE0522C4EE0522C6EE0322C8EE0098CAEE43B0CCEEC9A8CEEEC131D0EEA880D2EE0522D4EE6F9142\n"
+":401C0000D6EE0421D8EEAB88DAEE0421DCEE08B8DEEE0098E0EE4024E2EE10F1E4EE04F8E6EE0020E8EE8880EAEE0230ECEE38B8EEEEC8A8F0EE4BB0F2EE4224F4EE1032E1\n"
+":401C4000F6EE0622F8EE8B88FAEE0322FCEECBF1FEEE012200EF023202EF80F804EF30B806EF01C808EFC2300AEF0CE80CEF01220EEF4AB010EF272212EF052214EF0022F8\n"
+":401C800016EF072218EF2F901AEF0E221CEF05221EEF042220EF42B022EFA1A924EF088026EFD3B028EFC1312AEF6B912CEF08202EEFC13230EF038832EF44A034EF44304C\n"
+":401CC00036EF002038EF04A03AEF00203CEFFF7F3EEFFF7F40EFFF7F42EFFF7F44EF84A046EFD03048EF7C804AEF41314CEF41304EEF423050EF002052EF423154EF41304F\n"
+":401D000056EF423058EF00205AEF81325CEF41305EEF423060EF002062EF903264EF413066EF423068EF00206AEF10316CEF41306EEF002070EF203172EF413074EF0020A2\n"
+":401D400076EF823278EF41307AEF00207CEFA0327EEF413080EF002082EF1B8884EF7F8886EF8CA088EF1F228AEF84A08CEF40248EEF603290EF483292EF95B094EF10F18A\n"
+":401D800096EF64F898EF0DF99AEF84309CEFC1329EEF9030A0EF8830A2EF4324A4EF5880A6EF0130A8EF4224AAEF2032ACEF0220AEEF6788B0EF0420B2EF0388B4EF022058\n"
+":401DC000B6EFC230B8EFA0A9BAEF94B0BCEF0122BEEFC4A0C0EF4430C2EF0020C4EF04A0C6EFFF7FC8EFFF7FCAEFFF7FCCEF80B9CEEF81A8D0EFC1A8D2EF0881D4EF05A1F1\n"
+":401E0000D6EFC130D8EF2020DAEF0131DCEF4130DEEF0431E0EF0231E2EF4130E4EF60F8E6EF95B0E8EF0120EAEF88B9ECEFF8B9EEEFFCB9F0EF0388F2EF6F91F4EF0120A4\n"
+":401E4000F6EFFEB9F8EF05F9FAEF07F9FCEF0232FEEF0B8800F097B302F0E8F804F0888106F0079008F06F910AF004220CF037B10EF0B8B910F001C812F007E814F077B172\n"
+":401E800016F08B8818F0A8F81AF088F81CF003221EF0C8A820F07BB022F0002024F0888126F0888028F00B222AF06AB02CF08B882EF08B8830F0242232F04AB034F01422CB\n"
+":401EC00036F04BB038F02F903AF080F83CF011223EF0052240F0042242F043B044F0C1A846F0C13148F000224AF0C8804CF003214EF06F9150F0062152F0CB8854F00A215F\n"
+":401F000056F0C1A858F040245AF010F15CF004F85EF0002060F0888062F0022064F08B8866F0023068F088B96AF042246CF010326EF0062270F0072272F0023274F0C1A821\n"
+":401F400076F0132078F088807AF00C207CF08B887EF0052080F0D0A882F04BB084F080F886F080B988F000C88AF0C2308CF00CE88EF0012290F04AB092F0132294F0252207\n"
+":401F800096F0888098F005229AF08B889CF003229EF02F90A0F00622A2F00422A4F042B0A6F0A1A9A8F05880AAF093B0ACF0C131AEF06B91B0F00720B2F08430B4F0C1324A\n"
+":401FC000B6F00388B8F044A1BAF04430BCF00020BEF004A0C0F000B8C2F0FF7FC4F0D030C6F081A9C8F0C1A9CAF00620CCF084A1CEF000B8D0F0FC80D2F04131D4F04130BD\n"
+":40200000D6F04230D8F00020DAF04231DCF04130DEF04230E0F00020E2F08132E4F04130E6F04230E8F00020EAF09032ECF04130EEF04230F0F00020F2F01031F4F041301B\n"
+":40204000F6F00020F8F02031FAF04130FCF00020FEF0823200F1413002F1002004F1A03206F1413008F100200AF19B880CF1FF880EF1402410F1603212F1483214F195B0FC\n"
+":4020800016F110F118F164F81AF10DF91CF1C2321EF1A03020F1903022F1883024F1432426F1D88028F101302AF106222CF1DB882EF1422430F1203232F1102034F101209D\n"
+":4020C00036F1C23038F198803AF110203CF19B883EF1082040F19A8042F10A2044F1028046F1A1A948F194B04AF101224CF103884EF1C4A150F1443052F100B854F104A0C4\n"
+":4021000056F1FF7F58F1FF7F5AF1FF7F5CF102805EF1189860F1013162F1413064F1002066F1023168F141306AF118806CF102206EF1388070F1052272F11B8874F13B882D\n"
+":4021400076F1192178F118807AF102227CF100807EF1012280F1038882F1009884F1FF7F86F1FF7F88F1FF7F8AF1FF7F8CF180B98EF1603290F1013192F1413094F10020BD\n"
+":4021800096F1023198F141309AF128809CF10A229EF10B88A0F12B88A2F14024A4F195B0A6F110F1A8F164F8AAF10DF9ACF10880AEF10430B0F10222B2F14224B4F12B88FC\n"
+":4021C000B6F12032B8F10420BAF10B88BCF10420BEF1FF7FC0F1FF7FC2F1FF7FC4F10D24C6F15127C8F12324CAF15027CCF12124CEF1FF7FD0F1FF7FD2F1FF7FD4F1503230\n"
+":40220000D6F1D827D8F12B24DAF1D927DCF12B24DEF15032E0F123C0E2F10224E4F123C0E6F15127E8F12324EAF12BC0ECF15027EEF12124F0F103C0F2F1FF7FF4F1FF7F0E\n"
+":40224000F6F1FF7FF8F1FF7FFAF1FF7FFCF10424FEF1792700F2272402F2812704F2272406F2FF7F08F2FF7F0AF2FF7F0CF291270EF2282410F2992712F2262414F2FF7F6D\n"
+":4022800016F2FF7F18F2FF7F1AF2FF7F1CF2A1271EF2282420F2A92722F2262424F2FF7F26F2FF7F28F2FF7F2AF2FF7F2CF267C12EF2002430F267C032F2052434F20C2442\n"
+":4022C00036F2FF7F38F2FF7F3AF2FF7F3CF2C2303EF2A0A940F294B042F2012244F2FF7F46F2FF7F48F2FF7F4AF2FF7F4CF200B84EF2588050F205A052F2013154F2413082\n"
+":4023000056F2043158F235B05AF275B05CF2C1305EF2023160F2413062F208B864F2023266F248B868F24CB86AF201226CF277B36EF2438870F26F9172F2012274F24EB820\n"
+":4023400076F205F978F207F97AF200227CF25B887EF298A880F2D8A882F2E8F884F2D88086F2079088F26F918AF206228CF208B88EF200C890F207E892F2DB8894F2A8F8B9\n"
+":4023800096F288F898F203229AF27BB09CF200209EF2C880A0F28880A2F20B22A4F26AB0A6F2CB88A8F28B88AAF21F22ACF24AB0AEF21322B0F20D21B2F20821B4F22F903A\n"
+":4023C000B6F24BB0B8F280F8BAF20522BCF20522BEF20322C0F20098C2F243B0C4F2C9A8C6F2C131C8F2A880CAF20522CCF26F91CEF20421D0F2AB88D2F20421D4F208B80D\n"
+":40240000D6F20098D8F24024DAF210F1DCF204F8DEF20020E0F28880E2F20230E4F238B8E6F2C8A8E8F24BB0EAF24224ECF21032EEF20622F0F28B88F2F20322F4F2CBF1BA\n"
+":40244000F6F20122F8F20232FAF280F8FCF230B8FEF201C800F3C23002F30CE804F3012206F34AB008F317220AF305220CF307220EF32F9010F30E2212F3052214F3042299\n"
+":4024800016F342B018F3A1A91AF308801CF3D3B01EF3C13120F36B9122F3082024F3C13226F3038828F344A02AF344302CF300202EF304A030F3002032F3FF7F34F3FFFF09\n"
+":4024C00036F3FFFF38F30A033AF300003CF31A303EF3D01040F3403042F3000044F3443046F3000448F3B0304AF320804CF364304EF3000050F3AC3152F30C1854F3AE314B\n"
+":4025000056F3010058F3D0315AF301005CF3E0335EF3000060F3DA3362F3000064F3C03366F3002068F3C2336AF300406CF3C4336EF3004870F3C63372F3005874F3C83325\n"
+":4025400076F3007878F3CA337AF300807CF3CC337EF3009080F3CE3382F300B084F3D03386F300B488F3D2338AF300BC8CF3D4338EF300CC90F3D63392F3FFEB94F3F43341\n"
+":4025800096F3FFEB98F3F6339AF3FFEB9CF3F8339EF3FFEBA0F3FA33A2F3FFEBA4F31010A6F30000A8F3943EAAF30020ACF36E3EAEF300E2B0F3983EB2F30010B4F3923F1B\n"
+":4025C000B6F3004CB8F30000BAF30000BCF30000BEF30000C0F30000C2F30000C4F30000C6F30000C8F30000CAF30000CCF30000CEF30000D0F32000D2F31111D4F340008D\n"
+":40260000D6F32222D8F38000DAF33333DCF30001DEF34444E0F30002E2F35555E4F35A00E6F38000E8F3B500EAF30001ECF36A01EEF30000F0F38000F2F3B500F4F300018A\n"
+":40264000F6F36A01F8F3FF01FAF30000FCF31900FEF3230000F4320002F4460004F4640006F4000008F423000AF432000CF446000EF4640010F48D0012F4000014F40100BF\n"
+":4026800016F4020018F403001AF405001CF409001EF4000020F4010022F4020024F4030026F4050028F409002AF400002CF400002EF4000030F4000032F4000034F4000063\n"
+":4026C00036F4000038F400003AF400003CF400003EF4000040F4000042F4005D44F4000046F4000048F400004AF400004CF400004EF4000050F4000052F4000054F40000ED\n"
+":4027000056F4000058F400005AF400005CF400005EF4000060F4000062F4000064F4000066F4000068F400006AF400006CF400006EF4000070F4000072F4000074F4000009\n"
+":4027400076F4000078F400007AF400007CF400007EF4000080F4000082F4000084F4FFFF86F4F4C088F4FFFF8AF490D88CF4FFFF8EF4A4C390F4FFFF92F418D994F4FFFF5F\n"
+":4027800096F4C4C098F4FFFF9AF450D99CF4FFFF9EF4D4C0A0F4FFFFA2F460DAA4F4FFFFA6F408C1A8F4FFFFAAF4D0DAACF4FFFFAEF41CBEB0F4FFFFB2F4ECE5B4F4FFFF00\n"
+":4027C000B6F460C0B8F4FFFFBAF440E6BCF4FFFFBEF46CC0C0F4FFFFC2F448E6C4F4FFFFC6F4B4C1C8F4FFFFCAF498E8CCF4FFFFCEF45CC1D0F4FFFFD2F4C8EAD4F4FFFFF5\n"
+":40280000D6F458C0D8F4FFFFDAF448EB8E09000000FC002502FC382604FC03A106FC040208FC482540000287FFFFFFFF40000187FFFFFFFF4000008EAAAAAAAA2222010076\n"
+":4028400002DC04004000018E44C8028800C400001111111130C8000032C8A62444C802C844C802E824C88016CAC8A001CCC8A001DAC8A0011AC820001CC800014000008DA0\n"
+":402880004000018D00FC923002FC400204FC000C4000068D4000088D00FC923102FC220204FC00494000068D4000088D00FC943102FC1A0204FC00A64000068D4000088D9D\n"
+":4028C00000FC983102FCB60204FC00914000068D4000088D00FC6E3302FC010204FC00474000068D4000088D00FC2E3402FC000204FC00144000068D4000088D00FCB83495\n"
+":4029000002FC000204FC00014000068D4000088D00FCBA3402FC000204FC00014000068D4000088D00FCD43402FC000204FC00014000068D4000088D00FC083502FCAF02C6\n"
+":4029400004FC001A4000068D4000088D00FC1A3502FCF40204FC00004000068D4000088D00FC203502FC000204FC00804000068D4000088D00FC223502FC7D0204FC00194C\n"
+":402980004000068D4000088D00FC243502FCFF0204FC009F4000068D4000088D00FC2C3502FC0F0204FC00024000068D4000088D00FC303502FC1F0204FC00184000068D53\n"
+":4029C0004000088D00FC343502FC380204FC00984000068D4000088D00FC3A3502FC9A0204FC00BA4000068D4000088D00FC3C3502FC9A0204FC008A4000068D4000088D85\n"
+":402A000000FC443502FC030204FC000F4000068D4000088D00FC463502FC520204FC00034000068D4000088D00FC503502FC800204FC006C4000068D4000088D00FC62354B\n"
+":402A400002FC0C0204FC00084000068D4000088D00FC643502FC120204FC00234000068D4000088D00FC683502FC000204FC00284000068D4000088D00FC6A3502FC8102A3\n"
+":402A800004FC00AA4000068D4000088D00FC6C3502FC6A0204FC007F4000068D4000088D00FC6E3502FC060204FC008A4000068D4000088D00FC763502FC1D0204FC00FFFC\n"
+":402AC0004000068D4000088D00FCB23702FC1F0204FC00FF4000068D4000088D00FC723C02FC000204FC00764000068D4000088D00FC743C02FC000204FC00314000068D0B\n"
+":402B00004000088D00FC763C02FC000204FC00DC4000068D4000088D00FC783C02FC010204FC00AA4000068D4000088D00FC7A3C02FC030204FC00524000068D4000088DDC\n"
+":402B400000FC7C3C02FC060204FC00AA4000068D4000088D00FC3E3E02FC000204FC004A4000068D4000088D00FC003E02FC800204FC00004000068D4000088D00FCBC3491\n"
+":402B800002FC080204FC00084000068D4000088D00FC943402FC080204FC00084000068D4000088D00FC963402FC5F0204FC00004000068D4000088D00FC743402FC000270\n"
+":402BC00004FC006F4000068D4000088D00FC583402FC000204FC008D4000068D4000088D00FC903402FC000204FC00454000068D4000088D00FC083C02FC010204FC00040F\n"
+":402C00004000068D4000088D00FC063C02FC0C0204FC003C4000068D4000088D00FC283D02FCEA0204FC00604000068D4000088D00FC2A3D02FCEA0204FC00604000068DEB\n"
+":402C40004000088D00FC903202FCF80204FC000C4000068D4000088D00FC923202FCF80204FC000C4000068D4000088D00FC943202FCF80204FC000C4000068D4000088D3B\n"
+":402C800000FC963202FCF80204FC000C4000068D4000088D00FC983202FCFF0204FC00FF4000068D4000088D00FC9A3202FCFF0204FC00FF4000068D4000088D00FC9C3200\n"
+":402CC00002FCFF0204FC00FF4000068D4000088D00FC9E3202FCFF0204FC00FF4000068D4000088D00FC103102FC000204FC00114000068D4000088D00FC923402FC000204\n"
+":402D000004FC00044000068D4000088D00FC963402FC5B0204FC00004000068D4000088D00FCA03402FC000204FC00364000068D4000088D00FCA43402FC000204FC003567\n"
+":402D40004000068D4000088D00FCA63402FC000204FC00404000068D4000088D00FC123502FC0E0204FC00D64000068D4000088D00FC163502FC880204FC00884000068DF4\n"
+":402D80004000088D00FC183502FC400204FC00404000068D4000088D00FC1C3502FCCF0204FC00F64000068D4000088D00FC283502FCE00204FC000A4000068D4000088D28\n"
+":402DC00000FC2A3502FC080204FC00274000068D4000088D00FC2E3502FC060204FC000A4000068D4000088D00FC3A3502FC1A0204FC00BA4000068D4000088D00FC3E3534\n"
+":402E000002FC200204FC00444000068D4000088D00FC403502FC440204FC00444000068D4000088D00FC423502FC440204FC008F4000068D4000088D00FC483502FC3A0244\n"
+":402E400004FC003C4000068D4000088D00FC4A3502FC3C0204FC003C4000068D4000088D00FC4C3502FC320204FC001E4000068D4000088D00FC4E3502FC1E0204FC001EA3\n"
+":402E80004000068D4000088D00FC023E02FC0F0204FC00324000068D4000088D00FC143E02FC000204FC003F4000068D4000088D00FC163E02FC1F0204FC00FF4000068DCF\n"
+":402EC0004000088D00FC183E02FC0F0204FC00204000068D4000088D00FC2A5602FC030204FC00E84000068D4000088D00FC123102FC710204FC00E74000068D4000088D86\n"
+":402F000000FC6A3302FC000204FC00C04000068D4000088D00FC6E3002FC3D0204FC00104000068D4000088D00FC7E3002FC000204FC001F4000068D4000088D4000028DC1\n"
+":402F40004000008D4000018D00FCA25002FC000204FC00004000068D4000088D00FCA45002FC000204FC00004000068D4000088D00FCA65002FC130204FC00134000068D9D\n"
+":402F80004000088D00FCA85002FC060204FC00064000068D4000088D00FCAA5002FC020204FC00024000068D4000088D00FCAC5002FC0C0204FC00094000068D4000088D3D\n"
+":402FC00000FCAE5002FC540204FC004E4000068D4000088D00FCB05002FCDE0204FC00D44000068D4000088D00FCB25002FC000204FC00064000068D4000088D00FCB4508B\n"
+":4030000002FC100204FC00104000068D4000088D00FCB65002FC050204FC00054000068D4000088D00FCB85002FCF40204FC00F44000068D4000088D4000028D4000008DE4\n"
+":403040004000018D00FC025002FC000204FC00004000068D4000088D00FC065002FC0F0204FC00F04000068D4000088D00FC085002FC000204FC005A4000068D4000088D3D\n"
+":4030800000FC0A5002FC000204FC00804000068D4000088D00FC0C5002FC000204FC00804000068D4000088D00FC0E5002FC000204FC005A4000068D4000088D00FC10505A\n"
+":4030C00002FC000204FC005A4000068D4000088D00FC125002FC000204FC007E4000068D4000088D00FC145002FC000204FC007E4000068D4000088D00FC165002FC000262\n"
+":4031000004FC005A4000068D4000088D00FC185002FC000204FC00014000068D4000088D00FC1A5002FC000204FC00014000068D4000088D00FC1C5002FC000204FC000108\n"
+":403140004000068D4000088D00FC1E5002FC000204FC00014000068D4000088D00FC205002FC000204FC000D4000068D4000088D00FC225002FC000204FC000D4000068D25\n"
+":403180004000088D00FC245002FC000204FC000D4000068D4000088D00FC265002FC000204FC000D4000068D4000088D00FC385002FC0F0204FC00AC4000068D4000088D07\n"
+":4031C00000FC3A5002FC0F0204FC00AC4000068D4000088D00FC3C5002FC0F0204FC00AC4000068D4000088D00FC3E5002FC0F0204FC00AC4000068D4000088D00FC405082\n"
+":4032000002FC040204FC00924000068D4000088D00FCBE5002FC070204FC00804000068D4000088D00FCC05002FC040204FC00384000068D4000088D00FCC25002FC000219\n"
+":4032400004FC005A4000068D4000088D00FCC45002FC000204FC007F4000068D4000088D00FCC65002FC000204FC007F4000068D4000088D00FCC85002FC000204FC005A6E\n"
+":403280004000068D4000088D00FCCA5002FC000204FC000D4000068D4000088D00FCCC5002FC000204FC000D4000068D4000088D00FCCE5002FC000204FC000D4000068DD4\n"
+":4032C0004000088D00FCD05002FC000204FC000D4000068D4000088D00FCDA5002FC000204FC000A4000068D4000088D00FCDC5002FC000204FC000A4000068D4000088D76\n"
+":4033000000FCDE5002FC000204FC000A4000068D4000088D00FCE05002FC000204FC000A4000068D4000088D00FCE25002FCFF0204FC00FF4000068D4000088D00FCE450CF\n"
+":4033400002FCFF0204FC00FF4000068D4000088D00FCE65002FCFF0204FC00FF4000068D4000088D00FCE85002FCFF0204FC00FF4000068D4000088D00FCEA5002FC0402BB\n"
+":4033800004FC00924000068D4000088D00FC025202FC000204FC00004000068D4000088D00FC065202FC0F0204FC00F04000068D4000088D00FC085202FC000204FC003258\n"
+":4033C0004000068D4000088D00FC0A5202FC000204FC00464000068D4000088D00FC0C5202FC000204FC00464000068D4000088D00FC0E5202FC000204FC00324000068D36\n"
+":403400004000088D00FC105202FC000204FC00324000068D4000088D00FC125202FC000204FC00464000068D4000088D00FC145202FC000204FC00464000068D4000088DE1\n"
+":4034400000FC165202FC000204FC00324000068D4000088D00FC185202FC000204FC00034000068D4000088D00FC1A5202FC000204FC00034000068D4000088D00FC1C5280\n"
+":4034800002FC000204FC00034000068D4000088D00FC1E5202FC000204FC00034000068D4000088D00FC205202FC000204FC00034000068D4000088D00FC225202FC0002C1\n"
+":4034C00004FC00034000068D4000088D00FC245202FC000204FC00034000068D4000088D00FC265202FC000204FC00034000068D4000088D00FC305202FC000204FC000A5D\n"
+":403500004000068D4000088D00FC325202FC000204FC000A4000068D4000088D00FC345202FC000204FC000A4000068D4000088D00FC365202FC000204FC000A4000068D1C\n"
+":403540004000088D00FC385202FC0F0204FC00FF4000068D4000088D00FC3A5202FC0F0204FC00FF4000068D4000088D00FC3C5202FC0F0204FC00FF4000068D4000088DBC\n"
+":4035800000FC3E5202FC0F0204FC00FF4000068D4000088D00FC405202FC040204FC00924000068D4000088D00FC9C5202FC000204FC00324000068D4000088D00FC9E524D\n"
+":4035C00002FC000204FC00464000068D4000088D00FCA05202FC000204FC00464000068D4000088D00FCA25202FC000204FC00324000068D4000088D00FCA45202FC000245\n"
+":4036000004FC00034000068D4000088D00FCA65202FC000204FC00034000068D4000088D00FCA85202FC000204FC00034000068D4000088D00FCAA5202FC000204FC0003A4\n"
+":403640004000068D4000088D00FCB45202FC000204FC000A4000068D4000088D00FCB65202FC000204FC000A4000068D4000088D00FCB85202FC000204FC000A4000068D55\n"
+":403680004000088D00FCBA5202FC000204FC000A4000068D4000088D00FCBC5202FCFF0204FC00FF4000068D4000088D00FCBE5202FCFF0204FC00FF4000068D4000088D19\n"
+":4036C00000FCC05202FCFF0204FC00FF4000068D4000088D00FCC25202FCFF0204FC00FF4000068D4000088D00FCC45202FC040204FC00924000068D4000088D00FC0253BF\n"
+":4037000002FC000204FC00004000068D4000088D00FC065302FC0F0204FC00F04000068D4000088D00FC085302FC000204FC00324000068D4000088D00FC0A5302FC00025B\n"
+":4037400004FC00464000068D4000088D00FC0C5302FC000204FC00464000068D4000088D00FC0E5302FC000204FC00324000068D4000088D00FC185302FC000204FC000371\n"
+":403780004000068D4000088D00FC1A5302FC000204FC00034000068D4000088D00FC1C5302FC000204FC00034000068D4000088D00FC1E5302FC000204FC00034000068DF4\n"
+":4037C0004000088D00FC405302FC040204FC00924000068D4000088D00FC025402FC000204FC00004000068D4000088D00FC065402FC0F0204FC00F04000068D4000088D30\n"
+":4038000000FC085402FC000204FC00324000068D4000088D00FC0A5402FC000204FC00464000068D4000088D00FC0C5402FC000204FC00464000068D4000088D00FC0E5466\n"
+":4038400002FC000204FC00324000068D4000088D00FC185402FC000204FC00034000068D4000088D00FC1A5402FC000204FC00034000068D4000088D00FC1C5402FC0002DA\n"
+":4038800004FC00034000068D4000088D00FC1E5402FC000204FC00034000068D4000088D00FC405402FC040204FC00924000068D4000088D4000028D4000008D4000018D0C\n"
+":4038C00000FC6E3302FC800004FC80004000078D4000088D00FC425202FC300004FC30004000078D4000088D00FC465202FC000204FC00804000068D4000088D00FC48529B\n"
+":4039000002FC000204FC00324000068D4000088D00FC4A5202FC000204FC00464000068D4000088D00FC4C5202FC000204FC00464000068D4000088D00FC4E5202FC000203\n"
+":4039400004FC00324000068D4000088D00FCC65202FC000204FC00324000068D4000088D00FCC85202FC000204FC00464000068D4000088D00FCCA5202FC000204FC00461D\n"
+":403980004000068D4000088D00FCCC5202FC000204FC00324000068D4000088D00FC505202FC000204FC00324000068D4000088D00FC525202FC000204FC00464000068D3A\n"
+":4039C0004000088D00FC545202FC000204FC00464000068D4000088D00FC565202FC000204FC00324000068D4000088D00FC585202FC000204FC00034000068D4000088D93\n"
+":403A000000FC5A5202FC000204FC00034000068D4000088D00FC5C5202FC000204FC00034000068D4000088D00FC5E5202FC000204FC00034000068D4000088D00FCCE526B\n"
+":403A400002FC000204FC00034000068D4000088D00FCD05202FC000204FC00034000068D4000088D00FCD25202FC000204FC00034000068D4000088D00FCD45202FC0002E5\n"
+":403A800004FC00034000068D4000088D00FC605202FC000204FC00034000068D4000088D00FC625202FC000204FC00034000068D4000088D00FC645202FC000204FC0003F2\n"
+":403AC0004000068D4000088D00FC665202FC000204FC00034000068D4000088D00FC705202FC000204FC000A4000068D4000088D00FC725202FC000204FC000A4000068DB2\n"
+":403B00004000088D00FC745202FC000204FC000A4000068D4000088D00FC765202FC000204FC000A4000068D4000088D00FC785202FCFF0204FC00FF4000068D4000088D5A\n"
+":403B400000FC7A5202FCFF0204FC00FF4000068D4000088D00FC7C5202FCFF0204FC00FF4000068D4000088D00FC7E5202FCFF0204FC00FF4000068D4000088D00FC805227\n"
+":403B800002FC040204FC00924000068D4000088D00FC425302FC300004FC30004000078D4000088D00FC465302FC000204FC00804000068D4000088D00FC485302FC0002DB\n"
+":403BC00004FC00324000068D4000088D00FC4A5302FC000204FC00464000068D4000088D00FC4C5302FC000204FC00464000068D4000088D00FC4E5302FC000204FC00320C\n"
+":403C00004000068D4000088D00FC585302FC000204FC00034000068D4000088D00FC5A5302FC000204FC00034000068D4000088D00FC5C5302FC000204FC00034000068DB5\n"
+":403C40004000088D00FC5E5302FC000204FC00034000068D4000088D00FC705302FC000204FC000A4000068D4000088D00FC725302FC000204FC000A4000068D4000088D33\n"
+":403C800000FC745302FC000204FC000A4000068D4000088D00FC765302FC000204FC000A4000068D4000088D00FC785302FCFF0204FC00FF4000068D4000088D00FC7A53E2\n"
+":403CC00002FCFF0204FC00FF4000068D4000088D00FC7C5302FCFF0204FC00FF4000068D4000088D00FC7E5302FCFF0204FC00FF4000068D4000088D00FC805302FC040267\n"
+":403D000004FC00924000068D4000088D00FC425402FC300004FC30004000078D4000088D00FC465402FC000204FC00804000068D4000088D00FC485402FC000204FC003228\n"
+":403D40004000068D4000088D00FC4A5402FC000204FC00464000068D4000088D00FC4C5402FC000204FC00464000068D4000088D00FC4E5402FC000204FC00324000068DE6\n"
+":403D80004000088D00FC585402FC000204FC00034000068D4000088D00FC5A5402FC000204FC00034000068D4000088D00FC5C5402FC000204FC00034000068D4000088D2F\n"
+":403DC00000FC5E5402FC000204FC00034000068D4000088D00FC705402FC000204FC000A4000068D4000088D00FC725402FC000204FC000A4000068D4000088D00FC7454C0\n"
+":403E000002FC000204FC000A4000068D4000088D00FC765402FC000204FC000A4000068D4000088D00FC785402FCFF0204FC00FF4000068D4000088D00FC7A5402FCFF0221\n"
+":403E400004FC00FF4000068D4000088D00FC7C5402FCFF0204FC00FF4000068D4000088D00FC7E5402FCFF0204FC00FF4000068D4000088D00FC805402FC040204FC00924F\n"
+":403E80004000068D4000088D4000028D111111110CC833040EC8A0BE44C802E81111111138C802043AC841081111111138C802043AC8BD081111111138C802043AC8BD0C57\n"
+":403EC0001111111138C804043AC8BD0C1111111138C804033AC8BD0C40C8060040C8060206C848000AC8C70704C8680008C89F0414C8B00416C8600918C80000A0C80000FB\n"
+":403F0000A2C80000A4C88007A6C83804E4CA8007E6CA3804E8CA110022220200EACA0000EBCA0300FCCA014814C86B0416C82008CACA5E01CACA5E03D0CA3500D0CA5500DE\n"
+":403F400022220200C8CA0100C9CA0000DCC84301DEC8B4FFE0C80900E2C8B9FFE4C83701E6C81000E8C8D5FFEAC872FFECC8B90112C97E0014C94801EEC83701F0C89CFF0A\n"
+":403F8000F2C82D00F4C8C1FFF6C83A01F8C80500FAC81100FCC87FFFFEC8700116C9B40018C91C0100C9150102C90B0004C9E0FF06C9D1FF08C922010AC90D000CC9140046\n"
+":403FC0000EC9C4FF10C929011AC9C8001CC9AF001EC9950B20C9B81022C9641924C9C40926C96419222201007DC910003AAC80002AC91E002CC914002EC9700030C996000E\n"
+":4040000032C9FAFF34C9E3FF80C9AC0D2222060082C97C0083C9800084C9800085C9820086C9800087C98300400006864000078600FC0028400000812222020036C92000AC\n"
+":4040400037C9200038C900003AC900003CC910103EC9000040C9000042C9120144C9020046C9001048C900004AC963064CC932214EC9000050C9000052C9220054C93222C8\n"
+":4040800056C9002158C911005AC920215CC900115EC9002160C9113762C9435764C9160066C9103268C935106AC900506CC903426EC9236470C9240072C9045574C902322F\n"
+":4040C00076C905338CC8A8000CCAB7FA1032B00E02BCC50302CC830D44C802E802A81C002222020012A808001CA88C00CEC82000BEC820003CA8E6033EA8000340A83301A0\n"
+":40410000222201002EC8120002CC870D26C880012AC887032CC80C00222201002FC8050028C8A30188C9170E02240800BEBCFFFFC0BCC800BABC1000BCBC1400C2BC000020\n"
+":40414000C4BC3B00CCC900FDCEC900019AC900069CC9000BA0C9C800A2C9540B1424A00B1624A00F182450C31A2400FA1C2405001E2450002024A5002224A5002424A5009B\n"
+":404180002624010096C9E00298C920068AC90800E6C9F00A222204002ACA32002BCA05002ECA32002FCA080022321209243212060434001320CAF40122CAB80B24CAC00DE4\n"
+":4041C00026CA200078CA800080CAA30188CA8D0690CA1A0D7ACA770082CA23008ACA690092CACB007CCA320084CA32008CCA320094CA320020CB770024CB230028CB6900AB\n"
+":404200002CCBCB0030CB770034CB230038CB69003CCBCB0022CB320026CB32002ACB32002ECB320032CB320036CB32003ACB32003ECB32001111111140CB000042CBD0074F\n"
+":404240001111111144CB000046CBAC0D1111111148CB00004ACB50C3111111114CCB00004ECB18F62222020064CB000065CB030060CB000062CB00FA70CA030172CA0300A9\n"
+":4042800074CAE80376CA000D22220C0042CA020043CA160048CA020049CA16004ECA14004FCA04005ECA01005FCA500064CA010065CADC006ACA1E006BCA050004BCFF0753\n"
+":4042C00004BCFF070035AF0100358F0100358D010035890134CA83002222040038CA850039CA120036CA140037CA75000ABC00000CBC05000EBC090010BC0E0012BC1300BC\n"
+":4043000014BC180016BC1C0018BC21001ABC26001CBC2F001EBC390020BC420022BC4C0024BC5E0026BC700028BC80002ABC8F002CBCAC002EBCC60030BCDF0032BCF600F8\n"
+":4043400034BC220136BC4B0138BC71013ABC95013CBCD8013EBC170240BC510242BC880244BCF00246BC500348BCAA034ABCFF034CBC00004EBC030050BC060052BC090001\n"
+":4043800054BC0C0056BC0F0058BC12005ABC15005CBC18005EBC1E0060BC250062BC2B0064BC310066BC3D0068BC49006ABC55006CBC61006EBC770070BC8D0072BCA20032\n"
+":4043C00074BCB60076BCDD0078BC02017ABC26017CBC49017EBC8C0180BCCD0182BC0B0284BC470286BCBC0288BC2B038ABC97038CBCFF032222010007BC000030CA000867\n"
+":4044000032CA000108CA0300C0C900FEC2C98011C8C90008CAC98011BCC91300BEC92400C4C93C00C6C93C00A6C90000A4C90000DAC91000DCC90800DEC90400E0C90000E3\n"
+":40444000E2C90000E4C90000362440000024020402243500222202002CCA01002DCA03009CCA8005A8CAB800B4CA80FCA4CA5801B0CA78002222020028CA440029CA440013\n"
+":404480002CA84D0A2EA85A0930A8800932A8800A34A8800936A8800938A880093AA88009C8C8200294C9FF5F222203000CB050000DB01E00D1C83C0000FC002840000081DE\n"
+":4044C0000234002E2E3400001111111108C400000AC4503900FC0028400000818E09444844C800E84000008D4000018D00FC003E02FC000204FC00004000068D4000088D16\n"
+":4045000000FC3A3502FC9A0204FC009A4000068D4000088D00FC6E3502FC040204FC008A4000068D4000088D00FC223502FC050204FC00194000068D4000088D00FC3E3ECE\n"
+":4045400002FC000204FC000C4000068D4000088D00FC923002FC400204FC008C4000068D4000088D00FC0E3502FC200204FC00924000068D4000088D00FC6E3302FC01021E\n"
+":4045800004FC00424000068D4000088D00FC643302FC070204FC00664000068D4000088D00FC283502FCE00204FC00084000068D4000088D00FC183502FC440204FC0044AF\n"
+":4045C0004000068D4000088D00FC483502FC3A0204FC002A4000068D4000088D00FC4A3502FC320204FC003C4000068D4000088D00FC123502FC0E0204FC00DC4000068DFD\n"
+":404600004000088D00FC2C3502FCA80204FC00004000068D4000088D4000028D4000008DFFFFFFFF8E09007C00FCA23002FC000204FC00014000068DFFFFFFFF00FCA630DD\n"
+":4046400002FC000204FC00014000068DFFFFFFFF4000088DFFFFFFFF4000028DFFFFFFFF00FC002840000081FFFFFFFF8E0990C822220100C8CA0100FECA800700CB800785\n"
+":4046800044C802E8CACA9405D0CA44001111111138C802043AC81D1940C80801111111110CC8C3040EC8807B14C8870216C80A0810C80A0812C80A08FCCA0160222201001F\n"
+":4046C000EACA0000E4CA8002E6CAE00122220200A8C80000A9C8000006C802030AC8810504C8F40108C8D303A0C80000A2C80000A4C88002A6C8E00100FC00284000008198\n"
+":40470000400001818E0990C822220100C8CA0100FECA800700CB800744C802E8CACA9405D0CA44001111111138C802043AC81D1940C80801111111110CC8C3040EC8807B0B\n"
+":4047400014C85F0316C80A0810C80A0812C80A08FCCA016022220100EACA0000E4CA0005E6CAC00322220200A8C80000A9C8000006C8C2010AC8C10604C8040108C8C30436\n"
+":40478000A0C80000A2C80000A4C80005A6C8C00300FC002840000081FFFFFFFF40000181FFFFFFFF4000008DFFFFFFFF4000008DFFFFFFFF8E09007C00FCA23002FC000273\n"
+":4047C00004FC00034000068DFFFFFFFF8E09007C00FCA23002FC000204FC00034000068DFFFFFFFF00FCA63002FC000204FC00034000068DFFFFFFFF00FCA63002FC0002BE\n"
+":4048000004FC00034000068DFFFFFFFF4000088DFFFFFFFF4000088DFFFFFFFF4000028DFFFFFFFF4000028DFFFFFFFFA4C88002A6C8E001E4CA8002E6CAE00100FC00284C\n"
+":4048400040000081FFFFFFFFA4C88002A6C8E001E4CA8002E6CAE00100FC002840000081FFFFFFFF8E0990C822220100C8CA0100FECA800700CB800744C802E8CACA940511\n"
+":40488000D0CA44001111111138C802043AC81D1940C80801111111110CC8C3040EC8807B14C8560316C8200810C80A0812C80A08FCCA016022220100EACA0000E4CA0005F3\n"
+":4048C000E6CAD00222220200A8C80000A9C8000006C8C2010AC8C10604C87D0108C84C04A0C80000A2C80000A4C80005A6C8D00200FC002840000081400001818E0990C862\n"
+":4049000022220100C8CA0100FECA800700CB800744C802E8CACA9405D0CA44001111111138C802043AC81D1940C80801111111110CC8C3040EC8807B14C89D0216C80A084F\n"
+":4049400010C80A0812C80A08FCCA016022220100EACA0000E4CAC003E6CA1C0222220200A8C80000A9C8000006C862020AC8210604C8D60108C8F103A0C80000A2C8000077\n"
+":40498000A4C8C003A6C81C0200FC002840000081400001818E0990C822220100C8CA0100FECA800700CB800744C802E8CACA9405D0CA44001111111138C802043AC81D19AA\n"
+":4049C00040C80801111111110CC8C3040EC8807B14C8800216C8001010C80A0812C80A08FCCA016022220100EACA0000E4CA8007E6CA380422220200A8C80000A9C800006C\n"
+":404A000006C882000AC8010804C8C90008C80005A0C80000A2C80000A4C88007A6C8380400FC002840000081FFFFFFFF40000181FFFFFFFF4000008DFFFFFFFF4000008D3D\n"
+":404A4000FFFFFFFF8E09007C00FCA23002FC000204FC00034000068DFFFFFFFF8E09007C00FCA23002FC000204FC00034000068DFFFFFFFF00FCA63002FC000204FC0003FF\n"
+":404A80004000068DFFFFFFFF00FCA63002FC000204FC00034000068DFFFFFFFF4000088DFFFFFFFF4000088DFFFFFFFF4000028DFFFFFFFF4000028DFFFFFFFFA4C8C0031C\n"
+":404AC000A6C81C02E4CAC003E6CA1C0200FC002840000081FFFFFFFFA4C8C003A6C81C02E4CAC003E6CA1C0200FC002840000081FFFFFFFF8E0990C822220100C8CA010068\n"
+":404B0000FECA800700CB800744C802E8CACA9405D0CA44001111111138C802043AC81D1940C80801111111110CC8C3040EC8807B14C80E0516C80A0810C80A0812C80A08DB\n"
+":404B4000FCCA016022220100EACA0000E4CA8007E6CA380422220200A8C80000A9C8000006C882000AC8010804C8C90008C80005A0C80000A2C80000A4C88007A6C83804C9\n"
+":404B800000FC002840000081400001818E09C44AC4CA00000036F0090236EAEF0436EE750636303C083651000A36100A0C36CB8F0E360F571036704C1236112B14369009FE\n"
+":404BC0001636EAC41836CE201A3610401C3611161E36F00920360AEE22366E752436103D2636B10128364DA62A366EFC2C3692812E366F273036B2103236EBF034360EBFAF\n"
+":404C00003636D1F03836EE583A36F14E3C360DD53E36EF844036D28642366D0B4436D20F4636ADA44836EEFF4A36D2814C36CF344E36F21350368F645236F0905436D49EFA\n"
+":404C40005636359A583615B15A36300F5C3690A25E36548F6036559D623655D864364F5B6636CF926836F4956A3675A26C3675C26E362F5E7036508A7236949B7436F59A75\n"
+":404C8000763655B6783670E67A36B1B27C36F3017E3696DA803677DF8236718C843672C2863673528836B6E18A3698858C3610C98E36D0879036740D9236B6E29436F7FFDD\n"
+":404CC0009636D0F7983651899A3633309C36B6E39E3657EEA036F38BA23672C3A436D666A636F357A836D7A6AA36F397AC3673BBAE36B678B036F33DB23617DEB436D393FB\n"
+":404D0000B63692B0B8367704BA36D40EBC3617DCBE36F38EC0369299C236F670C4363133C63657C6C8369003CA369C04C4CA01008E09C44AC4CA00000036B0300236CCCFDE\n"
+":404D40000436D11506366D1F0836118F0A36F0300C364CE10E36910810362D4512366FEB143610301636EB93183691421A36AA9D1C3652931E36703020364CCB2236311624\n"
+":404D80002436ED1D2636718F283650492A36CF2E2C3613AA2E3671A23036B4553236305B34368F053636D3B4383650D93A3674653C3610573E366F48403653B3423671EAC3\n"
+":404DC00044365457463610494836AF2E4A3673A94C36519F4E3654555036F2C2523652DA5436B57D56363600583675D35A36D2C75C3672D15E3696016036D57E6236D5DA88\n"
+":404E0000643632BC6636B38B683615566A36161C6C3631AE6E3672C3703672DA7236957F74361600763615DC7836D3697A3694507C36F7CF7E365795803658258236F34D0F\n"
+":404E4000843674758636D7CA883617B48A3698138C36F35E8E3634799036B7B3923677C29436972A9636B36B9836D4519A3637D29C3657979E361828A036D3BAA236D598CC\n"
+":404E8000A4363804A6367355A83659D1AA36738AAC3615C2AE367801B036D628B23699BBB43633B3B63695A3B8361771BA36D537BC3619B1BE36B3BCC036759AC236D804BF\n"
+":404EC000C436D418C63619D0C8367401CA367604C4CA01008E09C44AC4CA00000036900B0236ED9D04360F3E06366EC40836F0090A36100B0C36CD9A0E3690101036EDFC62\n"
+":404F00001236B1431436B00A1636AD8918362F5E1A36CEE01C364F491E36500B20368D9C22368F3E24362EBF2636B00D2836AF402A366C062C368E182E36D2513036F33BF7\n"
+":404F400032360F333436AD0E3636B012383612583A3673313C36AF443E36EC694036AE374236B23F4436332C4636AF3F48362B5E4A368E234C3652554E36133F5036CF7A0D\n"
+":404F80005236F2505436B34A5636F4CD583615A95A36D0365C3612245E363308603674B7623694CA6436CF7E663612376836F31F6A3694BD6C36158C6E3670047036125350\n"
+":404FC0007236B343743674D0763615A7783671AE7A3655827C3694EA7E36170A803617638236D1AC843614BB863653DB883656728A36774E8C3611AB8E36B4EE903634A8FB\n"
+":405000009236D70A94361766963671BD983615829A3694D39C36D7079E363756A036712EA236551CA436B2F5A6367883A836F8D3AA36B15CAC367443AE36D480B03657F12E\n"
+":40504000B236B8E5B436712DB6361513B836F3DCBA36F88BBC3618F0BE361142C036D51AC23673C7C4367880C63658C6C8367401CA36B004C4CA01008E09444844C800E8AE\n"
+":405080004000008D4000018D00FC003E02FC000204FC00004000068D4000088D00FC3A3502FC9A0204FC009A4000068D4000088D00FC6E3502FC040204FC008A4000068D2C\n"
+":4050C0004000088D00FC223502FC050204FC00194000068D4000088D00FC3E3E02FC000204FC000C4000068D4000088D00FC923002FC400204FC008C4000068D4000088D64\n"
+":4051000000FC0E3502FC200204FC00924000068D4000088D00FC6E3302FC010204FC00424000068D4000088D00FC643302FC070204FC00664000068D4000088D00FC28354D\n"
+":4051400002FCE00204FC00084000068D4000088D00FC183502FC440204FC00444000068D4000088D00FC483502FC3A0204FC002A4000068D4000088D00FC4A3502FC3202F4\n"
+":4051800004FC003C4000068D4000088D00FC123502FC0E0204FC00DC4000068D4000088D00FC2C3502FCA80204FC00004000068D4000088D4000028D8E09444844C802E8A1\n"
+":4051C0004000008D4000018D00FC003E02FC800204FC00004000068D4000088D00FC3A3502FC1A0204FC00BA4000068D4000088D00FC6E3502FC060204FC008A4000068DC9\n"
+":405200004000088D00FC223502FC7D0204FC00194000068D4000088D00FC3E3E02FC000204FC00424000068D4000088D00FC923002FC400204FC000C4000068D4000088DF4\n"
+":4052400000FC0E3502FC200204FC00884000068D4000088D00FC6E3302FC010204FC00C74000068D4000088D00FC643302FC060204FC00DE4000068D4000088D00FC28351A\n"
+":4052800002FCE00204FC000A4000068D4000088D00FC183502FC400204FC00404000068D4000088D00FC483502FC3A0204FC003C4000068D4000088D00FC4A3502FC3C029D\n"
+":4052C00004FC003C4000068D4000088D00FC123502FC0E0204FC00D64000068D4000088D00FC2C3502FC0F0204FC00024000068D4000088D4000028D00FC00284000008131\n"
+":40530000FFFFFFFF4953505468726561644C6F6F70006170303230325F7365745F64656661756C7473006170303230325F726573746F72655F636F6E74726F6C7300617000\n"
+":40534000303230325F7365745F73747265616D006170303230325F7365745F6374726C006170303230325F68666C6970006170303230325F7365745F6864725F6D6F646597\n"
+":40538000006170303230325F6578706F737572655F6162736F6C757465006170303230325F726F695F77696E646F77006170303230325F69737375655F636F6D6D616E6430\n"
+":1853C000006170303230325F70617273655F726567646174610000008F\n"
+":020000040800F2\n"
+":4000000008040020D5000008C9010008C701000800000000000000000000000000000000000000000000000000000000CD0100080000000000000000CB010008CF01000893\n"
+":40004000E7000008E7000008E7000008E7000008E7000008E7000008E7000008E700000800000000E7000008E7000008E7000008E7000008E7000008E7000008E70000087F\n"
+":40008000E7000008E7000008E700000800000000E7000008E7000008E7000008E7000008E7000008E7000008E7000008E7000008E7000008E700000800000000000000001D\n"
+":4000C0000348854600F014F80048004751020008080400200448804704480047FEE7FEE7FEE7FEE7FEE7FEE7DD010008C1000008064C0125064E05E0E36807CC2B430C3CA0\n"
+":4001000098471034B442F7D3FFF7DEFFA4020008C402000810B500210748C9438162002282624162426201620262C161C26100F00DF8002010BD0000001002400248016829\n"
+":40014000491C016070470000000000207047000008B515480168821511430160C16889088900C1600168114A114001600168012212041140009101689200914301600021AD\n"
+":40018000C16042680A4B1A4005235B03D218426042681F231B029A438314D2184260016105490448086008BD00100240D4FFF6FEFF1FFF0068FF1F0004000020704710B525\n"
+":4001C000FFF7FCFF10BDFEE770477047704710B5FFF7B4FFFFF7F3FF10BD000010480168821511430160C1680E4A1140C16001680D4A1140016081684908490081600168D5\n"
+":400200000122920491430160C168FD2212049143C160002101610549C003886070470000001002400C40FF88F6FFF6FE00ED00E002E008C8121F08C1002AFAD17047704760\n"
+":40024000002001E001C1121F002AFBD17047000008B5002462B60F48009401680E4A1140C204914214D1416800910D46016881F3088872B609498860FFF76AFF08480461F9\n"
+":4002800044618461012080F31088FFF743FFA847FEE70000000400080000FE2F00ED00E000E000E0C4020008000000200800000030020008CC020008080000200004000084\n"
+":0C02C000400200080000000080841E00C6\n"
+":020000040802F0\n"
+":20FFC00031314e4c3230474d534c5858583031313130643230666362355858585858585807\n"
+":04000005080000C12E\n"
+":00000001FF\n"
diff --git a/NileCAM21_CUOAGX/ar0233.h b/NileCAM21_CUOAGX/ar0233.h
new file mode 100644
index 0000000..5994dbe
--- /dev/null
+++ b/NileCAM21_CUOAGX/ar0233.h
@@ -0,0 +1,329 @@
+/*
+ * ar0233.h - ar0233 sensor mode tables
+ *
+ * Copyright (c) 2017-2018, e-con Systems, All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef __AR0233_TABLES__
+#define __AR0233_TABLES__
+
+#include <media/camera_common.h>
+
+#define AR0233_TABLE_WAIT_MS	0
+#define AR0233_TABLE_END	1
+#define AR0233_WAIT_MS		10
+#define AR0233_DEFAULT_MODE	0
+
+#define AR0233_DEFAULT_WIDTH    1920
+#define AR0233_DEFAULT_HEIGHT	1080
+#define AR0233_DEFAULT_DATAFMT  MEDIA_BUS_FMT_UYVY8_1X16
+#define AR0233_NUM_CONTROLS 30
+
+#define PADCTL_AO_CFG2TMC_GPIO_SEN8_0 0x0c30208c
+#define PADCTL_AO_CFG2TMC_GPIO_SEN9_0 0x0c302094
+
+////////////////////////////////////////////////////////////////////////////////////////////
+
+/* Defines related to MCU */
+
+#define CMD_SIGNATURE		0x43
+#define TX_LEN_PKT			5
+#define RX_LEN_PKT			6
+#define HEADER_FOOTER_SIZE	4
+#define CMD_STATUS_MSG_LEN	7
+
+#define VERSION_SIZE			32
+#define VERSION_FILE_OFFSET			100
+
+#define MCU_CMD_STATUS_SUCCESS		0x0000
+#define MCU_CMD_STATUS_PENDING		0xF000
+#define MCU_CMD_STATUS_ISP_PWDN		0x0FF0
+#define MCU_CMD_STATUS_ISP_UNINIT	0x0FF1
+
+#define MAX_NUM_FRATES                 10
+#define MAX_CTRL_DATA_LEN 		100
+#define MAX_CTRL_UI_STRING_LEN 		32
+/* Defines related to SOC find */
+#define JETSON_TX2 	0x18
+#define JETSON_TX1 	0x21
+/* Defines related to Deserializer SIO port*/
+#define PHY_A 'A'
+#define PHY_B 'B'
+
+//#define AR0233_HDR_SYNC
+
+uint8_t ser_status;
+/* Define for GPIO usage*/
+//#define GPIO_DEBUG
+typedef enum _errno {
+	ERRCODE_SUCCESS = 0x00,
+	ERRCODE_BUSY = 0x01,
+	ERRCODE_INVAL = 0x02,
+	ERRCODE_PERM = 0x03,
+	ERRCODE_NODEV = 0x04,
+	ERRCODE_IO = 0x05,
+	ERRCODE_HW_SPEC = 0x06,
+	ERRCODE_AGAIN = 0x07,
+	ERRCODE_ALREADY = 0x08,
+	ERRCODE_NOTIMPL = 0x09,
+	ERRCODE_RANGE = 0x0A,
+
+	/*   Reserved 0x0B - 0xFE */
+
+	ERRCODE_UNKNOWN = 0xFF,
+} RETCODE;
+
+typedef enum _cmd_id {
+	CMD_ID_VERSION = 0x00,
+	CMD_ID_GET_SENSOR_ID = 0x01,
+	CMD_ID_GET_STREAM_INFO = 0x02,
+	CMD_ID_GET_CTRL_INFO = 0x03,
+	CMD_ID_INIT_CAM = 0x04,
+	CMD_ID_GET_STATUS = 0x05,
+	CMD_ID_DE_INIT_CAM = 0x06,
+	CMD_ID_STREAM_ON = 0x07,
+	CMD_ID_STREAM_OFF = 0x08,
+	CMD_ID_STREAM_CONFIG = 0x09,
+	CMD_ID_GET_CTRL_UI_INFO = 0x0A,
+
+	/* Reserved 0x0B to 0x0F */
+
+	CMD_ID_GET_CTRL = 0x10,
+	CMD_ID_SET_CTRL = 0x11,
+
+	/* Reserved 0x12, 0x13 */
+
+	CMD_ID_FW_UPDT = 0x14,
+	CMD_ID_ISP_PDOWN = 0x15,
+	CMD_ID_ISP_PUP = 0x16,
+
+	/* Configuring MIPI Lanes */
+	CMD_ID_LANE_CONFIG = 0x17,
+
+	/* Reserved - 0x17 to 0xFE (except 0x43) */
+
+	CMD_ID_UNKNOWN = 0xFF,
+
+} HOST_CMD_ID;
+
+enum {
+	FRAME_RATE_DISCRETE = 0x01,
+	FRAME_RATE_CONTINOUS = 0x02,
+};
+
+enum {
+	CTRL_STANDARD = 0x01,
+	CTRL_EXTENDED = 0x02,
+};
+
+enum {
+/*  0x01 - Integer (32bit)
+		0x02 - Long Int (64 bit)
+		0x03 - String
+		0x04 - Pointer to a 1-Byte Array
+		0x05 - Pointer to a 2-Byte Array
+		0x06 - Pointer to a 4-Byte Array
+		0x07 - Pointer to Generic Data (custom Array)
+*/
+
+	EXT_CTRL_TYPE_INTEGER = 0x01,
+	EXT_CTRL_TYPE_LONG = 0x02,
+	EXT_CTRL_TYPE_STRING = 0x03,
+	EXT_CTRL_TYPE_PTR8 = 0x04,
+	EXT_CTRL_TYPE_PTR16 = 0x05,
+	EXT_CTRL_TYPE_PTR32 = 0x06,
+	EXT_CTRL_TYPE_VOID = 0x07,
+};
+
+/* Stream and Control Info Struct */
+typedef struct _isp_stream_info {
+	uint32_t fmt_fourcc;
+	uint16_t width;
+	uint16_t height;
+	uint8_t frame_rate_type;
+	union {
+		struct {
+			uint16_t frame_rate_num;
+			uint16_t frame_rate_denom;
+		} disc;
+		struct {
+			uint16_t frame_rate_min_num;
+			uint16_t frame_rate_min_denom;
+			uint16_t frame_rate_max_num;
+			uint16_t frame_rate_max_denom;
+			uint16_t frame_rate_step_num;
+			uint16_t frame_rate_step_denom;
+		} cont;
+	} frame_rate;
+} ISP_STREAM_INFO;
+
+
+typedef struct _isp_ctrl_ui_info {
+	struct {
+		char ctrl_name[MAX_CTRL_UI_STRING_LEN];
+		uint8_t ctrl_ui_type;
+		uint8_t ctrl_ui_flags;
+	} ctrl_ui_info;
+
+	/* This Struct is valid only if ctrl_ui_type = 0x03 */
+	struct {
+		uint8_t num_menu_elem;
+		char **menu;
+	} ctrl_menu_info;
+} ISP_CTRL_UI_INFO;
+
+typedef struct _isp_ctrl_info_std {
+	uint32_t ctrl_id;
+	uint8_t ctrl_type;
+	union {
+		struct {
+			int32_t ctrl_min;
+			int32_t ctrl_max;
+			int32_t ctrl_def;
+			int32_t ctrl_step;
+		} std;
+		struct {
+			uint8_t val_type;
+			uint32_t val_length;
+			// This size may vary according to ctrl types
+			uint8_t val_data[MAX_CTRL_DATA_LEN];
+		} ext;
+	} ctrl_data;
+	ISP_CTRL_UI_INFO ctrl_ui_data;
+} ISP_CTRL_INFO;
+
+struct cam {
+	struct camera_common_power_rail power;
+	int numctrls;
+	struct v4l2_ctrl_handler ctrl_handler;
+	struct i2c_client *i2c_client;
+	struct v4l2_subdev *subdev;
+	struct media_pad pad;
+
+	int reg_offset;
+
+	s32 group_hold_prev;
+	bool group_hold_en;
+	struct regmap *b_regmap;
+	struct regmap *w_regmap;
+	struct regmap *dw_regmap;
+
+	struct camera_common_data *s_data;
+	struct camera_common_pdata *pdata;
+	int ident;
+	u16 chip_id;
+	u8 revision;
+
+	uint16_t frate_index;
+	uint32_t format_fourcc;
+	int frmfmt_mode;
+	int num_ctrls;
+	ISP_STREAM_INFO *stream_info;
+	ISP_CTRL_INFO *mcu_ctrl_info;
+	/* Total formats */
+	int *streamdb;
+	uint32_t *ctrldb;
+	/* Array of Camera framesizes */
+	struct camera_common_frmfmt *mcu_cam_frmfmt;
+	uint16_t prev_index;
+	uint16_t mipi_lane_config;
+	uint8_t last_sync_mode;
+	uint8_t phy;
+	uint8_t ser_addr;
+	uint8_t des_addr;
+	uint8_t tb_id;
+	struct mutex mcu_i2c_mutex;
+
+#ifdef AR0233_HDR_SYNC
+	uint8_t hdr_track;
+	uint8_t frame_sync_track;
+	uint8_t change_sync;
+	uint8_t hdr_val;
+	uint8_t is_cam_changed_already;
+#endif
+//	uint8_t ser_status;
+	uint8_t trig_val;
+	int trigger_gpio;
+	struct v4l2_ctrl *ctrls[];
+};
+
+enum {
+        MODE_640x480 = 0,
+        MODE_960x540,
+        MODE_1280x720,
+        MODE_1280x960,
+        MODE_1920x1080,
+        MODE_UNKNOWN,
+};
+
+enum {
+	V4L2_CID_FACEDETECT = (V4L2_CID_AUTO_FOCUS_RANGE+1),
+	V4L2_CID_FACEMARK,
+	V4L2_CID_SMILEDETECT,
+	V4L2_GET_FACEINFO,
+	V4L2_CID_ROI_WINDOW,
+	V4L2_CID_ROI_FOCUS,
+	V4L2_CID_ROI_EXPOSURE,
+	V4L2_CID_TRIGGER_FOCUS,
+
+	/* New Controls */
+	V4L2_CID_HDR,
+	V4L2_CID_CUSTOM_TRIGGER,
+	V4L2_CID_COLORKILL,
+	V4L2_CID_FRAME_SYNC,
+	V4L2_CID_CUSTOM_EXPOSURE_AUTO,
+	V4L2_CID_CUSTOM_FLASH_STROBE,
+	V4L2_CID_DENOISE,
+	V4L2_CID_GRAYSCALE,
+	V4L2_CID_LSCMODE,
+	V4L2_CID_FOCUS_WINDOW,
+	V4L2_CID_EXPOSURE_COMPENSATION,
+};
+
+DEFINE_MUTEX(g_i2c_mutex);
+
+
+static int cam_g_volatile_ctrl(struct v4l2_ctrl *ctrl);
+static int cam_s_ctrl(struct v4l2_ctrl *ctrl);
+static int cam_read(struct i2c_client *client, u8 * val, u32 count);
+static int cam_write(struct i2c_client *client, u8 * val, u32 count);
+static int cam_s_parm(struct v4l2_subdev *sd, struct v4l2_streamparm *param);
+int cam_s_power(struct v4l2_subdev *sd, int on);
+#ifdef GPIO_DEBUG
+static void toggle_gpio(unsigned int gpio, int value);
+#endif
+static int mcu_get_fw_version(struct i2c_client *client, unsigned char * fw_version, unsigned char *txt_fw_version);
+unsigned char errorcheck(char *data, unsigned int len);
+
+static int mcu_list_fmts(struct i2c_client *client, ISP_STREAM_INFO *stream_info, int *frm_fmt_size,struct cam *);
+static int mcu_list_ctrls(struct i2c_client *client,
+			  ISP_CTRL_INFO * mcu_ctrl_info, struct cam *);
+static int mcu_get_sensor_id(struct i2c_client *client, uint16_t * sensor_id);
+static int mcu_get_cmd_status(struct i2c_client *client, uint8_t * cmd_id,
+			      uint16_t * cmd_status, uint8_t * ret_code);
+static int mcu_isp_init(struct i2c_client *client);
+static int mcu_stream_config(struct i2c_client *client, uint32_t format,
+			     int mode, int frate_index);
+static int mcu_set_ctrl(struct i2c_client *client, uint32_t ctrl_id,
+			uint8_t ctrl_type, int32_t curr_val);
+static int mcu_get_ctrl(struct i2c_client *client, uint32_t ctrl_id,
+			uint8_t * ctrl_type, int32_t * curr_val);
+static int mcu_get_ctrl_ui(struct i2c_client *client,
+			   ISP_CTRL_INFO * mcu_ui_info, int index);
+static int mcu_fw_update(struct i2c_client *client, unsigned char *txt_fw_version);
+static int mcu_cam_stream_on(struct i2c_client *client);
+static int mcu_cam_stream_off(struct i2c_client *client);
+static int gen_mcu_stream_config(struct i2c_client *client,struct cam *priv);
+#endif				/* __AR0233_TABLES__ */
diff --git a/NileCAM21_CUOAGX/ar0233_common.c b/NileCAM21_CUOAGX/ar0233_common.c
new file mode 100644
index 0000000..3103eb4
--- /dev/null
+++ b/NileCAM21_CUOAGX/ar0233_common.c
@@ -0,0 +1,3966 @@
+/*
+ * ar0233.c - AR0233 sensor driver
+ * Copyright (c) 2017-2018, e-con Systems.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include <linux/slab.h>
+#include <linux/uaccess.h>
+#include <linux/gpio.h>
+#include <linux/module.h>
+
+#include <linux/seq_file.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
+#include <linux/of_gpio.h>
+
+#include <media/camera_common.h>
+#include "../../../../nvidia/drivers/media/platform/tegra/camera/camera_gpio.h"
+//#include <soc/tegra/chip-id.h>
+
+#include "ar0233.h"
+#include "tb.h"
+#include "serdes.h"
+#include "mcu_firmware.h"
+
+#include "pca9685.h"
+
+#define DEBUG_PRINTK
+#ifndef DEBUG_PRINTK
+#define debug_printk(s , ... )
+#else
+#define debug_printk printk
+#endif
+
+#ifdef AR0233_HDR_SYNC
+static uint8_t num_cam = 0;
+static uint8_t cam_track = 0;
+static uint8_t is_sync_changed = 0;
+#endif
+
+static const struct v4l2_ctrl_ops cam_ctrl_ops = {
+	.g_volatile_ctrl = cam_g_volatile_ctrl,
+	.s_ctrl = cam_s_ctrl,
+};
+
+static void toggle_gpio(unsigned int gpio, int val)
+{
+	if (gpio_cansleep(gpio)){
+		gpio_direction_output(gpio,val);
+		gpio_set_value_cansleep(gpio, val);
+	} else{
+		gpio_direction_output(gpio,val);
+		gpio_set_value(gpio, val);
+	}
+}
+
+static int cam_power_on(struct camera_common_data *s_data)
+{
+	int err = 0;
+	struct cam *priv = (struct cam *)s_data->priv;
+	struct camera_common_power_rail *pw = &priv->power;
+
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+	dev_dbg(&priv->i2c_client->dev, "%s: power on\n", __func__);
+
+	if (priv->pdata && priv->pdata->power_on) {
+		err = priv->pdata->power_on(pw);
+		if (err)
+			dev_err(&priv->i2c_client->dev,"%s failed.\n", __func__);
+		else
+			pw->state = SWITCH_ON;
+		return err;
+	}
+
+	if (pw->avdd)
+		err = regulator_enable(pw->avdd);
+	if (err)
+		goto cam_avdd_fail;
+
+	if (pw->iovdd)
+		err = regulator_enable(pw->iovdd);
+	if (err)
+		goto cam_iovdd_fail;
+
+	usleep_range(1350, 1360);
+
+	pw->state = SWITCH_ON;
+	return 0;
+
+cam_iovdd_fail:
+	regulator_disable(pw->avdd);
+
+cam_avdd_fail:
+	dev_err(&priv->i2c_client->dev,"%s failed.\n", __func__);
+	return -ENODEV;
+}
+
+static int cam_power_put(struct cam *priv)
+{
+	struct camera_common_power_rail *pw = &priv->power;
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	if (unlikely(!pw))
+		return -EFAULT;
+
+	pw->avdd = NULL;
+	pw->iovdd = NULL;
+
+	if (priv->pdata->use_cam_gpio)
+		cam_gpio_deregister(&priv->i2c_client->dev, pw->pwdn_gpio);
+	else {
+		gpio_free(pw->pwdn_gpio);
+		gpio_free(pw->reset_gpio);
+	}
+
+	return 0;
+}
+
+static int cam_power_get(struct cam *priv)
+{
+	struct camera_common_power_rail *pw = &priv->power;
+	struct camera_common_pdata *pdata = priv->pdata;
+	const char *mclk_name;
+	const char *parentclk_name;
+	struct clk *parent;
+	int err = 0;
+
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	mclk_name =
+		priv->pdata->mclk_name ? priv->pdata->mclk_name : "cam_mclk1";
+	pw->mclk = devm_clk_get(&priv->i2c_client->dev, mclk_name);
+	if (IS_ERR(pw->mclk)) {
+		dev_err(&priv->i2c_client->dev, "unable to get clock %s\n",
+				mclk_name);
+		return PTR_ERR(pw->mclk);
+	}
+
+	parentclk_name = priv->pdata->parentclk_name;
+	if (parentclk_name) {
+		parent = devm_clk_get(&priv->i2c_client->dev, parentclk_name);
+		if (IS_ERR(parent))
+			dev_err(&priv->i2c_client->dev,
+					"unable to get parent clcok %s",
+					parentclk_name);
+		else
+			clk_set_parent(pw->mclk, parent);
+	}
+
+
+	err |=
+		camera_common_regulator_get(&priv->i2c_client->dev, &pw->avdd,
+				pdata->regulators.avdd);
+
+	err |=
+		camera_common_regulator_get(&priv->i2c_client->dev, &pw->iovdd,
+				pdata->regulators.iovdd);
+
+	pw->state = SWITCH_OFF;
+	return err;
+}
+
+static int cam_s_stream(struct v4l2_subdev *sd, int enable)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	int err = 0;
+
+
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	// Increment the refs count when streaming and decrement when streaming is disabled
+	if (enable) {
+		if (!try_module_get(s_data->owner))
+			return -ENODEV;
+	} else {
+		module_put(s_data->owner);
+	}
+	
+
+	if (!enable) {
+		/* Perform Stream Off Sequence - if any */
+		err = mcu_cam_stream_off(client);
+
+		/* Reset Frame rate index */
+		priv->frate_index = 0;
+
+		return err;
+	}
+	/* Perform Stream On Sequence - if any  */
+
+	err = mcu_cam_stream_on(client);
+	if(err!= 0){
+		dev_err(&client->dev,"%s (%d) Stream_On \n", __func__, __LINE__);
+		return err;
+	}
+	mdelay(10);
+	return 0;
+}
+
+static int mcu_cam_stream_off(struct i2c_client *client)
+{
+	uint32_t payload_len = 0;
+
+	uint16_t cmd_status = 0;
+	uint8_t retcode = 0, cmd_id = 0;
+	int retry = 1000, err = 0;
+	/* call ISP init command */
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/*lock semaphore*/
+	mutex_lock(&priv->mcu_i2c_mutex);
+
+	/* First Txn Payload length = 0 */
+	payload_len = 0;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_STREAM_OFF;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_STREAM_OFF;
+	err = cam_write(client, mc_data, 2);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) CAM Stream OFF Write Error - %d \n", __func__,
+				__LINE__, err);
+		goto exit;
+	}
+
+	while (--retry > 0) {
+		/* Some Sleep for init to process */
+		yield();
+
+		cmd_id = CMD_ID_STREAM_OFF;
+		if (mcu_get_cmd_status(client, &cmd_id, &cmd_status, &retcode) <
+				0) {
+			dev_err(&client->dev," %s(%d) CAM Get CMD Stream Off Error \n", __func__,
+					__LINE__);
+			err = -1;
+			goto exit;
+		}
+
+		if ((cmd_status == MCU_CMD_STATUS_SUCCESS) &&
+				(retcode == ERRCODE_SUCCESS)) {
+			debug_printk(" %s %d CAM Get CMD Stream off Success !! \n", __func__, __LINE__ );
+			err = 0;
+			goto exit;
+		}
+
+		if ((retcode != ERRCODE_BUSY) &&
+				((cmd_status != MCU_CMD_STATUS_PENDING))) {
+			dev_err(&client->dev,
+					"(%s) %d CAM Get CMD Stream off Error STATUS = 0x%04x RET = 0x%02x\n",
+					__func__, __LINE__, cmd_status, retcode);
+			err = -1;
+			goto exit;
+		}
+		mdelay(1);
+	}
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+	return err;
+}
+
+static int cam_g_input_status(struct v4l2_subdev *sd, u32 * status)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	struct camera_common_power_rail *pw = &priv->power;
+
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	*status = pw->state == SWITCH_ON;
+	return 0;
+}
+
+static int cam_g_parm(struct v4l2_subdev *sd, struct v4l2_streamparm *param)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+
+	if (!priv || !priv->pdata) {
+		return -ENOTTY;
+	}
+
+	param->parm.capture.capability |= V4L2_CAP_TIMEPERFRAME;
+
+	param->parm.capture.timeperframe.denominator =
+		priv->mcu_cam_frmfmt[priv->frmfmt_mode].framerates[priv->frate_index];
+	param->parm.capture.timeperframe.numerator = 1;
+
+	return 0;
+}
+
+static int gen_mcu_stream_config(struct i2c_client *client,struct cam *priv)
+{
+	int  err = 0, retry = 5;
+	uint16_t data = 0;
+
+	while (retry-- > 0) {
+		if ((tb_read_16b_reg(client, 0x0032, &data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*Enable FrmStop bit */
+		data |= 0x8000;
+		if ((tb_write_16b_reg(client, 0x0032, data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*1 Frame time delay Required*/
+		mdelay(35);
+		if ((tb_read_16b_reg(client, 0x0004, &data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*Disable Parallel port*/
+		data &= (~(1 << 6 ));
+		if ((tb_write_16b_reg(client, 0x0004, data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		if ((tb_read_16b_reg(client, 0x0032, &data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*Reset video buffer poiters*/
+		data |= 0xC000;
+		if ((tb_write_16b_reg(client, 0x0032, data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*Switch OFF clocks*/			
+		if ((tb_write_16b_reg(client, 0x0018, 0x0603, priv->tb_id)) < 0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);	
+			err = -EIO;
+			continue;
+		}
+		if ((tb_write_16b_reg(client, 0x0018, 0x0603, priv->tb_id)) < 0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);			
+			err = -EIO;
+			continue;
+		}
+		mdelay(10);
+
+		/* call stream config with width, height, frame rate */
+		err =
+			mcu_stream_config(client, priv->format_fourcc, priv->frmfmt_mode,
+					priv->frate_index);
+		if (err < 0) {
+			dev_err(&client->dev, "%s: Failed stream_config \n", __func__);
+			if(retry != 0)
+				continue;
+			if(err < 0){
+				dev_err(&client->dev," %s (%d ) \n", __func__, __LINE__);
+				return err;
+			}
+		}
+
+		/* Change Byte Count */
+		if (tb_write_16b_reg
+				(client, 0x0022,
+				 (2 * priv->mcu_cam_frmfmt[priv->frmfmt_mode].size.width), priv->tb_id) < 0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		if (tb_read_16b_reg
+				(client, 0x0022,
+				 &data, priv->tb_id) < 0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*Switch ON clocks*/			
+		if ((tb_write_16b_reg(client, 0x0018, 0x0613, priv->tb_id)) < 0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);	
+			err = -EIO;
+			continue;
+		}
+		mdelay(1);
+		if ((tb_read_16b_reg(client, 0x0032, &data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/*Enable FrmStop and Reset poiters to video buffer*/
+		data &= (~(3 << 14));
+		if ((tb_write_16b_reg(client, 0x0032, data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		if ((tb_read_16b_reg(client, 0x0004, &data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+		/* Enable Parallel port */
+		data |= (1 << 6);
+		if ((tb_write_16b_reg(client, 0x0004, data, priv->tb_id)) < 0) {
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			err = -EIO;
+			continue;
+		}
+
+		mdelay(50);
+		break;
+	}
+	if(retry <= 0) {
+		dev_err(&client->dev, "%s(%d): Failed \n", 						
+				__func__, __LINE__);
+		return err;
+	}
+
+	return 0;
+
+}
+
+static int cam_s_parm(struct v4l2_subdev *sd, struct v4l2_streamparm *param)
+{
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	int ret = 0, err = 0, retry = 3;
+	uint16_t data = 0;
+
+	if (!priv || !priv->pdata) {
+		return -EINVAL;
+	}
+
+	for (ret = 0; ret < priv->mcu_cam_frmfmt[priv->frmfmt_mode].num_framerates;
+			ret++) {
+		if ((priv->mcu_cam_frmfmt[priv->frmfmt_mode].framerates[ret] ==
+					param->parm.capture.timeperframe.denominator)) {
+			priv->frate_index = ret;
+
+			param->parm.capture.capability |= V4L2_CAP_TIMEPERFRAME;
+			param->parm.capture.timeperframe.denominator = 	priv->mcu_cam_frmfmt[priv->frmfmt_mode].framerates[priv->frate_index]; 
+			param->parm.capture.timeperframe.numerator = 1;
+
+			err = gen_mcu_stream_config(client, priv);
+
+			if(err < 0){
+				dev_err(&client->dev," %s (%d ) \n", __func__, __LINE__);
+				return err;
+			}
+
+		}
+	}
+
+	/* if S_PARM is called with invalid parameters, set the right parameters and return success */
+	param->parm.capture.capability |= V4L2_CAP_TIMEPERFRAME;
+	param->parm.capture.timeperframe.denominator = 	priv->mcu_cam_frmfmt[priv->frmfmt_mode].framerates[priv->frate_index]; 
+	param->parm.capture.timeperframe.numerator = 1;	
+
+	return 0;
+}
+
+static struct v4l2_subdev_video_ops cam_subdev_video_ops = {
+	.s_stream = cam_s_stream,
+	//.g_mbus_config = camera_common_g_mbus_config,
+	.g_input_status = cam_g_input_status,
+	.g_parm = cam_g_parm,
+	.s_parm = cam_s_parm,
+};
+
+static struct v4l2_subdev_core_ops cam_subdev_core_ops = {
+	.s_power = camera_common_s_power,
+};
+
+static int cam_get_fmt(struct v4l2_subdev *sd, struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_format *format)
+{
+	return camera_common_g_fmt(sd, &format->format);
+}
+
+static int cam_set_fmt(struct v4l2_subdev *sd, struct v4l2_subdev_pad_config *cfg,
+		struct v4l2_subdev_format *format)
+{
+	int ret;
+	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	int flag = 0, err = 0, retry = 3;
+	uint16_t data = 0;
+
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+	switch (format->format.code) {
+		case MEDIA_BUS_FMT_UYVY8_1X16:
+			priv->format_fourcc = V4L2_PIX_FMT_UYVY;
+			break;
+
+		default:
+			/* Not Implemented */
+			if (format->which != V4L2_SUBDEV_FORMAT_TRY) {		
+				return -EINVAL;
+			}
+	}
+
+	if (format->which == V4L2_SUBDEV_FORMAT_TRY) {
+		ret = camera_common_try_fmt(sd, &format->format);
+	} else {
+
+		for (ret = 0; ret < s_data->numfmts; ret++) {
+			if ((priv->mcu_cam_frmfmt[ret].size.width == format->format.width)
+					&& (priv->mcu_cam_frmfmt[ret].size.height ==
+						format->format.height)) {
+				priv->frmfmt_mode = priv->mcu_cam_frmfmt[ret].mode;
+				flag = 1;
+				break;
+			}
+		}
+
+		if(flag == 0) {
+			return -EINVAL;
+		}
+
+		err = gen_mcu_stream_config(client, priv);
+		if(err < 0){
+			dev_err(&client->dev," %s (%d ) \n", __func__, __LINE__);
+			return err;
+		}
+
+		ret = camera_common_s_fmt(sd, &format->format);
+	}
+
+	/* Fix for Link reset noise issue */
+	if(serdes_write_16b_reg(client, priv->des_addr, 0x0002, 0x00) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(100);
+	if(serdes_write_16b_reg(client, priv->des_addr, 0x0002, 0xF3) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+
+	return ret;
+}
+
+static struct v4l2_subdev_pad_ops cam_subdev_pad_ops = {
+	.enum_mbus_code = camera_common_enum_mbus_code,
+	.set_fmt = cam_set_fmt,
+	.get_fmt = cam_get_fmt,
+	.enum_frame_size = camera_common_enum_framesizes,
+	.enum_frame_interval = camera_common_enum_frameintervals,
+};
+
+static struct v4l2_subdev_ops cam_subdev_ops = {
+	.core = &cam_subdev_core_ops,
+	.video = &cam_subdev_video_ops,
+	.pad = &cam_subdev_pad_ops,
+};
+
+static struct of_device_id cam_of_match[] = {
+	{.compatible = "nvidia,ar0233",},
+	{},
+};
+
+static int cam_g_volatile_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct cam *priv =
+		container_of(ctrl->handler, struct cam, ctrl_handler);
+	struct i2c_client *client = priv->i2c_client;
+	int err = 0;
+
+	uint8_t ctrl_type = 0;
+	int ctrl_val = 0;
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	if (priv->power.state == SWITCH_OFF)
+		return 0;
+
+	if ((err = mcu_get_ctrl(client, ctrl->id, &ctrl_type, &ctrl_val)) < 0) {
+		return err;
+	}
+
+	if (ctrl_type == CTRL_STANDARD) {
+		ctrl->val = ctrl_val;
+	} else {
+		/* Not Implemented */
+		return -EINVAL;
+	}
+
+	return err;
+}
+
+static int cam_s_ctrl(struct v4l2_ctrl *ctrl)
+{
+	struct cam *priv =
+		container_of(ctrl->handler, struct cam, ctrl_handler);
+	struct i2c_client *client = priv->i2c_client;
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	int err = 0, mode = 0, retry = 5;
+
+	mode = s_data->mode;
+
+
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	if (priv->power.state == SWITCH_OFF)
+		return 0;
+	
+	if(ctrl->id == V4L2_CID_CUSTOM_TRIGGER){
+		if(ctrl->val == 1 && ctrl->val != priv->trig_val){
+				priv->trig_val = 1;
+				toggle_gpio(priv->trigger_gpio, 1);
+		} else {
+				toggle_gpio(priv->trigger_gpio, 0);
+				priv->trig_val = 0;
+		}
+		return 0;
+	}
+
+#ifdef AR0233_HDR_SYNC
+	if(ctrl->id == V4L2_CID_HDR || ctrl->id == V4L2_CID_FRAME_SYNC){
+		if( ctrl->id == V4L2_CID_HDR ){
+			if(ctrl->val == 1 && ctrl->val != priv->hdr_val)
+				priv->hdr_val = 1;
+			else
+				priv->hdr_val = 0;
+		}
+		if( ctrl->id == V4L2_CID_FRAME_SYNC && ctrl->val != priv->frame_sync_track){
+			if( ctrl->val ==1 )
+				priv->frame_sync_track = 1;
+			else
+				priv->frame_sync_track = 0;
+		}
+
+		if( priv->hdr_val && priv->frame_sync_track ){
+			priv->change_sync = 1;
+			priv->hdr_track = 1;
+			if(cam_track > 0 && !priv->is_cam_changed_already){
+			cam_track--;
+			priv->is_cam_changed_already = 1;
+			}
+		}
+		if(priv->hdr_val == 0 && priv->hdr_track)
+		{
+			priv->hdr_track = 0;
+			cam_track++;
+			priv->change_sync = 0;
+			if(priv->is_cam_changed_already)
+				priv->is_cam_changed_already = 0;
+		}
+		if( priv->change_sync == 1 && !is_sync_changed){
+			dev_info(&client->dev," Recalibrating PWM For HDR mode \n");
+			pca9685_init(client,28);
+			is_sync_changed = 1;
+			priv->change_sync = 0;
+		}
+		else if( cam_track == num_cam && is_sync_changed){
+			is_sync_changed = 0;
+			dev_info(&client->dev," Recalibrating PWM For SDR mode \n");
+			priv->change_sync = 0;
+			pca9685_init(client,30);
+		}
+	}
+#endif
+	while(retry -- > 0) {
+		if ((err =
+					mcu_set_ctrl(client, ctrl->id, CTRL_STANDARD, ctrl->val)) < 0) {
+			dev_info(&client->dev," %s (%d ) retry \n", __func__, __LINE__);
+			if(retry <= 0) {
+				dev_err(&client->dev," %s (%d ) \n", __func__, __LINE__);
+				break;
+			} else {
+				continue;
+			}
+		}
+		break;
+	}
+
+	return err;
+}
+
+static int cam_try_add_ctrls(struct cam *priv, int index,
+		ISP_CTRL_INFO * mcu_ctrl)
+{
+	struct i2c_client *client = priv->i2c_client;
+	struct v4l2_ctrl_config custom_ctrl_config;
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	priv->ctrl_handler.error = 0;
+	/* Try Enumerating in standard controls */
+	priv->ctrls[index] =
+		v4l2_ctrl_new_std(&priv->ctrl_handler,
+				&cam_ctrl_ops,
+				mcu_ctrl->ctrl_id,
+				mcu_ctrl->ctrl_data.std.ctrl_min,
+				mcu_ctrl->ctrl_data.std.ctrl_max,
+				mcu_ctrl->ctrl_data.std.ctrl_step,
+				mcu_ctrl->ctrl_data.std.ctrl_def);
+	if (priv->ctrls[index] != NULL) {
+		debug_printk("%d. Initialized Control 0x%08x - %s \n",
+				index, mcu_ctrl->ctrl_id,
+				priv->ctrls[index]->name);
+		return 0;
+	}
+
+	if(mcu_ctrl->ctrl_id == V4L2_CID_EXPOSURE_AUTO)
+		goto custom;
+
+
+	/* Try Enumerating in standard menu */
+	priv->ctrl_handler.error = 0;
+	priv->ctrls[index] =
+		v4l2_ctrl_new_std_menu(&priv->ctrl_handler,
+				&cam_ctrl_ops,
+				mcu_ctrl->ctrl_id,
+				mcu_ctrl->ctrl_data.std.ctrl_max,
+				0, mcu_ctrl->ctrl_data.std.ctrl_def);
+	if (priv->ctrls[index] != NULL) {
+		debug_printk("%d. Initialized Control Menu 0x%08x - %s \n",
+				index, mcu_ctrl->ctrl_id,
+				priv->ctrls[index]->name);
+		return 0;
+	}
+
+
+custom:
+	priv->ctrl_handler.error = 0;
+	memset(&custom_ctrl_config, 0x0, sizeof(struct v4l2_ctrl_config));
+
+	if (mcu_get_ctrl_ui(client, mcu_ctrl, index)!= ERRCODE_SUCCESS) {
+		dev_err(&client->dev, "Error Enumerating Control 0x%08x !! \n",
+				mcu_ctrl->ctrl_id);
+		return -EIO;
+	}
+
+	/* Fill in Values for Custom Ctrls */
+	custom_ctrl_config.ops = &cam_ctrl_ops;
+	custom_ctrl_config.id = mcu_ctrl->ctrl_id;
+	/* Do not change the name field for the control */
+	custom_ctrl_config.name = mcu_ctrl->ctrl_ui_data.ctrl_ui_info.ctrl_name;
+
+	/* Sample Control Type and Flags */
+	custom_ctrl_config.type = mcu_ctrl->ctrl_ui_data.ctrl_ui_info.ctrl_ui_type;
+	custom_ctrl_config.flags = mcu_ctrl->ctrl_ui_data.ctrl_ui_info.ctrl_ui_flags;
+
+	custom_ctrl_config.min = mcu_ctrl->ctrl_data.std.ctrl_min;
+	custom_ctrl_config.max = mcu_ctrl->ctrl_data.std.ctrl_max;
+	custom_ctrl_config.step = mcu_ctrl->ctrl_data.std.ctrl_step;
+	custom_ctrl_config.def = mcu_ctrl->ctrl_data.std.ctrl_def;
+
+	if (custom_ctrl_config.type == V4L2_CTRL_TYPE_MENU) {
+		custom_ctrl_config.step = 0;
+		custom_ctrl_config.type_ops = NULL;
+
+		custom_ctrl_config.qmenu =
+			(const char *const *)(mcu_ctrl->ctrl_ui_data.ctrl_menu_info.menu);
+	}
+
+	priv->ctrls[index] =
+		v4l2_ctrl_new_custom(&priv->ctrl_handler,
+				&custom_ctrl_config, NULL);
+	if (priv->ctrls[index] != NULL) {
+		debug_printk("%d. Initialized Custom Ctrl 0x%08x - %s \n",
+				index, mcu_ctrl->ctrl_id,
+				priv->ctrls[index]->name);
+		return 0;
+	}
+
+	dev_err(&client->dev,
+			"%d.  default: Failed to init 0x%08x ctrl Error - %d \n",
+			index, mcu_ctrl->ctrl_id, priv->ctrl_handler.error);
+	return -EINVAL;
+}
+
+static int cam_ctrls_init(struct cam *priv, ISP_CTRL_INFO *mcu_cam_ctrls)
+{
+	struct i2c_client *client = priv->i2c_client;
+	int err = 0, i = 0;
+
+	/* Array of Ctrls */
+
+	/* Custom Ctrl */
+	if (!priv || !priv->pdata)
+		return -EINVAL;
+
+	if (mcu_list_ctrls(client, mcu_cam_ctrls, priv) < 0) {
+		dev_err(&client->dev, "Failed to init ctrls\n");
+		goto error;
+	}
+
+	v4l2_ctrl_handler_init(&priv->ctrl_handler, priv->num_ctrls+1);
+	priv->subdev->ctrl_handler = &priv->ctrl_handler;
+	for (i = 0; i < priv->num_ctrls; i++) {
+
+		if (mcu_cam_ctrls[i].ctrl_type == CTRL_STANDARD) {
+			cam_try_add_ctrls(priv, i,
+					&mcu_cam_ctrls[i]);
+		} else {
+			/* Not Implemented */
+		}
+	}
+
+	return 0;
+
+error:
+	v4l2_ctrl_handler_free(&priv->ctrl_handler);
+	return err;
+}
+
+MODULE_DEVICE_TABLE(of, cam_of_match);
+
+static struct camera_common_pdata *cam_parse_dt(struct i2c_client *client)
+{
+	struct device_node *node = client->dev.of_node;
+	struct camera_common_pdata *board_priv_pdata;
+	const struct of_device_id *match;
+	int err;
+
+	if (!node)
+		return NULL;
+
+	match = of_match_device(cam_of_match, &client->dev);
+	if (!match) {
+		dev_err(&client->dev, "Failed to find matching dt id\n");
+		return NULL;
+	}
+
+	board_priv_pdata =
+		devm_kzalloc(&client->dev, sizeof(*board_priv_pdata), GFP_KERNEL);
+	if (!board_priv_pdata)
+		return NULL;
+
+
+	err = camera_common_parse_clocks(&client->dev, board_priv_pdata);
+	if (err) {
+		dev_err(&client->dev, "Failed to find clocks\n");
+		goto error;
+	}
+
+	board_priv_pdata->use_cam_gpio =
+		of_property_read_bool(node, "cam,use-cam-gpio");
+
+	err =
+		of_property_read_string(node, "avdd-reg",
+				&board_priv_pdata->regulators.avdd);
+	if (err) {
+		dev_err(&client->dev, "avdd-reg not in DT\n");
+		goto error;
+	}
+	err =
+		of_property_read_string(node, "iovdd-reg",
+				&board_priv_pdata->regulators.iovdd);
+	if (err) {
+		dev_err(&client->dev, "iovdd-reg not in DT\n");
+		goto error;
+	}
+
+	board_priv_pdata->has_eeprom =
+		of_property_read_bool(node, "has-eeprom");
+
+	return board_priv_pdata;
+
+error:
+	devm_kfree(&client->dev, board_priv_pdata);
+	return NULL;
+}
+
+static int cam_open(struct v4l2_subdev *sd, struct v4l2_subdev_fh *fh)
+{
+	return 0;
+}
+
+static const struct v4l2_subdev_internal_ops cam_subdev_internal_ops = {
+	.open = cam_open,
+};
+
+static const struct media_entity_operations cam_media_ops = {
+	.link_validate = v4l2_subdev_link_validate,
+};
+
+static int cam_read(struct i2c_client *client, u8 * val, u32 count)
+{
+	int ret;
+	struct i2c_msg msg = {
+		.addr = client->addr,
+		.flags = 0,
+		.buf = val,
+	};
+
+	msg.flags = I2C_M_RD;
+	msg.len = count;
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0)
+		goto err;
+
+	return 0;
+
+err:
+	dev_err(&client->dev, "Failed reading register ret = %d!\n", ret);
+	return ret;
+}
+
+static int cam_write(struct i2c_client *client, u8 * val, u32 count)
+{
+	int ret;
+	struct i2c_msg msg = {
+		.addr = client->addr,
+		.flags = 0,
+		.len = count,
+		.buf = val,
+	};
+
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0) {
+		dev_err(&client->dev, "Failed writing register ret = %d!\n",
+				ret);
+		return ret;
+	}
+
+	return 0;
+}
+
+int mcu_bload_ascii2hex(unsigned char ascii)
+{
+	if (ascii <= '9') {
+		return (ascii - '0');
+	} else if ((ascii >= 'a') && (ascii <= 'f')) {
+		return (0xA + (ascii - 'a'));
+	} else if ((ascii >= 'A') && (ascii <= 'F')) {
+		return (0xA + (ascii - 'A'));
+	}
+	return -1;
+}
+
+static int tb_write_i2c(struct i2c_client *client, u8 * val, u32 count,u8 tb_id)
+{
+	int ret;
+
+	struct i2c_msg msg = {
+		.addr = tb_id,
+		.flags = 0,
+		.len = count,
+		.buf = val,
+	};
+
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0) {
+		dev_err(&client->dev, "Failed writing register ret = %d!\n",
+				ret);
+		return ret;
+	}
+
+	return 0;
+}
+
+static int tb_read_i2c(struct i2c_client *client, u8 * val, u32 count,u8 tb_id)
+{
+	int ret;
+
+	struct i2c_msg msg = {
+		.addr = tb_id,
+		.flags = 0,
+		.buf = val,
+	};
+
+	msg.flags = I2C_M_RD;
+	msg.len = count;
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0)
+		goto err;
+
+	return 0;
+
+err:
+	dev_err(&client->dev, "Failed reading register ret = %d!\n", ret);
+	return ret;
+}
+
+static s32 tb_read_16b_reg(struct i2c_client *client, u16 reg, u16 * val,u8 tb_id)
+{
+	u8 bcount = 2;
+	u8 au8RegBuf[2] = { 0 };
+	u8 au8RdVal[2] = { 0 };
+
+	au8RegBuf[0] = reg >> 8;
+	au8RegBuf[1] = reg & 0xff;
+
+	if (tb_write_i2c(client, au8RegBuf, bcount,tb_id) < 0) {
+		dev_err(&client->dev,"%s:write reg error:reg=0x%x\n", __func__, reg);
+		return -EIO;
+	}
+
+	if (tb_read_i2c(client, au8RdVal, bcount,tb_id) < 0) {
+		dev_err(&client->dev,"%s:read reg error:reg=0x%x\n", __func__, reg);
+		return -EIO;
+	}
+
+	*val = (au8RdVal[0] << 8) | au8RdVal[1];
+
+	return 0;
+}
+
+static s32 tb_write_16b_reg(struct i2c_client *client, u16 reg, u16 val,u8 tb_id)
+{
+	u8 bcount = 4;
+	u8 au8Buf[4] = { 0 };
+
+	au8Buf[0] = reg >> 8;
+	au8Buf[1] = reg & 0xff;
+	au8Buf[2] = val >> 8;
+	au8Buf[3] = val & 0xff;
+
+	if (tb_write_i2c(client, au8Buf, bcount,tb_id) < 0) {
+		dev_err(&client->dev,
+				"%s:write reg error: reg = 0x%x,val = 0x%x\n", __func__,
+				reg, val);
+		return -EIO;
+	}
+
+	return 0;
+}
+static s32 serdes_config_init(struct i2c_client *client,struct cam *priv)
+{
+	uint8_t slave_addr=0;
+
+	if (priv->phy == PHY_A)
+	{	 
+		dev_info(&client->dev, " Issuing CHIP reset for Deserializer ... \n");
+		if((serdes_write_16b_reg(client, priv->des_addr, 0x0010, 0x80)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		msleep(100);
+
+		if((serdes_write_16b_reg(client, priv->des_addr, 0x0010, 0x21)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		msleep(100);
+
+		if((serdes_write_16b_reg(client, SER1_ADDR, 0x0010, 0x21)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		msleep(100);
+		if((serdes_read_16b_reg(client, SER1_ADDR, 0x0000, &slave_addr)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+
+		if(SER1_ADDR != (slave_addr>>1)){
+			/* Enabling Only LINKB */
+			serdes_write_16b_reg(client, priv->des_addr, 0x0010, 0x22);
+			msleep(100);
+			debug_printk("serializer slave address read is=%x\n",slave_addr>>1);
+			dev_err(&client->dev," No serializer found on SIOA\n");
+			dev_err(&client->dev," Exiting probe\n");
+			return -ENODEV;
+		}
+		priv->ser_addr = SER1_ADDR;
+
+		/* SIOA port I2C address translation */
+		if(serdes_parse_regdata(client, SER1_I2C_CONF, ARRAY_SIZE(SER1_I2C_CONF),
+					priv->ser_addr) < 0) {
+			dev_err(&client->dev, "%s: Failed to configure SIOA Serializer" 
+					"I2C translation\n",__func__);
+			return -EIO;
+		}
+		dev_info(&client->dev,"SIOA Port I2C translated successfully\n");
+
+		/* Setting Boot pin low */
+		if((serdes_write_16b_reg(client, priv->ser_addr, 0x02BE, 0x40)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		priv->tb_id = SIOA_TB_ID;
+
+		/* Enabling high priority gpio reception for input trigger */ 
+		if((serdes_write_16b_reg(client, priv->ser_addr, 0x02D3, 0xC4)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+
+		/* Updating Serializer availabilty */
+		ser_status = 0x21; 
+	}
+	else if(priv->phy == PHY_B)
+	{
+		if((serdes_write_16b_reg(client, priv->des_addr, 0x0010, 0x22)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		msleep(100);
+
+		/* Checking Whether SIOB serializer I2C Reassignment is Already Done*/
+		serdes_read_16b_reg(client, SER2_ADDR, 0x0000, &slave_addr);
+		if(slave_addr == SER2_ADDR << 1)
+		{
+			dev_info(&client->dev,"I2C translate detected.. Skip i2c translate... \n");
+			goto skip_translate;
+		}	
+		if((serdes_write_16b_reg(client, SER1_ADDR, 0x0010, 0x21)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			/* Enabling Only LINKA */
+			serdes_write_16b_reg(client, priv->des_addr, 0x0010, 0x21);
+			msleep(100);			
+			return -EIO;
+		}
+		msleep(100);
+		if((serdes_read_16b_reg(client, SER1_ADDR, 0x0000, &slave_addr)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		if(SER1_ADDR != (slave_addr>>1)){
+			/* Enabling Only LINKA */
+			serdes_write_16b_reg(client, priv->des_addr, 0x0010, 0x21);
+			msleep(100);
+			debug_printk("serializer slave address read is=%x\n",slave_addr>>1);
+			dev_err(&client->dev," No serializer found on SIOB\n");
+			dev_err(&client->dev," Exiting probe\n");
+			return -ENODEV;
+		}
+
+		/*I2C Reassignement for SIOB port Serializer*/
+		if((serdes_write_16b_reg(client, SER1_ADDR, 0x0000, SER2_ADDR<<1)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		msleep(100);
+
+skip_translate:		
+		dev_info(&client->dev,"SIOB Port I2C Reassignment successful\n");	
+		priv->ser_addr = SER2_ADDR;
+		msleep(100);
+
+		/*Change GMSL2 Packet header*/
+		if(serdes_parse_regdata(client,	SER2_PKT_HEADER_CHANGE, 
+					ARRAY_SIZE(SER2_PKT_HEADER_CHANGE),
+					priv->ser_addr) < 0) {
+			dev_err(&client->dev, "%s: Failed to configure SIOA Serializer" 
+					"I2C translation\n",__func__);
+			return -EIO;
+		}
+
+		/* SIOB I2C Translation */
+		if(serdes_parse_regdata(client, SER2_I2C_CONF, ARRAY_SIZE(SER2_I2C_CONF),
+					priv->ser_addr) < 0) {
+			dev_err(&client->dev, "%s: Failed to configure SIOA Serializer" 
+					"I2C translation\n",__func__);
+			return -EIO;
+		}
+
+		msleep(100);
+
+		/*Set Boot pin low*/		
+		if((serdes_write_16b_reg(client, priv->ser_addr, 0x02BE, 0x40)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		priv->tb_id = SIOB_TB_ID;
+		debug_printk("SIOB Port I2C translated successfully\n");
+
+		/*Trigger Pin mapping*/
+		if((serdes_write_16b_reg(client, priv->ser_addr, 0x02D3, 0xC4)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		/* Updating Serializer availabilty */
+		if (ser_status == 0x21)
+			ser_status = 0x23;
+		else
+			ser_status = 0x22;	
+	}
+	else{
+		dev_err(&client->dev,"Device tree SIOA ports Parse Unsuccessful\n");
+		return -EINVAL;
+	}
+	return 0;
+}
+
+static s32 tb_parse_regdata(struct i2c_client *client, TB_REG * regdata,
+		u32 reg_cnt,u8 tb_id)
+{
+	int i = 0;
+
+	for (i = 0; i < reg_cnt; i++) {
+		if (regdata[i].reg == 0xFFFF) {
+			mdelay(10);
+			continue;
+		}
+
+		if ((tb_write_16b_reg(client, regdata[i].reg, regdata[i].val,tb_id)) <
+				0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+
+	}
+
+	return 0;
+}
+
+static s32 serdes_parse_regdata(struct i2c_client *client, SERDES_PARSE * regdata,
+		u32 reg_cnt,u8 serdes_id)
+{
+	int i = 0;
+
+	for (i = 0; i < reg_cnt; i++) {
+		if (regdata[i].reg == 0xFFFF) {
+			mdelay(100);
+			continue;
+		}
+
+		if ((serdes_write_16b_reg(client, serdes_id, regdata[i].reg, regdata[i].val)) <
+				0) {
+			dev_err(&client->dev, "%s(%d): Failed \n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+
+	}
+
+	return 0;
+}
+#ifdef GPIO_DEBUG
+static void toggle_gpio(unsigned int gpio, int val)
+{
+	if (gpio_cansleep(gpio)){
+		gpio_direction_output(gpio,val);
+		gpio_set_value_cansleep(gpio, val);
+	} else{
+		gpio_direction_output(gpio,val);
+		gpio_set_value(gpio, val);
+	}
+}
+#endif
+unsigned char errorcheck(char *data, unsigned int len)
+{
+	unsigned int i = 0;
+	unsigned char crc = 0x00;
+
+	for (i = 0; i < len; i++) {
+		crc ^= data[i];
+	}
+
+	return crc;
+}
+
+static int mcu_jump_bload(struct i2c_client *client)
+{
+	uint32_t payload_len = 0;
+	int err = 0;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/*lock semaphore */
+	mutex_lock(&g_i2c_mutex);
+	/* First Txn Payload length = 0 */
+	payload_len = 0;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_FW_UPDT;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	err = cam_write(client, mc_data, TX_LEN_PKT);
+	if (err !=0 ) {
+		dev_err(&client->dev, " %s(%d) Error - %d \n",
+				__func__, __LINE__, err);
+		goto exit;
+	}
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_FW_UPDT;
+	err = cam_write(client, mc_data, 2);
+	if (err != 0) {
+		dev_err(&client->dev, " %s(%d) Error - %d \n",
+				__func__, __LINE__, err);
+		goto exit;
+	} 
+
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&g_i2c_mutex);
+	return err;
+
+}
+
+static int mcu_stream_config(struct i2c_client *client, uint32_t format,
+		int mode, int frate_index)
+{
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+
+	uint32_t payload_len = 0;
+
+	uint16_t cmd_status = 0, index = 0xFFFF;
+	uint8_t retcode = 0, cmd_id = 0;
+	int loop = 0, ret = 0, err = 0, retry = 1000;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/* lock semaphore */
+	mutex_lock(&priv->mcu_i2c_mutex);
+	for (loop = 0;(&priv->streamdb[loop]) != NULL; loop++) {
+		if (priv->streamdb[loop] == mode) {
+			index = loop + frate_index;
+			break;
+		}
+	}
+
+	debug_printk(" Index = 0x%04x , format = 0x%08x, width = %hu,"
+			" height = %hu, frate num = %hu \n", index, format,
+			priv->mcu_cam_frmfmt[mode].size.width,
+			priv->mcu_cam_frmfmt[mode].size.height,
+			priv->mcu_cam_frmfmt[mode].framerates[frate_index]);
+
+	if (index == 0xFFFF) {
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	if(priv->prev_index == index) {
+		debug_printk("Skipping Previous mode set ... \n");
+		ret = 0;
+		goto exit;
+	}
+
+issue_cmd:
+	/* First Txn Payload length = 0 */
+	payload_len = 14;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_STREAM_CONFIG;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_STREAM_CONFIG;
+	mc_data[2] = index >> 8;
+	mc_data[3] = index & 0xFF;
+
+	/* Format Fourcc - currently only UYVY */
+	mc_data[4] = format >> 24;
+	mc_data[5] = format >> 16;
+	mc_data[6] = format >> 8;
+	mc_data[7] = format & 0xFF;
+
+	/* width */
+	mc_data[8] = priv->mcu_cam_frmfmt[mode].size.width >> 8;
+	mc_data[9] = priv->mcu_cam_frmfmt[mode].size.width & 0xFF;
+
+	/* height */
+	mc_data[10] = priv->mcu_cam_frmfmt[mode].size.height >> 8;
+	mc_data[11] = priv->mcu_cam_frmfmt[mode].size.height & 0xFF;
+
+	/* frame rate num */
+	mc_data[12] = priv->mcu_cam_frmfmt[mode].framerates[frate_index] >> 8;
+	mc_data[13] = priv->mcu_cam_frmfmt[mode].framerates[frate_index] & 0xFF;
+
+	/* frame rate denom */
+	mc_data[14] = 0x00;
+	mc_data[15] = 0x01;
+
+	mc_data[16] = errorcheck(&mc_data[2], 14);
+	err = cam_write(client, mc_data, 17);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	while (--retry > 0) {
+		cmd_id = CMD_ID_STREAM_CONFIG;
+		if (mcu_get_cmd_status
+				(client, &cmd_id, &cmd_status, &retcode) < 0) {
+			dev_err(&client->dev,
+					" %s(%d) MCU GET CMD Status Error : loop : %d \n",
+					__func__, __LINE__, loop);
+			ret = -EIO;
+			goto exit;
+		}
+
+		if ((cmd_status == MCU_CMD_STATUS_SUCCESS) &&
+				(retcode == ERRCODE_SUCCESS)) {
+			ret = 0;
+			goto exit;
+		}
+
+		if(retcode == ERRCODE_AGAIN) {
+			/* Issue Command Again if Set */
+			retry = 1000;
+			goto issue_cmd;
+		}
+
+		if ((retcode != ERRCODE_BUSY) &&
+				((cmd_status != MCU_CMD_STATUS_PENDING))) {
+			dev_err(&client->dev,
+					"(%s) %d Error STATUS = 0x%04x RET = 0x%02x\n",
+					__func__, __LINE__, cmd_status, retcode);
+			ret = -EIO;
+			goto exit;
+		}
+
+		/* Delay after retry */
+		mdelay(10);
+	}
+
+	dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+			__LINE__, err);
+	ret = -ETIMEDOUT;
+
+exit:
+	if(!ret)
+		priv->prev_index = index;
+
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+
+	return ret;
+}
+
+static int mcu_get_ctrl(struct i2c_client *client, uint32_t arg_ctrl_id,
+		uint8_t * ctrl_type, int32_t * curr_val)
+{
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+
+	uint32_t payload_len = 0;
+	uint8_t errcode = ERRCODE_SUCCESS, orig_crc = 0, calc_crc = 0;
+	uint16_t index = 0xFFFF;
+	int loop = 0, ret = 0, err = 0;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	uint32_t ctrl_id = 0;
+
+	dev_err(&client->dev," %s(%d)\n", __func__,__LINE__);
+	/* lock semaphore */
+	mutex_lock(&priv->mcu_i2c_mutex);
+
+	ctrl_id = arg_ctrl_id;
+
+	/* Read the Ctrl Value from Micro controller */
+
+	for (loop = 0; loop < priv->num_ctrls; loop++) {
+		if (priv->ctrldb[loop] == ctrl_id) {
+			index = loop;//priv->mcu_ctrl_info[loop].mcu_ctrl_index;
+			break;
+		}
+	}
+
+	if (index == 0xFFFF) {
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	if (
+			priv->mcu_ctrl_info[loop].ctrl_ui_data.ctrl_ui_info.ctrl_ui_flags &
+			V4L2_CTRL_FLAG_WRITE_ONLY
+	   ) {
+		ret = -EACCES;
+		goto exit;
+	}
+
+	/* First Txn Payload length = 2 */
+	payload_len = 2;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_CTRL;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_CTRL;
+	mc_data[2] = index >> 8;
+	mc_data[3] = index & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+	err = cam_write(client, mc_data, 5);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	err = cam_read(client, mc_ret_data, RX_LEN_PKT);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[4];
+	calc_crc = errorcheck(&mc_ret_data[2], 2);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		ret = -1;
+		goto exit;
+	}
+
+	if (((mc_ret_data[2] << 8) | mc_ret_data[3]) == 0) {
+		ret = -EIO;
+		goto exit;
+	}
+
+	errcode = mc_ret_data[5];
+	if (errcode != ERRCODE_SUCCESS) {
+		dev_err(&client->dev," %s(%d) Errcode - 0x%02x \n",
+				__func__, __LINE__, errcode);
+		ret = -EIO;
+		goto exit;
+	}
+
+	payload_len =
+		((mc_ret_data[2] << 8) | mc_ret_data[3]) + HEADER_FOOTER_SIZE;
+	memset(mc_ret_data, 0x00, payload_len);
+	err = cam_read(client, mc_ret_data, payload_len);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[payload_len - 2];
+	calc_crc =
+		errorcheck(&mc_ret_data[2], payload_len - HEADER_FOOTER_SIZE);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	/* Verify Errcode */
+	errcode = mc_ret_data[payload_len - 1];
+	if (errcode != ERRCODE_SUCCESS) {
+		dev_err(&client->dev," %s(%d) Errcode - 0x%02x \n",
+				__func__, __LINE__, errcode);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	/* Ctrl type starts from index 6 */
+
+	*ctrl_type = mc_ret_data[6];
+
+	switch (*ctrl_type) {
+		case CTRL_STANDARD:
+			*curr_val =
+				mc_ret_data[7] << 24 | mc_ret_data[8] << 16 | mc_ret_data[9]
+				<< 8 | mc_ret_data[10];
+			break;
+
+		case CTRL_EXTENDED:
+			/* Not Implemented */
+			break;
+	}
+
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+
+	return ret;
+}
+
+static int mcu_set_ctrl(struct i2c_client *client, uint32_t arg_ctrl_id,
+		uint8_t ctrl_type, int32_t curr_val)
+{
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	uint32_t payload_len = 0;
+
+	uint16_t cmd_status = 0, index = 0xFFFF;
+	uint8_t retcode = 0, cmd_id = 0;
+	int loop = 0, ret = 0, err = 0, retry = 1000;
+	uint32_t ctrl_id = 0;
+
+	/* lock semaphore */
+	mutex_lock(&priv->mcu_i2c_mutex);
+
+	ctrl_id = arg_ctrl_id;
+
+	/* call ISP Ctrl config command */
+
+	for (loop = 0; loop < priv->num_ctrls; loop++) {
+		if (priv->ctrldb[loop] == ctrl_id) {
+			index = loop;
+			break;
+		}
+	}
+
+	if (index == 0xFFFF) {
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	/* First Txn Payload length = 0 */
+	payload_len = 11;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_SET_CTRL;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	/* Second Txn */
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_SET_CTRL;
+
+	/* Index */
+	mc_data[2] = index >> 8;
+	mc_data[3] = index & 0xFF;
+
+	/* Control ID */
+	mc_data[4] = ctrl_id >> 24;
+	mc_data[5] = ctrl_id >> 16;
+	mc_data[6] = ctrl_id >> 8;
+	mc_data[7] = ctrl_id & 0xFF;
+
+	/* Ctrl Type */
+	mc_data[8] = ctrl_type;
+
+	/* Ctrl Value */
+	mc_data[9] = curr_val >> 24;
+	mc_data[10] = curr_val >> 16;
+	mc_data[11] = curr_val >> 8;
+	mc_data[12] = curr_val & 0xFF;
+
+	/* CRC */
+	mc_data[13] = errorcheck(&mc_data[2], 11);
+
+	err = cam_write(client, mc_data, 14);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	while (retry-- > 0) {
+		cmd_id = CMD_ID_SET_CTRL;
+		if (mcu_get_cmd_status
+				(client, &cmd_id, &cmd_status, &retcode) < 0) {
+			dev_err(&client->dev," %s(%d) Error \n",
+					__func__, __LINE__);
+			ret = -EINVAL;
+			goto exit;
+		}
+
+		if ((cmd_status == MCU_CMD_STATUS_SUCCESS) &&
+				(retcode == ERRCODE_SUCCESS)) {
+			ret = 0;
+			goto exit;
+		}
+
+		if ((retcode != ERRCODE_BUSY) &&
+				((cmd_status != MCU_CMD_STATUS_PENDING))) {
+			pr_err
+				("(%s) %d ISP Error STATUS = 0x%04x RET = 0x%02x\n",
+				 __func__, __LINE__, cmd_status, retcode);
+			ret = -EIO;
+			goto exit;
+		}
+		msleep(10);
+	}
+	if(retry <= 0)
+	{
+		pr_err
+			("(%s) %d Error setting control = 0x%04x RET = 0x%02x\n",
+			 __func__, __LINE__, cmd_status, retcode);
+		ret = -EIO;
+		goto exit;
+
+	}
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+
+	return ret;
+}
+
+static int mcu_list_fmts(struct i2c_client *client, ISP_STREAM_INFO *stream_info, int *frm_fmt_size,struct cam *priv)
+{
+	uint32_t payload_len = 0, err = 0;
+	uint8_t errcode = ERRCODE_SUCCESS, orig_crc = 0, calc_crc = 0, skip = 0;
+	uint16_t index = 0, mode = 0;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	int loop = 0, num_frates = 0, ret = 0;
+
+	/* Stream Info Variables */
+
+	/* lock semaphore */
+	mutex_lock(&priv->mcu_i2c_mutex);
+	/* List all formats from MCU and append to mcu_cam_frmfmt array */
+	for (index = 0;; index++) {
+		/* First Txn Payload length = 0 */
+		payload_len = 2;
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_GET_STREAM_INFO;
+		mc_data[2] = payload_len >> 8;
+		mc_data[3] = payload_len & 0xFF;
+		mc_data[4] = errorcheck(&mc_data[2], 2);
+
+		cam_write(client, mc_data, TX_LEN_PKT);
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_GET_STREAM_INFO;
+		mc_data[2] = index >> 8;
+		mc_data[3] = index & 0xFF;
+		mc_data[4] = errorcheck(&mc_data[2], 2);
+		err = cam_write(client, mc_data, 5);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			ret = -EIO;
+			goto exit;
+		}
+
+		err = cam_read(client, mc_ret_data, RX_LEN_PKT);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			ret = -EIO;
+			goto exit;
+		}
+
+		/* Verify CRC */
+		orig_crc = mc_ret_data[4];
+		calc_crc = errorcheck(&mc_ret_data[2], 2);
+		if (orig_crc != calc_crc) {
+			pr_err
+				(" %s(%d) CRC 0x%02x != 0x%02x \n",
+				 __func__, __LINE__, orig_crc, calc_crc);
+			ret = -EINVAL;
+			goto exit;
+		}
+
+		if (((mc_ret_data[2] << 8) | mc_ret_data[3]) == 0) {
+			if(stream_info == NULL) {
+				*frm_fmt_size = index;
+			} else {
+				*frm_fmt_size = mode;
+			}
+			break;
+		}
+
+		payload_len =
+			((mc_ret_data[2] << 8) | mc_ret_data[3]) +
+			HEADER_FOOTER_SIZE;
+		errcode = mc_ret_data[5];
+		if (errcode != ERRCODE_SUCCESS) {
+			pr_err
+				(" %s(%d) Errcode - 0x%02x \n",
+				 __func__, __LINE__, errcode);
+			ret = -EIO;
+			goto exit;
+		}
+
+		memset(mc_ret_data, 0x00, payload_len);
+		err = cam_read(client, mc_ret_data, payload_len);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			ret = -1;
+			goto exit;
+		}
+
+		/* Verify CRC */
+		orig_crc = mc_ret_data[payload_len - 2];
+		calc_crc =
+			errorcheck(&mc_ret_data[2],
+					payload_len - HEADER_FOOTER_SIZE);
+		if (orig_crc != calc_crc) {
+			pr_err
+				(" %s(%d) CRC 0x%02x != 0x%02x \n",
+				 __func__, __LINE__, orig_crc, calc_crc);
+			ret = -EINVAL;
+			goto exit;
+		}
+
+		/* Verify Errcode */
+		errcode = mc_ret_data[payload_len - 1];
+		if (errcode != ERRCODE_SUCCESS) {
+			pr_err
+				(" %s(%d) Errcode - 0x%02x \n",
+				 __func__, __LINE__, errcode);
+			ret = -EIO;
+			goto exit;
+		}
+
+		if(stream_info != NULL) {
+			/* check if any other format than UYVY is queried - do not append in array */
+			stream_info->fmt_fourcc =
+				mc_ret_data[2] << 24 | mc_ret_data[3] << 16 | mc_ret_data[4]
+				<< 8 | mc_ret_data[5];
+			stream_info->width = mc_ret_data[6] << 8 | mc_ret_data[7];
+			stream_info->height = mc_ret_data[8] << 8 | mc_ret_data[9];
+			stream_info->frame_rate_type = mc_ret_data[10];
+
+			switch (stream_info->frame_rate_type) {
+				case FRAME_RATE_DISCRETE:
+					stream_info->frame_rate.disc.frame_rate_num =
+						mc_ret_data[11] << 8 | mc_ret_data[12];
+
+					stream_info->frame_rate.disc.frame_rate_denom =
+						mc_ret_data[13] << 8 | mc_ret_data[14];
+
+					break;
+
+				case FRAME_RATE_CONTINOUS:
+					debug_printk
+						(" The Stream format at index 0x%04x has FRAME_RATE_CONTINOUS,"
+						 "which is unsupported !! \n", index);
+
+#if 0
+					stream_info.frame_rate.cont.frame_rate_min_num =
+						mc_ret_data[11] << 8 | mc_ret_data[12];
+					stream_info.frame_rate.cont.frame_rate_min_denom =
+						mc_ret_data[13] << 8 | mc_ret_data[14];
+
+					stream_info.frame_rate.cont.frame_rate_max_num =
+						mc_ret_data[15] << 8 | mc_ret_data[16];
+					stream_info.frame_rate.cont.frame_rate_max_denom =
+						mc_ret_data[17] << 8 | mc_ret_data[18];
+
+					stream_info.frame_rate.cont.frame_rate_step_num =
+						mc_ret_data[19] << 8 | mc_ret_data[20];
+					stream_info.frame_rate.cont.frame_rate_step_denom =
+						mc_ret_data[21] << 8 | mc_ret_data[22];
+					break;
+#endif
+					continue;
+
+			}
+
+			switch (stream_info->fmt_fourcc) {
+				case V4L2_PIX_FMT_UYVY:
+					/* cam_codes is already populated with V4L2_MBUS_FMT_UYVY8_1X16 */
+					/* check if width and height are already in array - update frame rate only */
+					for (loop = 0; loop < (mode); loop++) {
+						if ((priv->mcu_cam_frmfmt[loop].size.width ==
+									stream_info->width)
+								&& (priv->mcu_cam_frmfmt[loop].size.height ==
+									stream_info->height)) {
+
+							num_frates =
+								priv->mcu_cam_frmfmt
+								[loop].num_framerates;
+							*((int *)(priv->mcu_cam_frmfmt[loop].framerates) + num_frates)
+								= (int)(stream_info->frame_rate.
+										disc.frame_rate_num /
+										stream_info->frame_rate.
+										disc.frame_rate_denom);
+
+							priv->mcu_cam_frmfmt
+								[loop].num_framerates++;
+
+							priv->streamdb[index] = loop;
+							skip = 1;
+							break;
+						}
+					}
+
+					if (skip) {
+						skip = 0;
+						continue;
+					}
+
+					/* Add Width, Height, Frame Rate array, Mode into mcu_cam_frmfmt array */
+					priv->mcu_cam_frmfmt[mode].size.width = stream_info->width;
+					priv->mcu_cam_frmfmt[mode].size.height =
+						stream_info->height;
+					num_frates = priv->mcu_cam_frmfmt[mode].num_framerates;
+
+					*((int *)(priv->mcu_cam_frmfmt[mode].framerates) + num_frates) =
+						(int)(stream_info->frame_rate.disc.frame_rate_num /
+								stream_info->frame_rate.disc.frame_rate_denom);
+
+					priv->mcu_cam_frmfmt[mode].num_framerates++;
+
+					priv->mcu_cam_frmfmt[mode].mode = mode;
+					priv->streamdb[index] = mode;
+					mode++;
+					break;
+
+				default:
+					debug_printk
+						(" The Stream format at index 0x%04x has format 0x%08x ,"
+						 "which is unsupported !! \n", index,
+						 stream_info->fmt_fourcc);
+			}
+		}
+	}
+
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+
+	return ret;
+}
+
+static int mcu_get_ctrl_ui(struct i2c_client *client,
+		ISP_CTRL_INFO * mcu_ui_info, int index)
+{
+	uint32_t payload_len = 0;
+	uint8_t errcode = ERRCODE_SUCCESS, orig_crc = 0, calc_crc = 0;
+	int ret = 0, i = 0, err = 0;
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	uint8_t mc_data[1024], mc_ret_data[1024];
+
+	/* lock semaphore */
+	mutex_lock(&priv->mcu_i2c_mutex);
+
+	/* First Txn Payload length = 0 */
+	payload_len = 2;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_CTRL_UI_INFO;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_CTRL_UI_INFO;
+	mc_data[2] = index >> 8;
+	mc_data[3] = index & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+	err = cam_write(client, mc_data, 5);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	err = cam_read(client, mc_ret_data, RX_LEN_PKT);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[4];
+	calc_crc = errorcheck(&mc_ret_data[2], 2);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	payload_len =
+		((mc_ret_data[2] << 8) | mc_ret_data[3]) + HEADER_FOOTER_SIZE;
+	errcode = mc_ret_data[5];
+	if (errcode != ERRCODE_SUCCESS) {
+		dev_err(&client->dev," %s(%d) Errcode - 0x%02x \n",
+				__func__, __LINE__, errcode);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	memset(mc_ret_data, 0x00, payload_len);
+	err = cam_read(client, mc_ret_data, payload_len);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[payload_len - 2];
+	calc_crc =
+		errorcheck(&mc_ret_data[2], payload_len - HEADER_FOOTER_SIZE);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	/* Verify Errcode */
+	errcode = mc_ret_data[payload_len - 1];
+	if (errcode != ERRCODE_SUCCESS) {
+		dev_err(&client->dev," %s(%d) Errcode - 0x%02x \n",
+				__func__, __LINE__, errcode);
+		ret = -EIO;
+		goto exit;
+	}
+
+	strncpy((char *)mcu_ui_info->ctrl_ui_data.ctrl_ui_info.ctrl_name, &mc_ret_data[2],MAX_CTRL_UI_STRING_LEN);
+
+	mcu_ui_info->ctrl_ui_data.ctrl_ui_info.ctrl_ui_type = mc_ret_data[34];
+	mcu_ui_info->ctrl_ui_data.ctrl_ui_info.ctrl_ui_flags = mc_ret_data[35] << 8 |
+		mc_ret_data[36];
+
+	if (mcu_ui_info->ctrl_ui_data.ctrl_ui_info.ctrl_ui_type == V4L2_CTRL_TYPE_MENU) {
+		mcu_ui_info->ctrl_ui_data.ctrl_menu_info.num_menu_elem = mc_ret_data[37];
+
+		mcu_ui_info->ctrl_ui_data.ctrl_menu_info.menu =
+			devm_kzalloc(&client->dev,((mcu_ui_info->ctrl_ui_data.ctrl_menu_info.num_menu_elem +1) * sizeof(char *)), GFP_KERNEL);
+		for (i = 0; i < mcu_ui_info->ctrl_ui_data.ctrl_menu_info.num_menu_elem; i++) {
+			mcu_ui_info->ctrl_ui_data.ctrl_menu_info.menu[i] =
+				devm_kzalloc(&client->dev,MAX_CTRL_UI_STRING_LEN, GFP_KERNEL);
+			strncpy((char *)mcu_ui_info->ctrl_ui_data.ctrl_menu_info.menu[i],
+					&mc_ret_data[38 +(i *MAX_CTRL_UI_STRING_LEN)], MAX_CTRL_UI_STRING_LEN);
+
+			debug_printk(" Menu Element %d : %s \n",
+					i, mcu_ui_info->ctrl_ui_data.ctrl_menu_info.menu[i]);
+		}
+
+		mcu_ui_info->ctrl_ui_data.ctrl_menu_info.menu[i] = NULL;
+	}
+
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+
+	return ret;
+
+}
+
+static int mcu_list_ctrls(struct i2c_client *client,
+		ISP_CTRL_INFO * mcu_cam_ctrl, struct cam *priv)
+{
+	uint32_t payload_len = 0;
+	uint8_t errcode = ERRCODE_SUCCESS, orig_crc = 0, calc_crc = 0;
+	uint16_t index = 0;
+	int ret = 0, err = 0,retry = 100;
+	uint8_t mc_data[1024], mc_ret_data[1024];
+
+	/* lock semaphore */
+	mutex_lock(&priv->mcu_i2c_mutex);
+
+	/* Array of Ctrl Info */
+	while (retry-- > 0) {
+		/* First Txn Payload length = 0 */
+		payload_len = 2;
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_GET_CTRL_INFO;
+		mc_data[2] = payload_len >> 8;
+		mc_data[3] = payload_len & 0xFF;
+		mc_data[4] = errorcheck(&mc_data[2], 2);
+
+		err = cam_write(client, mc_data, TX_LEN_PKT);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			continue;
+		}
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_GET_CTRL_INFO;
+		mc_data[2] = index >> 8;
+		mc_data[3] = index & 0xFF;
+		mc_data[4] = errorcheck(&mc_data[2], 2);
+		err = cam_write(client, mc_data, 5);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			continue;
+		}
+
+		err = cam_read(client, mc_ret_data, RX_LEN_PKT);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			continue;
+		}
+
+		/* Verify CRC */
+		orig_crc = mc_ret_data[4];
+		calc_crc = errorcheck(&mc_ret_data[2], 2);
+		if (orig_crc != calc_crc) {
+			dev_err(&client->dev,
+					" %s(%d) CRC 0x%02x != 0x%02x \n",
+					__func__, __LINE__, orig_crc, calc_crc);
+			continue;
+		}
+
+		if (((mc_ret_data[2] << 8) | mc_ret_data[3]) == 0) {
+			priv->num_ctrls = index;
+			break;
+		}
+
+		payload_len =
+			((mc_ret_data[2] << 8) | mc_ret_data[3]) +
+			HEADER_FOOTER_SIZE;
+		errcode = mc_ret_data[5];
+		if (errcode != ERRCODE_SUCCESS) {
+			dev_err(&client->dev,
+					" %s(%d) Errcode - 0x%02x \n",
+					__func__, __LINE__, errcode);
+			continue;
+		}
+
+		memset(mc_ret_data, 0x00, payload_len);
+		err = cam_read(client, mc_ret_data, payload_len);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) Error - %d \n",
+					__func__, __LINE__, err);
+			continue;
+		}
+
+		/* Verify CRC */
+		orig_crc = mc_ret_data[payload_len - 2];
+		calc_crc =
+			errorcheck(&mc_ret_data[2],
+					payload_len - HEADER_FOOTER_SIZE);
+		if (orig_crc != calc_crc) {
+			dev_err(&client->dev,
+					" %s(%d) CRC 0x%02x != 0x%02x \n",
+					__func__, __LINE__, orig_crc, calc_crc);
+			continue;
+		}
+
+		/* Verify Errcode */
+		errcode = mc_ret_data[payload_len - 1];
+		if (errcode != ERRCODE_SUCCESS) {
+			dev_err(&client->dev,
+					" %s(%d) Errcode - 0x%02x \n",
+					__func__, __LINE__, errcode);
+			continue;
+		}
+
+		if(mcu_cam_ctrl != NULL) {
+
+			/* append ctrl info in array */
+			mcu_cam_ctrl[index].ctrl_id =
+				mc_ret_data[2] << 24 | mc_ret_data[3] << 16 | mc_ret_data[4]
+				<< 8 | mc_ret_data[5];
+			mcu_cam_ctrl[index].ctrl_type = mc_ret_data[6];
+
+			switch (mcu_cam_ctrl[index].ctrl_type) {
+				case CTRL_STANDARD:
+					mcu_cam_ctrl[index].ctrl_data.std.ctrl_min =
+						mc_ret_data[7] << 24 | mc_ret_data[8] << 16
+						| mc_ret_data[9] << 8 | mc_ret_data[10];
+
+					mcu_cam_ctrl[index].ctrl_data.std.ctrl_max =
+						mc_ret_data[11] << 24 | mc_ret_data[12] <<
+						16 | mc_ret_data[13]
+						<< 8 | mc_ret_data[14];
+
+					mcu_cam_ctrl[index].ctrl_data.std.ctrl_def =
+						mc_ret_data[15] << 24 | mc_ret_data[16] <<
+						16 | mc_ret_data[17]
+						<< 8 | mc_ret_data[18];
+
+					mcu_cam_ctrl[index].ctrl_data.std.ctrl_step =
+						mc_ret_data[19] << 24 | mc_ret_data[20] <<
+						16 | mc_ret_data[21]
+						<< 8 | mc_ret_data[22];
+					break;
+
+				case CTRL_EXTENDED:
+					/* Not Implemented */
+					break;
+			}
+
+			priv->ctrldb[index] = mcu_cam_ctrl[index].ctrl_id;
+		}
+		index++;
+		if(retry == 0) {
+			ret = -EIO;
+			goto exit;
+		}
+	}
+
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+
+	return ret;
+
+}
+
+static int mcu_get_fw_version(struct i2c_client *client, unsigned char *fw_version, unsigned char *txt_fw_version)
+{
+	uint32_t payload_len = 0;
+	uint8_t errcode = ERRCODE_SUCCESS, orig_crc = 0, calc_crc = 0;
+	int ret = 0, err = 0, loop, i=0, retry = 5;
+	unsigned long txt_fw_pos = ARRAY_SIZE(g_mcu_fw_buf)-VERSION_FILE_OFFSET;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/* lock semaphore */
+	mutex_lock(&g_i2c_mutex);
+
+	/* Get Text Firmware version*/
+	for(loop = txt_fw_pos; loop < (txt_fw_pos+64); loop=loop+2) {
+		*(txt_fw_version+i) = (mcu_bload_ascii2hex(g_mcu_fw_buf[loop]) << 4 |
+				mcu_bload_ascii2hex(g_mcu_fw_buf[loop+1]));
+		i++;
+	}
+
+	while (retry-- > 0) {
+		/* Query firmware version from MCU */
+		payload_len = 0;
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_VERSION;
+		mc_data[2] = payload_len >> 8;
+		mc_data[3] = payload_len & 0xFF;
+		mc_data[4] = errorcheck(&mc_data[2], 2);
+		err = cam_write(client, mc_data, TX_LEN_PKT);
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_VERSION;
+		err = cam_write(client, mc_data, 2);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) MCU CMD ID Write PKT fw Version Error - %d \n", __func__,
+					__LINE__, ret);
+			ret = -EIO;
+			continue;
+		}
+
+		err = cam_read(client, mc_ret_data, RX_LEN_PKT);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) MCU CMD ID Read PKT fw Version Error - %d \n", __func__,
+					__LINE__, ret);
+			ret = -EIO;
+			continue;
+		}
+
+		/* Verify CRC */
+		orig_crc = mc_ret_data[4];
+		calc_crc = errorcheck(&mc_ret_data[2], 2);
+		if (orig_crc != calc_crc) {
+			dev_err(&client->dev," %s(%d) MCU CMD ID fw Version Error CRC 0x%02x != 0x%02x \n",
+					__func__, __LINE__, orig_crc, calc_crc);
+			ret = -EINVAL;
+			continue;
+		}
+
+		errcode = mc_ret_data[5];
+		if (errcode != ERRCODE_SUCCESS) {
+			dev_err(&client->dev," %s(%d) MCU CMD ID fw Errcode - 0x%02x \n", __func__,
+					__LINE__, errcode);
+			ret = -EIO;
+			continue;
+		}
+
+		/* Read the actual version from MCU*/
+		payload_len =
+			((mc_ret_data[2] << 8) | mc_ret_data[3]) + HEADER_FOOTER_SIZE;
+		memset(mc_ret_data, 0x00, payload_len);
+		err = cam_read(client, mc_ret_data, payload_len);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) MCU fw CMD ID Read Version Error - %d \n", __func__,
+					__LINE__, ret);
+			ret = -EIO;
+			continue;
+		}
+
+		/* Verify CRC */
+		orig_crc = mc_ret_data[payload_len - 2];
+		calc_crc = errorcheck(&mc_ret_data[2], 32);
+		if (orig_crc != calc_crc) {
+			dev_err(&client->dev," %s(%d) MCU fw  CMD ID Version CRC ERROR 0x%02x != 0x%02x \n",
+					__func__, __LINE__, orig_crc, calc_crc);
+			ret = -EINVAL;
+			continue;
+		}
+
+		/* Verify Errcode */
+		errcode = mc_ret_data[payload_len - 1];
+		if (errcode != ERRCODE_SUCCESS) {
+			dev_err(&client->dev," %s(%d) MCU fw CMD ID Read Payload Error - 0x%02x \n", __func__,
+					__LINE__, errcode);
+			ret = -EIO;
+			continue;
+		}
+		if(ret == ERRCODE_SUCCESS) 
+			break; 
+	}
+
+	if (retry < 0 && ret != ERRCODE_SUCCESS) {
+		pr_info(" %s with exit code = %d %d\n", __func__, ret,__LINE__);
+		goto exit;
+	}
+
+	for (loop = 0 ; loop < VERSION_SIZE ; loop++ )
+		*(fw_version+loop) = mc_ret_data[2+loop];
+
+	/* Check for forced/always update field in the text firmware version*/
+	if(txt_fw_version[17] == '1') {
+		dev_err(&client->dev, "Forced Update Enabled - Firmware Version - (%.32s) \n",
+				fw_version);
+		ret = 2;
+		goto exit;
+	}			
+
+	for(i = 0; i < VERSION_SIZE; i++) {
+		if(txt_fw_version[i] != fw_version[i]) {
+			dev_dbg(&client->dev, "Previous Firmware Version - (%.32s)\n", fw_version);
+			dev_dbg(&client->dev, "Current Firmware Version - (%.32s)\n", txt_fw_version);
+			ret = 1;
+			goto exit;
+		}
+	}
+
+	ret = ERRCODE_SUCCESS;
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&g_i2c_mutex);
+
+	return ret;
+}
+
+static int mcu_get_sensor_id(struct i2c_client *client, uint16_t * sensor_id)
+{
+	uint32_t payload_len = 0;
+	uint8_t errcode = ERRCODE_SUCCESS, orig_crc = 0, calc_crc = 0;
+
+	int ret = 0, err = 0;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/* lock semaphore */
+	mutex_lock(&g_i2c_mutex);
+
+	/* Read the version info. from Micro controller */
+
+	/* First Txn Payload length = 0 */
+	payload_len = 0;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_SENSOR_ID;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_SENSOR_ID;
+	err = cam_write(client, mc_data, 2);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	err = cam_read(client, mc_ret_data, RX_LEN_PKT);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[4];
+	calc_crc = errorcheck(&mc_ret_data[2], 2);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	errcode = mc_ret_data[5];
+	if (errcode != ERRCODE_SUCCESS) {
+		dev_err(&client->dev," %s(%d) Errcode - 0x%02x \n",
+				__func__, __LINE__, errcode);
+		ret = -EIO;
+		goto exit;
+	}
+
+	payload_len =
+		((mc_ret_data[2] << 8) | mc_ret_data[3]) + HEADER_FOOTER_SIZE;
+
+	memset(mc_ret_data, 0x00, payload_len);
+	err = cam_read(client, mc_ret_data, payload_len);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		ret = -EIO;
+		goto exit;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[payload_len - 2];
+	calc_crc = errorcheck(&mc_ret_data[2], 2);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		ret = -EINVAL;
+		goto exit;
+	}
+
+	/* Verify Errcode */
+	errcode = mc_ret_data[payload_len - 1];
+	if (errcode != ERRCODE_SUCCESS) {
+		dev_err(&client->dev," %s(%d) Errcode - 0x%02x \n",
+				__func__, __LINE__, errcode);
+		ret = -EIO;
+		goto exit;
+	}
+
+	*sensor_id = mc_ret_data[2] << 8 | mc_ret_data[3];
+
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&g_i2c_mutex);
+
+	return ret;
+}
+
+static int mcu_get_cmd_status(struct i2c_client *client,
+		uint8_t * cmd_id, uint16_t * cmd_status,
+		uint8_t * ret_code)
+{
+	uint32_t payload_len = 0;
+	uint8_t orig_crc = 0, calc_crc = 0;
+	int err = 0;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/* No Semaphore in Get command Status */
+
+	/* First Txn Payload length = 0 */
+	payload_len = 1;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_STATUS;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_GET_STATUS;
+	mc_data[2] = *cmd_id;
+	err = cam_write(client, mc_data, 3);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		return -EIO;
+	}
+
+	payload_len = CMD_STATUS_MSG_LEN;
+	memset(mc_ret_data, 0x00, payload_len);
+	err = cam_read(client, mc_ret_data, payload_len);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		return -EIO;
+	}
+
+	/* Verify CRC */
+	orig_crc = mc_ret_data[payload_len - 2];
+	calc_crc = errorcheck(&mc_ret_data[2], 3);
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," %s(%d) CRC 0x%02x != 0x%02x \n",
+				__func__, __LINE__, orig_crc, calc_crc);
+		return -EINVAL;
+	}
+
+	*cmd_id = mc_ret_data[2];
+	*cmd_status = mc_ret_data[3] << 8 | mc_ret_data[4];
+	*ret_code = mc_ret_data[payload_len - 1];
+
+	return 0;
+}
+
+static int mcu_cam_stream_on(struct i2c_client *client)
+{
+	uint32_t payload_len = 0;
+
+	uint16_t cmd_status = 0;
+	uint8_t retcode = 0, cmd_id = 0;
+	int retry = 5,status_retry=1000, err = 0;
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct cam *priv = (struct cam *)s_data->priv;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	/*lock semaphore*/
+	mutex_lock(&priv->mcu_i2c_mutex);
+
+	while(retry-- < 0) {
+		/* First Txn Payload length = 0 */
+		payload_len = 0;
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_STREAM_ON;
+		mc_data[2] = payload_len >> 8;
+		mc_data[3] = payload_len & 0xFF;
+		mc_data[4] = errorcheck(&mc_data[2], 2);
+
+		err= cam_write(client, mc_data, TX_LEN_PKT);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) MCU Stream On Write Error - %d \n", __func__,
+					__LINE__, err);
+			continue;
+		}
+
+		mc_data[0] = CMD_SIGNATURE;
+		mc_data[1] = CMD_ID_STREAM_ON;
+		err = cam_write(client, mc_data, 2);
+		if (err != 0) {
+			dev_err(&client->dev," %s(%d) MCU Stream On Write Error - %d \n", __func__,
+					__LINE__, err);
+			continue;
+		}
+
+		while (status_retry-- > 0) {
+			/* Some Sleep for init to process */
+			yield();
+
+			cmd_id = CMD_ID_STREAM_ON;
+			if (mcu_get_cmd_status(client, &cmd_id, &cmd_status, &retcode) <
+					0) {
+				dev_err(&client->dev," %s(%d) MCU Get CMD Stream On Error \n", __func__,
+						__LINE__);
+				err = -1;
+				goto exit;
+			}
+
+			if ((cmd_status == MCU_CMD_STATUS_SUCCESS) &&
+					(retcode == ERRCODE_SUCCESS)) {
+				debug_printk(" %s %d MCU Stream On Success !! \n", __func__, __LINE__);
+				err = 0;
+				goto exit;
+			}
+
+			if ((retcode != ERRCODE_BUSY) &&
+					((cmd_status != MCU_CMD_STATUS_PENDING))) {
+				dev_err(&client->dev,
+						"(%s) %d MCU Get CMD Stream On Error STATUS = 0x%04x RET = 0x%02x\n",
+						__func__, __LINE__, cmd_status, retcode);
+				err = -1;
+				goto exit;
+			}
+			mdelay(1);
+		}
+		if(retry == 0) 
+			err = -1;
+		break;
+	}
+	msleep(10);
+exit:
+	/* unlock semaphore */
+	mutex_unlock(&priv->mcu_i2c_mutex);
+	return err;
+
+}
+
+static int mcu_isp_init(struct i2c_client *client)
+{
+	uint32_t payload_len = 0;
+
+	uint16_t cmd_status = 0;
+	uint8_t retcode = 0, cmd_id = 0;
+	int retry = 1000, err = 0;
+	uint8_t mc_data[512], mc_ret_data[512];
+
+	pr_info("mcu_isp_init\n");
+	/* check current status - if initialized, no need for Init */
+	cmd_id = CMD_ID_INIT_CAM;
+	if (mcu_get_cmd_status(client, &cmd_id, &cmd_status, &retcode) < 0) {
+		dev_err(&client->dev," %s(%d) Error \n", __func__, __LINE__);
+		return -EIO;
+	}
+
+	if ((cmd_status == MCU_CMD_STATUS_SUCCESS) &&
+			(retcode == ERRCODE_SUCCESS)) {
+		dev_err(&client->dev," Already Initialized !! \n");
+		return 0;
+	}
+
+	/* call ISP init command */
+
+	/* First Txn Payload length = 0 */
+	payload_len = 0;
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_INIT_CAM;
+	mc_data[2] = payload_len >> 8;
+	mc_data[3] = payload_len & 0xFF;
+	mc_data[4] = errorcheck(&mc_data[2], 2);
+
+	cam_write(client, mc_data, TX_LEN_PKT);
+
+	mc_data[0] = CMD_SIGNATURE;
+	mc_data[1] = CMD_ID_INIT_CAM;
+	err = cam_write(client, mc_data, 2);
+	if (err != 0) {
+		dev_err(&client->dev," %s(%d) Error - %d \n", __func__,
+				__LINE__, err);
+		return -EIO;
+	}
+
+	while (--retry > 0) {
+		/* Some Sleep for init to process */
+		msleep(10);
+
+		cmd_id = CMD_ID_INIT_CAM;
+		if (mcu_get_cmd_status
+				(client, &cmd_id, &cmd_status, &retcode) < 0) {
+			dev_err(&client->dev," %s(%d) Error \n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+
+		if ((cmd_status == MCU_CMD_STATUS_SUCCESS) &&
+				((retcode == ERRCODE_SUCCESS) || (retcode == ERRCODE_ALREADY))) {
+			dev_err(&client->dev,"ISP Initialized !! \n");
+			return 0;
+		}
+
+		if ((retcode != ERRCODE_BUSY) &&
+				((cmd_status != MCU_CMD_STATUS_PENDING))) {
+			dev_err(&client->dev,
+					"(%s) %d Init Error STATUS = 0x%04x RET = 0x%02x\n",
+					__func__, __LINE__, cmd_status, retcode);
+			return -EIO;
+		}
+	}
+	dev_err(&client->dev,"ETIMEDOUT Error\n");
+	return -ETIMEDOUT;
+}
+
+unsigned short int mcu_bload_calc_crc16(unsigned char *buf, int len)
+{
+	unsigned short int crc = 0;
+	int i = 0;
+
+	if (!buf || !(buf + len))
+		return 0;
+
+	for (i = 0; i < len; i++) {
+		crc ^= buf[i];
+	}
+
+	return crc;
+}
+
+unsigned char mcu_bload_inv_checksum(unsigned char *buf, int len)
+{
+	unsigned int checksum = 0x00;
+	int i = 0;
+
+	if (!buf || !(buf + len))
+		return 0;
+
+	for (i = 0; i < len; i++) {
+		checksum = (checksum + buf[i]);
+	}
+
+	checksum &= (0xFF);
+	return (~(checksum) + 1);
+}
+
+int mcu_bload_get_version(struct i2c_client *client)
+{
+	int ret = 0;
+
+	/*----------------------------- GET VERSION -------------------- */
+
+	/*   Write Get Version CMD */
+	g_bload_buf[0] = BL_GET_VERSION;
+	g_bload_buf[1] = ~(BL_GET_VERSION);
+
+	ret = cam_write(client, g_bload_buf, 2);
+	if (ret < 0) {
+		dev_err(&client->dev,"Write Failed \n");
+		return -1;
+	}
+
+	/*   Wait for ACK or NACK */
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed \n");
+		return -1;
+	}
+
+	if (g_bload_buf[0] != 'y') {
+		/*   NACK Received */
+		dev_err(&client->dev," NACK Received... exiting.. \n");
+		return -1;
+	}
+
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed \n");
+		return -1;
+	}
+
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed\n");
+		return -1;
+	}
+
+	/* ---------------- GET VERSION END ------------------- */
+
+	return 0;
+}
+
+int mcu_bload_parse_send_cmd(struct i2c_client *client,
+		unsigned char *bytearray, int rec_len)
+{
+	IHEX_RECORD *ihex_rec = NULL;
+	unsigned char checksum = 0, calc_checksum = 0;
+	int i = 0, ret = 0;
+
+	if (!bytearray)
+		return -1;
+
+	ihex_rec = (IHEX_RECORD *) bytearray;
+	ihex_rec->addr = htons(ihex_rec->addr);
+
+	checksum = bytearray[rec_len - 1];
+
+	calc_checksum = mcu_bload_inv_checksum(bytearray, rec_len - 1);
+	if (checksum != calc_checksum) {
+		dev_err(&client->dev," Invalid Checksum 0x%02x != 0x%02x !! \n",
+				checksum, calc_checksum);
+		return -1;
+	}
+
+	if ((ihex_rec->rectype == REC_TYPE_ELA)
+			&& (ihex_rec->addr == 0x0000)
+			&& (ihex_rec->datasize = 0x02)) {
+		/*   Upper 32-bit configuration */
+		g_bload_flashaddr = (ihex_rec->recdata[0] <<
+				24) | (ihex_rec->recdata[1]
+					<< 16);
+
+		debug_printk("Updated Flash Addr = 0x%08x \n",
+				g_bload_flashaddr);
+
+	} else if (ihex_rec->rectype == REC_TYPE_DATA) {
+		/*   Flash Data into Flashaddr */
+
+		g_bload_flashaddr =
+			(g_bload_flashaddr & 0xFFFF0000) | (ihex_rec->addr);
+		g_bload_crc16 ^=
+			mcu_bload_calc_crc16(ihex_rec->recdata, ihex_rec->datasize);
+
+		/*   Write Erase Pages CMD */
+		g_bload_buf[0] = BL_WRITE_MEM_NS;
+		g_bload_buf[1] = ~(BL_WRITE_MEM_NS);
+
+		ret = cam_write(client, g_bload_buf, 2);
+		if (ret < 0) {
+			dev_err(&client->dev,"Write Failed \n");
+			return -1;
+		}
+
+		/*   Wait for ACK or NACK */
+		ret = cam_read(client, g_bload_buf, 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Read Failed \n");
+			return -1;
+		}
+
+		if (g_bload_buf[0] != RESP_ACK) {
+			/*   NACK Received */
+			dev_err(&client->dev," NACK Received... exiting.. \n");
+			return -1;
+		}
+
+		g_bload_buf[0] = (g_bload_flashaddr & 0xFF000000) >> 24;
+		g_bload_buf[1] = (g_bload_flashaddr & 0x00FF0000) >> 16;
+		g_bload_buf[2] = (g_bload_flashaddr & 0x0000FF00) >> 8;
+		g_bload_buf[3] = (g_bload_flashaddr & 0x000000FF);
+		g_bload_buf[4] =
+			g_bload_buf[0] ^ g_bload_buf[1] ^ g_bload_buf[2] ^
+			g_bload_buf[3];
+
+		ret = cam_write(client, g_bload_buf, 5);
+		if (ret < 0) {
+			dev_err(&client->dev,"Write Failed \n");
+			return -1;
+		}
+
+		/*   Wait for ACK or NACK */
+		ret = cam_read(client, g_bload_buf, 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Read Failed \n");
+			return -1;
+		}
+
+		if (g_bload_buf[0] != RESP_ACK) {
+			/*   NACK Received */
+			dev_err(&client->dev," NACK Received... exiting.. \n");
+			return -1;
+		}
+
+		g_bload_buf[0] = ihex_rec->datasize - 1;
+		checksum = g_bload_buf[0];
+		for (i = 0; i < ihex_rec->datasize; i++) {
+			g_bload_buf[i + 1] = ihex_rec->recdata[i];
+			checksum ^= g_bload_buf[i + 1];
+		}
+
+		g_bload_buf[i + 1] = checksum;
+
+		ret = cam_write(client, g_bload_buf, i + 2);
+		if (ret < 0) {
+			dev_err(&client->dev,"Write Failed \n");
+			return -1;
+		}
+
+poll_busy:
+		/*   Wait for ACK or NACK */
+		ret = cam_read(client, g_bload_buf, 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Read Failed \n");
+			return -1;
+		}
+
+		if (g_bload_buf[0] == RESP_BUSY)
+			goto poll_busy;
+
+		if (g_bload_buf[0] != RESP_ACK) {
+			/*   NACK Received */
+			dev_err(&client->dev," NACK Received... exiting.. \n");
+			return -1;
+		}
+
+	} else if (ihex_rec->rectype == REC_TYPE_SLA) {
+		/*   Update Instruction pointer to this address */
+
+	} else if (ihex_rec->rectype == REC_TYPE_EOF) {
+		/*   End of File - Issue I2C Go Command */
+		return 0;
+	} else {
+
+		/*   Unhandled Type */
+		dev_err(&client->dev,"Unhandled Command Type \n");
+		return -1;
+	}
+
+	return 0;
+}
+
+int mcu_bload_go(struct i2c_client *client)
+{
+	int ret = 0;
+
+	g_bload_buf[0] = BL_GO;
+	g_bload_buf[1] = ~(BL_GO);
+
+	ret = cam_write(client, g_bload_buf, 2);
+	if (ret < 0) {
+		dev_err(&client->dev,"Write Failed \n");
+		return -1;
+	}
+
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Failed Read 1 \n");
+		return -1;
+	}
+
+	/*   Start Address */
+	g_bload_buf[0] = (FLASH_START_ADDRESS & 0xFF000000) >> 24;
+	g_bload_buf[1] = (FLASH_START_ADDRESS & 0x00FF0000) >> 16;
+	g_bload_buf[2] = (FLASH_START_ADDRESS & 0x0000FF00) >> 8;
+	g_bload_buf[3] = (FLASH_START_ADDRESS & 0x000000FF);
+	g_bload_buf[4] =
+		g_bload_buf[0] ^ g_bload_buf[1] ^ g_bload_buf[2] ^ g_bload_buf[3];
+
+	ret = cam_write(client, g_bload_buf, 5);
+	if (ret < 0) {
+		dev_err(&client->dev,"Write Failed \n");
+		return -1;
+	}
+
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Failed Read 1 \n");
+		return -1;
+	}
+
+	if (g_bload_buf[0] != RESP_ACK) {
+		/*   NACK Received */
+		dev_err(&client->dev," NACK Received... exiting.. \n");
+		return -1;
+	}
+
+	return 0;
+}
+
+int mcu_bload_update_fw(struct i2c_client *client)
+{
+	/* exclude NULL character at end of string */
+	unsigned long hex_file_size = ARRAY_SIZE(g_mcu_fw_buf) - 1;
+	unsigned char wbuf[MAX_BUF_LEN];
+	int i = 0, recindex = 0, ret = 0;
+
+	for (i = 0; i < hex_file_size; i++) {
+		if ((recindex == 0) && (g_mcu_fw_buf[i] == ':')) {
+			/*  debug_printk("Start of a Record \n"); */
+		} else if (g_mcu_fw_buf[i] == CR) {
+			/*   No Implementation */
+		} else if (g_mcu_fw_buf[i] == LF) {
+			if (recindex == 0) {
+				/*   Parsing Complete */
+				break;
+			}
+
+			/*   Analyze Packet and Send Commands */
+			ret = mcu_bload_parse_send_cmd(client, wbuf, recindex);
+			if (ret < 0) {
+				dev_err(&client->dev,"Error in Processing Commands \n");
+				break;
+			}
+
+			recindex = 0;
+
+		} else {
+			/*   Parse Rec Data */
+			if ((ret = mcu_bload_ascii2hex(g_mcu_fw_buf[i])) < 0) {
+				dev_err(&client->dev,
+						"Invalid Character - 0x%02x !! \n",
+						g_mcu_fw_buf[i]);
+				break;
+			}
+
+			wbuf[recindex] = (0xF0 & (ret << 4));
+			i++;
+
+			if ((ret = mcu_bload_ascii2hex(g_mcu_fw_buf[i])) < 0) {
+				dev_err(&client->dev,
+						"Invalid Character - 0x%02x !!!! \n",
+						g_mcu_fw_buf[i]);
+				break;
+			}
+
+			wbuf[recindex] |= (0x0F & ret);
+			recindex++;
+		}
+	}
+
+	debug_printk("Program FLASH Success !! - CRC = 0x%04x \n",
+			g_bload_crc16);
+
+	/* ------------ PROGRAM FLASH END ----------------------- */
+
+	return ret;
+}
+
+int mcu_bload_erase_flash(struct i2c_client *client)
+{
+	unsigned short int pagenum = 0x0000;
+	int ret = 0, i = 0, checksum = 0;
+
+	/* --------------- ERASE FLASH --------------------- */
+
+	for (i = 0; i < NUM_ERASE_CYCLES; i++) {
+
+		checksum = 0x00;
+		/*   Write Erase Pages CMD */
+		g_bload_buf[0] = BL_ERASE_MEM_NS;
+		g_bload_buf[1] = ~(BL_ERASE_MEM_NS);
+
+		ret = cam_write(client, g_bload_buf, 2);
+		if (ret < 0) {
+			dev_err(&client->dev,"Write Failed \n");
+			return -1;
+		}
+
+		/*   Wait for ACK or NACK */
+		ret = cam_read(client, g_bload_buf, 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Read Failed \n");
+			return -1;
+		}
+
+		if (g_bload_buf[0] != RESP_ACK) {
+			/*   NACK Received */
+			dev_err(&client->dev," NACK Received... exiting.. \n");
+			return -1;
+		}
+
+		g_bload_buf[0] = (MAX_PAGES - 1) >> 8;
+		g_bload_buf[1] = (MAX_PAGES - 1) & 0xFF;
+		g_bload_buf[2] = g_bload_buf[0] ^ g_bload_buf[1];
+
+		ret = cam_write(client, g_bload_buf, 3);
+		if (ret < 0) {
+			dev_err(&client->dev,"Write Failed \n");
+			return -1;
+		}
+
+		/*   Wait for ACK or NACK */
+		ret = cam_read(client, g_bload_buf, 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Read Failed \n");
+			return -1;
+		}
+
+		if (g_bload_buf[0] != RESP_ACK) {
+			/*   NACK Received */
+			dev_err(&client->dev," NACK Received... exiting.. \n");
+			return -1;
+		}
+
+		for (pagenum = 0; pagenum < MAX_PAGES; pagenum++) {
+			g_bload_buf[(2 * pagenum)] =
+				(pagenum + (i * MAX_PAGES)) >> 8;
+			g_bload_buf[(2 * pagenum) + 1] =
+				(pagenum + (i * MAX_PAGES)) & 0xFF;
+			checksum =
+				checksum ^ g_bload_buf[(2 * pagenum)] ^
+				g_bload_buf[(2 * pagenum) + 1];
+		}
+		g_bload_buf[2 * MAX_PAGES] = checksum;
+
+		ret = cam_write(client, g_bload_buf, (2 * MAX_PAGES) + 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Write Failed \n");
+			return -1;
+		}
+
+poll_busy:
+		/*   Wait for ACK or NACK */
+		ret = cam_read(client, g_bload_buf, 1);
+		if (ret < 0) {
+			dev_err(&client->dev,"Read Failed \n");
+			return -1;
+		}
+
+		if (g_bload_buf[0] == RESP_BUSY)
+			goto poll_busy;
+
+		if (g_bload_buf[0] != RESP_ACK) {
+			/*   NACK Received */
+			dev_err(&client->dev," NACK Received... exiting.. \n");
+			return -1;
+		}
+
+		debug_printk(" ERASE Sector %d success !! \n", i + 1);
+	}
+
+	/* ------------ ERASE FLASH END ----------------------- */
+
+	return 0;
+}
+
+int mcu_bload_read(struct i2c_client *client,
+		unsigned int g_bload_flashaddr, char *bytearray,
+		unsigned int len)
+{
+	int ret = 0;
+
+	g_bload_buf[0] = BL_READ_MEM;
+	g_bload_buf[1] = ~(BL_READ_MEM);
+
+	ret = cam_write(client, g_bload_buf, 2);
+	if (ret < 0) {
+		dev_err(&client->dev,"Write Failed \n");
+		return -1;
+	}
+
+	/*   Wait for ACK or NACK */
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed \n");
+		return -1;
+	}
+
+	if (g_bload_buf[0] != RESP_ACK) {
+		/*   NACK Received */
+		dev_err(&client->dev," NACK Received... exiting.. \n");
+		return -1;
+	}
+
+	g_bload_buf[0] = (g_bload_flashaddr & 0xFF000000) >> 24;
+	g_bload_buf[1] = (g_bload_flashaddr & 0x00FF0000) >> 16;
+	g_bload_buf[2] = (g_bload_flashaddr & 0x0000FF00) >> 8;
+	g_bload_buf[3] = (g_bload_flashaddr & 0x000000FF);
+	g_bload_buf[4] =
+		g_bload_buf[0] ^ g_bload_buf[1] ^ g_bload_buf[2] ^ g_bload_buf[3];
+
+	ret = cam_write(client, g_bload_buf, 5);
+	if (ret < 0) {
+		dev_err(&client->dev,"Write Failed \n");
+		return -1;
+	}
+
+	/*   Wait for ACK or NACK */
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed \n");
+		return -1;
+	}
+
+	if (g_bload_buf[0] != RESP_ACK) {
+		/*   NACK Received */
+		dev_err(&client->dev," NACK Received... exiting.. \n");
+		return -1;
+	}
+
+	g_bload_buf[0] = len - 1;
+	g_bload_buf[1] = ~(len - 1);
+
+	ret = cam_write(client, g_bload_buf, 2);
+	if (ret < 0) {
+		dev_err(&client->dev,"Write Failed \n");
+		return -1;
+	}
+
+	/*   Wait for ACK or NACK */
+	ret = cam_read(client, g_bload_buf, 1);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed \n");
+		return -1;
+	}
+
+	if (g_bload_buf[0] != RESP_ACK) {
+		/*   NACK Received */
+		dev_err(&client->dev," NACK Received... exiting.. \n");
+		return -1;
+	}
+
+	ret = cam_read(client, bytearray, len);
+	if (ret < 0) {
+		dev_err(&client->dev,"Read Failed \n");
+		return -1;
+	}
+
+	return 0;
+}
+
+int mcu_bload_verify_flash(struct i2c_client *client,
+		unsigned short int orig_crc)
+{
+	char bytearray[FLASH_READ_LEN];
+	unsigned short int calc_crc = 0;
+	unsigned int flash_addr = FLASH_START_ADDRESS, i = 0;
+
+	while ((i + FLASH_READ_LEN) <= FLASH_SIZE) {
+		memset(bytearray, 0x0, FLASH_READ_LEN);
+
+		if (mcu_bload_read
+				(client, flash_addr + i, bytearray, FLASH_READ_LEN) < 0) {
+			dev_err(&client->dev," i2c_bload_read FAIL !! \n");
+			return -1;
+		}
+
+		calc_crc ^= mcu_bload_calc_crc16(bytearray, FLASH_READ_LEN);
+		i += FLASH_READ_LEN;
+	}
+
+	if ((FLASH_SIZE - i) > 0) {
+		memset(bytearray, 0x0, FLASH_READ_LEN);
+
+		if (mcu_bload_read
+				(client, flash_addr + i, bytearray, (FLASH_SIZE - i))
+				< 0) {
+			dev_err(&client->dev," i2c_bload_read FAIL !! \n");
+			return -1;
+		}
+
+		calc_crc ^= mcu_bload_calc_crc16(bytearray, FLASH_READ_LEN);
+	}
+
+	if (orig_crc != calc_crc) {
+		dev_err(&client->dev," CRC verification fail !! 0x%04x != 0x%04x \n",
+				orig_crc, calc_crc);
+		return -1;
+	}
+
+	debug_printk(" CRC Verification Success 0x%04x == 0x%04x \n",
+			orig_crc, calc_crc);
+
+	return 0;
+}
+
+static int mcu_fw_update(struct i2c_client *client, unsigned char *mcu_fw_version)
+{
+	int ret = 0;
+	g_bload_crc16 = 0;
+
+	/* Read Firmware version from bootloader MCU */
+	ret = mcu_bload_get_version(client);
+	if (ret < 0) {
+		dev_err(&client->dev," Error in Get Version \n");
+		goto exit;
+	}
+
+	debug_printk(" Get Version SUCCESS !! \n");
+
+	/* Erase firmware present in the MCU and flash new firmware*/
+	ret = mcu_bload_erase_flash(client);
+	if (ret < 0) {
+		dev_err(&client->dev," Error in Erase Flash \n");
+		goto exit;
+	}
+
+	debug_printk("Erase Flash Success !! \n");
+
+	/* Read the firmware present in the text file */
+	if ((ret = mcu_bload_update_fw(client)) < 0) {
+		dev_err(&client->dev," Write Flash FAIL !! \n");
+		goto exit;
+	}
+
+	/* Verify the checksum for the update firmware */
+	if ((ret = mcu_bload_verify_flash(client, g_bload_crc16)) < 0) {
+		dev_err(&client->dev," verify_flash FAIL !! \n");
+		goto exit;
+	}
+
+	/* Reverting from bootloader mode */
+	/* I2C GO Command */
+	if ((ret = mcu_bload_go(client)) < 0) {
+		dev_err(&client->dev," i2c_bload_go FAIL !! \n");
+		goto exit;
+	}
+
+	if(mcu_fw_version) {
+		dev_dbg(&client->dev, "(%s) - Firmware Updated - (%.32s)\n",
+				__func__, mcu_fw_version);
+	}
+exit:
+	return ret;
+}
+
+int toggle_boot_pin(struct cam *priv, struct i2c_client *client)
+{
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02BF, 0x20) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02BE, 0x90) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02CA, 0x99) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(1);
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02CA, 0x40) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(1);
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02CA, 0x99) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(1);	
+	return 0;
+}
+
+int Gtrigger_gpio;
+EXPORT_SYMBOL(Gtrigger_gpio);
+
+static int cam_probe(struct i2c_client *client,
+		const struct i2c_device_id *id)
+{
+	struct camera_common_data *common_data;
+	struct device_node *node = client->dev.of_node;
+	struct cam *priv;
+
+	unsigned char fw_version[32] = {0}, txt_fw_version[32] = {0};
+	int ret, frm_fmt_size = 0, loop, retry;
+	uint16_t sensor_id = 0;
+	uint8_t slave_addr=0;
+	uint32_t mipi_lanes=0;
+	int  reset_gpio = 0, boot_gpio = 0;
+	int err = 0, boot_gpio_toggle = 0;
+
+	static int once = 0;
+	void *adr1;
+	void *adr2;
+	//enum tegra_chipid chip_id;
+	const char *str, *str_trig;
+
+	if (!IS_ENABLED(CONFIG_OF) || !node)
+		return -EINVAL;
+
+	/* This code needs to be executed only in case of TX2 */
+	/*chip_id= tegra_get_chipid();
+	if(chip_id == JETSON_TX2){
+		if (once == 0) {
+			adr1 = ioremap(PADCTL_AO_CFG2TMC_GPIO_SEN8_0, 4);
+			if (adr1 == NULL) {
+				debug_printk("error");
+				goto skip;
+			}
+			adr2 = ioremap(PADCTL_AO_CFG2TMC_GPIO_SEN9_0, 4);
+			if (adr2 == NULL) {
+				debug_printk("error");
+				iounmap(adr1);
+				goto skip;
+			}
+
+			once++;
+			__raw_writel(0x0, adr1);
+			__raw_writel(0x0, adr2);
+			iounmap(adr1);
+			iounmap(adr2);
+		}
+	}
+
+skip:
+*/
+	/* Single RESET & BOOT GPIO is connected to single MFP pin of deserializer.
+	   So these GPIO's cannot control two serializers MFP pins simultaneously.
+	   So these GPIO's can mapped and controlled for debugging purpose.
+	 */ 
+#ifdef GPIO_DEBUG	
+	reset_gpio = of_get_named_gpio(node, "reset-gpios", 0);
+	debug_printk("RESET = %x \n",reset_gpio);
+	if(reset_gpio < 0) {
+		dev_err(&client->dev, "Unable to toggle GPIO\n");
+		return -EINVAL;
+	}
+
+	boot_gpio = of_get_named_gpio(node, "boot-gpios", 0);
+	debug_printk("BOOT = %x \n",boot_gpio);
+	if(boot_gpio < 0) {
+		dev_err(&client->dev, "Unable to toggle GPIO\n");
+		return -EINVAL;
+	}
+
+	err = gpio_request(reset_gpio,"cam-reset");
+	if (err < 0) {
+		dev_err(&client->dev,"%s[%d]:GPIO reset Fail, err:%d",__func__,__LINE__, err);
+		return -EINVAL;
+	}
+
+	err = gpio_request(boot_gpio,"cam-boot"); 
+	if (err < 0) {
+		dev_err(&client->dev,"%s[%d]:%dGPIO boot Fail\n",__func__,__LINE__,err);
+		return -EINVAL;
+	}
+	toggle_gpio(reset_gpio, 0);
+	msleep(1);
+	toggle_gpio(reset_gpio, 1);
+#endif
+
+	if (Gtrigger_gpio == 0) {
+		Gtrigger_gpio = of_get_named_gpio(node, "trigger-gpios", 0);
+		if(Gtrigger_gpio < 0) {
+			dev_err(&client->dev, "Unable to toggle GPIO\n");
+			return -EINVAL;
+		}
+
+		err = gpio_request(Gtrigger_gpio, "trigger-sel");
+		if (err < 0) {
+			dev_err(&client->dev,"%s[%d]:GPIO reset Fail, err:%d",__func__,__LINE__, err);
+			return -EINVAL;
+		}
+	
+	}
+	err = of_property_read_string(node, "default-trigger", &str_trig);
+	if (!err) {
+		if (!strcmp(str_trig, "internal")){
+			toggle_gpio(Gtrigger_gpio, 0);
+		}
+		else if (!strcmp(str_trig, "external")) {
+			toggle_gpio(Gtrigger_gpio, 1);	
+		}
+	} else {
+		toggle_gpio(Gtrigger_gpio, 0);
+	}
+
+	common_data =
+		devm_kzalloc(&client->dev,
+				sizeof(struct camera_common_data), GFP_KERNEL);
+	if (!common_data)
+		return -ENOMEM;
+
+	priv =
+		devm_kzalloc(&client->dev,
+				sizeof(struct cam) +
+				sizeof(struct v4l2_ctrl *) * AR0233_NUM_CONTROLS,
+				GFP_KERNEL);
+	if (!priv)
+		return -ENOMEM;
+
+	priv->pdata = cam_parse_dt(client);
+	if (!priv->pdata) {
+		dev_err(&client->dev, "unable to get platform data\n");
+		return -EFAULT;
+	}
+	/*Identifying Deserializer SIO port for 
+	  I2C Address Reassignment and Translation
+	 */
+	err = of_property_read_string(node, "sio-port", &str);
+	if (!err) {
+		if (!strcmp(str, "A")){
+			priv->phy = PHY_A;
+			debug_printk("Current SIO ports is %c\n",priv->phy);
+			/* RESET status if PHYA */
+			ser_status = 0;
+		}
+		else{
+			priv->phy = PHY_B;
+			debug_printk("Current SIO ports is %c\n",priv->phy);
+		}	
+	} else {
+		dev_err(&client->dev,"No SIO port mentioned in device tree\n");
+		return -EINVAL;	
+	}
+	err = of_property_read_u32(node, "camera_mipi_lanes", &mipi_lanes);
+	if (!err) {
+		debug_printk("Device No of MIPI lane configuration is %u\n",mipi_lanes);
+	} else {
+		dev_err(&client->dev,"No of MIPI lanes not mentioned in device tree\n");
+		return -EINVAL;	
+	}
+
+	priv->des_addr = DES_ADDR;
+	priv->i2c_client = client;
+	priv->s_data = common_data;
+	priv->subdev = &common_data->subdev;
+	priv->subdev->dev = &client->dev;
+	priv->s_data->dev = &client->dev;
+	common_data->priv = (void *)priv;
+
+
+	err = cam_power_get(priv);
+	if (err)
+		return err;
+
+	err = cam_power_on(common_data);
+	if (err)
+		return err;
+
+	err = serdes_config_init(client, priv);
+	if(err < 0)
+	{
+		dev_err(&client->dev,"serdes_config_init_failed\n");
+		return -EIO;
+	}
+	/* Toggeling MCU RESET */
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02CA, 0x40) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(10);
+	if(serdes_write_16b_reg(client, priv->ser_addr, 0x02CA, 0x99) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(100);
+
+	ret = mcu_get_fw_version(client, fw_version, txt_fw_version);
+	if (ret != 0) {
+
+		if(ret > 0) {
+			if((err = mcu_jump_bload(client)) < 0) {
+				dev_err(&client->dev," Cannot go into bootloader mode\n");
+				return -EIO;
+			}			
+			msleep(1000);
+		} else {
+			dev_info(&client->dev,"Using Boot pin for firmware update\n");
+
+			retry = 10;
+			while(retry -- > 0) {		
+				if(toggle_boot_pin(priv, client) < 0) {
+					msleep(100);
+					dev_info(&client->dev,"Retry Boot pin toggle \n");
+					continue;
+				}
+				break;
+			}
+			if(retry <= 0) {
+				dev_err(&client->dev," Cannot go into bootloader mode\n");
+				return -EIO;
+			}
+
+		}
+		dev_err(&client->dev," Trying to Detect Bootloader mode\n");
+
+		for(loop = 0;loop < 10; loop++) {
+			err = mcu_bload_get_version(client);
+			if (err < 0) {
+				/* Trial and Error for 1 second (100ms * 10) */
+				msleep(1000);
+				continue;
+			} else {
+				dev_err(&client->dev," Get Bload Version Success\n");
+				break;
+			}
+		}
+
+		if(loop == 10) {
+			dev_err(&client->dev, "Error updating firmware \n");
+			return -EINVAL;
+		}				
+
+		for( loop = 0; loop < 10; loop++) {
+			err = mcu_fw_update(client, NULL);
+			if(err < 0) {
+				dev_err(&client->dev, "%s(%d) Error updating firmware... Retry.. \n\n", __func__, __LINE__);
+
+				continue;
+			} else {
+				dev_err (&client->dev, "Firmware Updated Successfully\n");
+				break;	
+			}
+
+		}
+		if( loop == 10) {
+			dev_err( &client->dev, "Error Updating Firmware\n");
+			return -EFAULT;
+		}
+
+		if((serdes_write_16b_reg(client, priv->ser_addr, 0x02BE, 0x40)) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",__func__, __LINE__);
+			return -EIO;
+		}
+
+		/* Allow FW Updated Driver to reboot */
+		msleep(1000);
+		/*Maintaining GMSL1 firmware update compatability*/
+		for(loop = 0;loop < 10; loop++) {
+			err = mcu_get_fw_version(client, fw_version, txt_fw_version);
+			if (err < 0) {
+				msleep(1000);
+
+				/* See if it is a empty MCU */
+				err = mcu_bload_get_version(client);
+				if (err < 0) {
+					dev_err(&client->dev," Get Bload Version Fail\n");
+				} else {
+					dev_err(&client->dev," Get Bload Version Success\n");
+
+					/* Re-issue GO command to get into user mode */
+					if (mcu_bload_go(client) < 0) {
+						dev_err(&client->dev," i2c_bload_go FAIL !! \n");
+					}					
+					msleep(1000);
+				}						
+
+				continue;
+			} else {
+				dev_err(&client->dev," Get FW Version Success\n");
+				break;
+			}
+		}
+		if(loop == 10) {
+			dev_err(&client->dev, "Error updating firmware \n");
+			return -EINVAL;
+		}						
+
+		debug_printk("Current Firmware Version - (%.32s).",
+				fw_version);
+
+	} else {
+		/* Same firmware version in MCU and Text File */
+		debug_printk("Current Firmware Version - (%.32s)",fw_version);
+	}
+
+	mutex_init(&priv->mcu_i2c_mutex);
+	/* Query the number of controls from MCU*/
+	if(mcu_list_ctrls(client, NULL, priv) < 0) {
+		dev_err(&client->dev, "%s, Failed to init controls \n", __func__);
+		return -EFAULT;
+	}
+
+	/*Query the number for Formats available from MCU */
+	if(mcu_list_fmts(client, NULL, &frm_fmt_size,priv) < 0) {
+		dev_err(&client->dev, "%s, Failed to init formats \n", __func__);
+		return -EFAULT;
+	}
+
+	priv->mcu_ctrl_info = devm_kzalloc(&client->dev, sizeof(ISP_CTRL_INFO) * priv->num_ctrls, GFP_KERNEL);
+	if(!priv->mcu_ctrl_info) {
+		dev_err(&client->dev, "Unable to allocate memory \n");
+		return -ENOMEM;
+	}
+
+	priv->ctrldb = devm_kzalloc(&client->dev, sizeof(uint32_t) * priv->num_ctrls, GFP_KERNEL);
+	if(!priv->ctrldb) {
+		dev_err(&client->dev, "Unable to allocate memory \n");
+		return -ENOMEM;
+	}
+
+	priv->stream_info = devm_kzalloc(&client->dev, sizeof(ISP_STREAM_INFO) * (frm_fmt_size + 1), GFP_KERNEL);
+
+	priv->streamdb = devm_kzalloc(&client->dev, sizeof(int) * (frm_fmt_size + 1), GFP_KERNEL);
+	if(!priv->streamdb) {
+		dev_err(&client->dev,"Unable to allocate memory \n");
+		return -ENOMEM;
+	}
+
+	priv->mcu_cam_frmfmt = devm_kzalloc(&client->dev, sizeof(struct camera_common_frmfmt) * (frm_fmt_size), GFP_KERNEL);
+	if(!priv->mcu_cam_frmfmt) {
+		dev_err(&client->dev, "Unable to allocate memory \n");
+		return -ENOMEM;
+	}
+
+	if (mcu_get_sensor_id(client, &sensor_id) < 0) {
+		dev_err(&client->dev, "Unable to get MCU Sensor ID \n");
+		return -EFAULT;
+	}
+	dev_info(&client->dev,"Sensor ID = 0x%x\n",sensor_id);
+
+	/* Issue retry for init ISP */
+	retry = 10;
+	while(retry -- > 0) {
+		if (mcu_isp_init(client) < 0) {
+			dev_err(&client->dev, "Unable to INIT ISP, retry = %d \n", retry);
+			continue;
+		} else {
+			break;
+		}
+	}
+
+	if(retry == 0) {
+		dev_err(&client->dev, "Unable to INIT ISP \n");
+		return -EFAULT;
+	}
+
+	/* Configuring Toshiba Bridge */
+	if (tb_parse_regdata(client, MIPI_TX_BASE, ARRAY_SIZE(MIPI_TX_BASE),priv->tb_id) <
+			0) {
+		dev_err(&client->dev, "%s: Failed to write TB Reg\n",
+				__func__);
+	}
+
+	/* Configuring SIOA Serializer */
+	if(priv->phy == PHY_A)
+	{
+		if(serdes_parse_regdata(client, SER1_CONF, ARRAY_SIZE(SER1_CONF),priv->ser_addr) < 0) {
+			dev_err(&client->dev, "%s: Failed to configure SIOA Serializer\n",__func__);
+			return -EIO;
+		}
+		debug_printk("configuring SIOA serializer successful\n");
+	}
+
+	/* Configuring SIOB Serializer */
+	if(priv->phy == PHY_B)
+	{
+		if(serdes_parse_regdata(client, SER2_CONF, ARRAY_SIZE(SER2_CONF),priv->ser_addr) < 0) {
+			dev_err(&client->dev, "%s: Failed to configure SIOB Serializer\n",__func__);
+			return -EIO;
+		}
+		debug_printk("configuring SIOB serializer successful\n");
+	}
+
+	/* Configuring Deserializer */
+	if(serdes_parse_regdata(client, DSER_CONF, ARRAY_SIZE(DSER_CONF),priv->des_addr) < 0) {
+		dev_err(&client->dev, "%s: Failed to configure DESER Serializer\n",__func__);
+		return -EIO;
+	}
+	debug_printk("configuring Deserializer Successful\n");
+
+	for(loop = 0; loop < frm_fmt_size; loop++) {
+		priv->mcu_cam_frmfmt[loop].framerates = devm_kzalloc(&client->dev, sizeof(int) * MAX_NUM_FRATES, GFP_KERNEL);
+		if(!priv->mcu_cam_frmfmt[loop].framerates) {
+			dev_err(&client->dev, "Unable to allocate memory \n");
+			return -ENOMEM;
+		}
+	}
+
+	/* Enumerate Formats */
+	if (mcu_list_fmts(client, priv->stream_info, &frm_fmt_size,priv) < 0) {
+		dev_err(&client->dev, "Unable to List Fmts \n");
+		return -EFAULT;
+	}
+
+	common_data->ops = NULL;
+	common_data->ctrl_handler = &priv->ctrl_handler;
+	common_data->frmfmt = priv->mcu_cam_frmfmt;
+	common_data->colorfmt =
+		camera_common_find_datafmt(AR0233_DEFAULT_DATAFMT);
+	common_data->power = &priv->power;
+	common_data->ctrls = priv->ctrls;
+	common_data->priv = (void *)priv;
+	common_data->numctrls = priv->num_ctrls;
+	common_data->numfmts = frm_fmt_size;
+	common_data->def_mode = AR0233_DEFAULT_MODE;
+	common_data->def_width = AR0233_DEFAULT_WIDTH;
+	common_data->def_height = AR0233_DEFAULT_HEIGHT;
+	common_data->fmt_width = common_data->def_width;
+	common_data->fmt_height = common_data->def_height;
+	common_data->def_clk_freq = 24000000;
+	priv->trigger_gpio = Gtrigger_gpio;
+
+	priv->i2c_client = client;
+	priv->s_data = common_data;
+	priv->subdev = &common_data->subdev;
+	priv->subdev->dev = &client->dev;
+	priv->s_data->dev = &client->dev;
+	priv->prev_index = 0xFFFE;
+
+	err = camera_common_initialize(common_data, "ar0233");
+	if (err) {
+		dev_err(&client->dev, "Failed to initialize ar0233.\n");
+		return err;
+	}
+
+	v4l2_i2c_subdev_init(priv->subdev, client, &cam_subdev_ops);
+	/* Enumerate Ctrls */
+	err = cam_ctrls_init(priv, priv->mcu_ctrl_info);
+	if (err)
+		return err;
+	priv->subdev->internal_ops = &cam_subdev_internal_ops;
+	priv->subdev->flags |=
+		V4L2_SUBDEV_FL_HAS_DEVNODE | V4L2_SUBDEV_FL_HAS_EVENTS;
+	/*
+	   To unload the module driver module, 
+	   Set (struct v4l2_subdev *)priv->subdev->sd to NULL.
+	   Refer tegracam_v4l2subdev_register() in tegracam_v4l2.c
+	 */
+	if (priv->subdev->owner == THIS_MODULE) {
+		common_data->owner = priv->subdev->owner;
+		priv->subdev->owner = NULL;
+	} else {
+		// It shouldn't come here in probe();
+		;
+	}
+
+
+#if defined(CONFIG_MEDIA_CONTROLLER)
+	priv->pad.flags = MEDIA_PAD_FL_SOURCE;
+	priv->subdev->entity.ops = &cam_media_ops;
+	err = tegra_media_entity_init(&priv->subdev->entity, 1, &priv->pad, true, true);
+	if (err < 0) {
+		dev_err(&client->dev, "unable to init media entity\n");
+		return err;
+	}
+#endif
+
+	err = v4l2_async_register_subdev(priv->subdev);
+	if (err)
+		return err;
+	/*Enabling LINKS based on Serializer Availablity*/
+	dev_err(&client->dev," ser_status=%x\n",ser_status);
+	if(serdes_write_16b_reg(client, priv->des_addr, 0x0010, ser_status) < 0)
+	{
+		dev_err (&client->dev, "%s(%d): Failed\n",
+				__func__, __LINE__);
+		return -EIO;
+	}
+	msleep(100);
+	dev_info(&client->dev,"Detected AR0233 sensor\n");
+
+	/*Initialisation And Calibration of PWM Chip */
+	err = pca9685_init(client,30);
+	if(err){
+		dev_err(&client->dev, "unable to init pca9685\n");
+		return err;
+	}
+
+#ifdef AR0233_HDR_SYNC
+	num_cam++;
+	cam_track = num_cam;
+#endif
+	return 0;
+}
+
+#define FREE_SAFE(dev, ptr) \
+	if(ptr) { \
+		devm_kfree(dev, ptr); \
+	}
+
+static int cam_remove(struct i2c_client *client)
+{
+	struct camera_common_data *s_data = to_camera_common_data(&client->dev);
+	struct device_node *node = client->dev.of_node;
+	struct cam *priv = (struct cam *)s_data->priv;
+	int loop = 0;
+	int trigger_gpio=0;
+	uint8_t ser_read;
+	if (!priv || !priv->pdata)
+		return -1;
+
+	v4l2_async_unregister_subdev(priv->subdev);
+#if defined(CONFIG_MEDIA_CONTROLLER)
+	media_entity_cleanup(&priv->subdev->entity);
+#endif
+	calibration_exit();
+	if(priv->phy == PHY_B){
+		if(serdes_write_16b_reg(client, priv->ser_addr, 0x0000, SER1_ADDR<<1) < 0)
+		{
+			dev_err (&client->dev, "%s(%d): Failed\n",
+					__func__, __LINE__);
+			return -EIO;
+		}
+		msleep(100);
+	}
+
+	trigger_gpio = of_get_named_gpio(node, "trigger-gpios", 0);
+	debug_printk("trigger = %x \n",trigger_gpio);
+	if(trigger_gpio < 0) {
+		dev_err(&client->dev, "Unable to toggle GPIO\n");
+		return -EINVAL;
+	}
+
+	v4l2_ctrl_handler_free(&priv->ctrl_handler);
+	cam_power_put(priv);
+	gpio_free(trigger_gpio);
+	camera_common_remove_debugfs(s_data);
+
+	mutex_destroy(&priv->mcu_i2c_mutex);
+
+	/* Free up memory */
+	for(loop = 0; loop < priv->mcu_ctrl_info->ctrl_ui_data.ctrl_menu_info.num_menu_elem
+			; loop++) {
+		FREE_SAFE(&client->dev, priv->mcu_ctrl_info->ctrl_ui_data.ctrl_menu_info.menu[loop]);
+	}
+
+	FREE_SAFE(&client->dev, priv->mcu_ctrl_info->ctrl_ui_data.ctrl_menu_info.menu);
+
+	FREE_SAFE(&client->dev, priv->mcu_ctrl_info);
+
+	for(loop = 0; loop < s_data->numfmts; loop++ ) {
+		FREE_SAFE(&client->dev, (void *)priv->mcu_cam_frmfmt[loop].framerates);
+	}
+
+	FREE_SAFE(&client->dev, priv->mcu_cam_frmfmt);
+
+	FREE_SAFE(&client->dev, priv->ctrldb);
+	FREE_SAFE(&client->dev, priv->streamdb);
+
+	FREE_SAFE(&client->dev, priv->stream_info);
+	FREE_SAFE(&client->dev, fw_version);
+	FREE_SAFE(&client->dev, priv->pdata);
+	FREE_SAFE(&client->dev, priv->s_data);
+	FREE_SAFE(&client->dev, priv);
+	return 0;
+}
+
+static const struct i2c_device_id cam_id[] = {
+	{"ar0233", 0},
+	{}
+};
+
+MODULE_DEVICE_TABLE(i2c, cam_id);
+
+static struct i2c_driver cam_i2c_driver = {
+	.driver = {
+		.name = "ar0233",
+		.owner = THIS_MODULE,
+		.of_match_table = of_match_ptr(cam_of_match),
+	},
+	.probe = cam_probe,
+	.remove = cam_remove,
+	.id_table = cam_id,
+};
+
+module_i2c_driver(cam_i2c_driver);
+
+MODULE_DESCRIPTION("V4L2 driver for e-con Cameras");
+MODULE_AUTHOR("E-Con Systems");
+MODULE_LICENSE("GPL v2");
+
diff --git a/NileCAM21_CUOAGX/ar0233_common.h b/NileCAM21_CUOAGX/ar0233_common.h
new file mode 100644
index 0000000..c4ceb73
--- /dev/null
+++ b/NileCAM21_CUOAGX/ar0233_common.h
@@ -0,0 +1,16 @@
+#ifndef __AR0233_COMMON_H
+#define __AR0233_COMMON_H
+
+#include <linux/slab.h>
+#include <linux/uaccess.h>
+#include <linux/gpio.h>
+#include <linux/module.h>
+
+#include <linux/seq_file.h>
+#include <linux/of.h>
+#include <linux/of_device.h>
+#include <linux/of_gpio.h>
+#include <media/camera_common.h>
+//#include <soc/tegra/chip-id.h>
+
+#endif /* __AR0233_COMMON_H */
diff --git a/NileCAM21_CUOAGX/mcu_firmware.h b/NileCAM21_CUOAGX/mcu_firmware.h
new file mode 100644
index 0000000..8967925
--- /dev/null
+++ b/NileCAM21_CUOAGX/mcu_firmware.h
@@ -0,0 +1,74 @@
+#ifndef _MCU_FIRMWARE_H
+#define _MCU_FIRMWARE_H
+
+/*   Local Defines */
+#define MAX_BUF_LEN 2048
+
+#define MAX_PAGES 			512
+#define TOTAL_PAGES 		1536
+#define NUM_ERASE_CYCLES	(TOTAL_PAGES / MAX_PAGES)
+
+#define FLASH_START_ADDRESS 0x08000000
+#define FLASH_SIZE 			192*1024
+#define FLASH_READ_LEN		256
+
+#define CR 13                   /*   Carriage return */
+#define LF 10                   /*   Line feed */
+
+/*   TODO: Only necessary commands added */
+enum _i2c_cmds
+{
+        BL_GET_VERSION = 0x01,
+        BL_GO = 0x21,
+        BL_READ_MEM = 0x11,
+        BL_WRITE_MEM = 0x31,
+        BL_WRITE_MEM_NS = 0x32,
+        BL_ERASE_MEM = 0x44,
+        BL_ERASE_MEM_NS = 0x45,
+};
+
+enum _i2c_resp
+{
+        RESP_ACK = 0x79,
+        RESP_NACK = 0x1F,
+        RESP_BUSY = 0x76,
+};
+
+enum _ihex_rectype
+{
+        /*   Normal data */
+        REC_TYPE_DATA = 0x00,
+        /*  End of File */
+        REC_TYPE_EOF = 0x01,
+
+        /*   Extended Segment Address */
+        REC_TYPE_ESA = 0x02,
+        /*   Start Segment Address */
+        REC_TYPE_SSA = 0x03,
+
+        /*   Extended Linear Address */
+        REC_TYPE_ELA = 0x04,
+        /*   Start Linear Address */
+        REC_TYPE_SLA = 0x05,
+};
+
+typedef struct __attribute__ ((packed)) _ihex_rec {
+        unsigned char datasize;
+        unsigned short int addr;
+        unsigned char rectype;
+        unsigned char recdata[];
+} IHEX_RECORD;
+
+unsigned int g_bload_flashaddr = 0x0000;
+
+uint8_t *fw_version = NULL;
+
+/*   Buffer to Send Bootloader CMDs */
+unsigned char g_bload_buf[MAX_BUF_LEN] = { 0 };
+
+unsigned short int g_bload_crc16 = 0x0000;
+
+const char g_mcu_fw_buf[] =
+#include "NileCAM21_CUOAGX.bin"
+;
+#endif                          //_MCU_FIRMWARE_H
diff --git a/NileCAM21_CUOAGX/pca9685.c b/NileCAM21_CUOAGX/pca9685.c
new file mode 100644
index 0000000..064f513
--- /dev/null
+++ b/NileCAM21_CUOAGX/pca9685.c
@@ -0,0 +1,489 @@
+/*
+ * pca9685.c - pca9685 support driver
+* Copyright (c) 2015-2016, e-con Systems.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#define PCA9685_FLAG
+#include "pca9685.h"
+
+/**@brief pca9685 register read function,
+ * This function reads a specific register of pca9685 pwm IC,
+ * Transferring two messages at time,
+ * First message with write flag and a single byte length data is to select a 8bit register,
+ * Second message with read flag to obtain a byte data from the selected register. 
+ * @return returns 0 if successful
+ */
+static int pca9685_reg_read(u8 reg, u8 *val){
+
+	int ret;
+	struct i2c_msg msg[] = {
+		{
+			.addr	= PCA9685_ADDRESS,
+			.flags	= I2C_M_WR,
+			.len	= 1,
+			.buf	= &reg,
+		},
+		{
+			.addr	= PCA9685_ADDRESS,
+			.flags	= I2C_M_RD,
+			.len	= 1,
+			.buf	= val,
+		}
+	};
+
+	ret = i2c_transfer(pca9685_adapter, msg, 2);
+	if (ret < 0)
+		return ret;
+
+	return 0;
+}
+
+/** @brief pca9685 register write function,
+ *  This function write a specific register of pca9685 pwm IC,
+ *  Transferring one message with write command of 2 byte data length,
+ *  First byte to select register,
+ *  Second byte is written into the selected register,
+ *  @return returns 0 if successful
+ */
+static int pca9685_reg_write(u8 reg, u8 val){
+
+	int ret;
+	unsigned char data[2] = { reg, val };
+	struct i2c_msg msg = {
+		.addr	= PCA9685_ADDRESS,
+		.flags	= I2C_M_WR,
+		.len	= 2,
+		.buf	= data,
+	};
+
+	ret = i2c_transfer(pca9685_adapter, &msg, 1);
+	udelay(100);
+
+	if (ret < 0) 
+		return ret;
+
+	return 0;
+}
+
+/** @brief pca9685 register write a bit function
+ *  This function updates a bit of specific register of pca9685 pwm IC
+ *  @return returns 0 if successful
+ */
+static int pca9685_reg_write_bits(u8 reg, u8 mask, u8 val){
+
+	int ret;
+	u8 data = 0;
+	u8 temp;
+
+	ret = pca9685_reg_read(reg,&temp);
+	if(ret)
+		return ret;
+
+	temp = data & ~mask; 
+	temp |= val & mask;
+ 
+	/* Return if read value and modified value are same */
+	if(temp == data)  
+		return 0; 
+
+	ret = pca9685_reg_write(reg,temp);
+	if(ret)
+		return ret;
+
+	return 0;
+}
+
+/** @brief PWM Calibration initialization function
+ *  This function sets up the calibration GPIO, calibration threads and the IRQ
+ *  @return returns 0 if successful
+ */
+int calibration_init(int num){
+
+	int result = 0;
+
+	/*Recalibration can be done ONLY if last_sync_mode not matched with   
+	 *current calibration request else return here itself */
+	if(last_calib_val == 2)
+		last_calib_val = num;
+	else if(last_calib_val != num)
+		last_calib_val = num;
+	else
+		return 0;
+
+	/* Create the PWM Calibration thread */
+	st_calib_start = kthread_create(thread_calibrate_pwm, NULL, "pwm_auto_calib_thread");
+	if (st_calib_start)
+		printk("Thread Created successfully\n");
+	else
+		printk(KERN_ERR "Thread creation failed\n");
+
+	/* Create the thread to finish PWM calibration */
+	st_calib_stop = kthread_create(thread_finish_pwm_calib, NULL, "pwm_stop_auto_calib_stop_thread");
+	if (st_calib_stop)
+		printk("PWM stop Thread Created successfully\n");
+	else
+		printk(KERN_ERR "PWM stop Thread creation failed\n");
+
+	// GPIO validation
+	if (!gpio_is_valid(pwm_calib_gpio)){
+		printk(KERN_ERR "Invalid GPIO \n");
+		return -ENODEV;
+	}
+
+	/* Set up the pwm_calib_gpio */
+	gpio_request(pwm_calib_gpio, "sysfs");      
+	/* Set the GPIO to be an input */
+	gpio_direction_input(pwm_calib_gpio);  
+	/* Causes gpio to appear in /sys/class/gpio */
+	gpio_export(pwm_calib_gpio, false);          
+	/* the bool argument prevents the direction from being changed */
+	irq_number = gpio_to_irq(pwm_calib_gpio);
+
+	if(psc_lookup[num] == 0 )
+		prescaler_val = pre_limit[num].psc_start;
+	else
+		prescaler_val = psc_lookup[num];
+
+	pwm_mode = num;
+	wake_up_process(st_calib_start);
+	udelay(500);
+
+	/* This next call requests an interrupt line */
+	result = request_irq(irq_number,
+			(irq_handler_t) calibration_irq_handler,
+			IRQF_TRIGGER_RISING,
+			"pwm_auto_calib_handler",
+			NULL);
+	return result;
+}
+
+/** @brief Calibration GPIO IRQ Handler function
+ *  This function is a custom interrupt handler that is attached to the Calibration GPIO.
+ */
+static irq_handler_t calibration_irq_handler(unsigned int irq, void *dev_id, struct pt_regs *regs){
+
+	static unsigned int ignore_samples = 0;
+	static int t0 = 0, t1 = 0;
+
+	/* Ignoring Five Samples to stable the PWM Frequency */
+	if(ignore_samples++ < 5) {
+		ktime_get_real_ts64(&ts);
+		t0 = (int) ts.tv_nsec/100000;
+	} else {
+		ktime_get_real_ts64(&ts);
+		t1 =(int) ts.tv_nsec/100000;
+
+	 /*Change the prescalar value Based on PWM Frequency limit*/
+		if( !((t1-t0) >= pre_limit[pwm_mode].pwm_low_limit && (t1-t0) <= pre_limit[pwm_mode].pwm_high_limit) ) {
+			ignore_samples = 0;
+			if( (t1-t0) <= pre_limit[pwm_mode].pwm_high_limit) {
+				wake_up_process(st_calib_start);
+				udelay(500);
+			} else {
+				printk("prescalar value=%x\n",prescaler_val);
+				prescaler_val = prescaler_val - 2;
+				wake_up_process(st_calib_start);
+				udelay(500);
+			}
+	/* Calibrated PWM and Stop calibration process */
+		} else {
+			printk(KERN_INFO "%s PWM Calibrated.. \n",__func__);
+			psc_lookup[pwm_mode] = prescaler_val - 1;
+			wake_up_process(st_calib_stop);
+			udelay(500);
+		}
+	}
+
+	return (irq_handler_t) IRQ_HANDLED;
+}
+
+/** @brief Calibration thread
+ *  This thread will write the appropriate Prescalar value
+ *  to get the desired frequency output from the PWM Chip
+ */
+static int thread_calibrate_pwm(void *data){
+
+	int err;
+	irq_status = true;
+	 
+	while (!kthread_should_stop()) {
+
+		err = pca9685_set_frequency(prescaler_val);
+		prescaler_val++;
+		set_current_state(TASK_INTERRUPTIBLE);
+		schedule();
+	}
+	
+	return 0;
+
+}
+
+static int thread_finish_pwm_calib(void *data){
+	
+	while (!kthread_should_stop()) {
+		udelay(500);
+		if (st_calib_start)	{
+			kthread_stop(st_calib_start);
+			put_task_struct(st_calib_start);
+			st_calib_start = NULL;
+		}
+		if (irq_status == true) {
+			free_irq(irq_number, NULL);
+			irq_status = false;
+			do_exit(0);
+		}
+	}
+	return 0;
+}
+
+ /** @brief PWM Calibration cleanup function
+ *  This function releases the calibration GPIO, calibration threads and the IRQ
+ */
+void calibration_exit(void){
+	
+	if (st_calib_start)	{
+		kthread_stop(st_calib_start);
+		put_task_struct(st_calib_start);
+		st_calib_start = NULL;
+	}
+	if (irq_status == true) {
+		free_irq(irq_number, NULL);
+		irq_status = false;
+	}
+	gpio_unexport(pwm_calib_gpio);
+	gpio_free(pwm_calib_gpio);
+}
+
+/** @brief pca9685 frequency set function
+ *  This function sets the frequency for pca9685 pwm IC by doing necessary
+ *  @return returns 0 if successful
+ */
+static int pca9685_set_frequency(int prescale){
+
+	int err;
+	 	
+	if (prescale >= PCA9685_PRESCALE_MIN && prescale <= PCA9685_PRESCALE_MAX) {
+		
+		/* Put chip into sleep mode */
+		if( (err = pca9685_reg_write_bits(PCA9685_MODE1,MODE1_SLEEP,MODE1_SLEEP)) )
+			return err;
+
+		/* Change the chip-wide output frequency */
+		if( (err = pca9685_reg_write(PCA9685_PRESCALE, prescale)) )
+			return err;
+
+		/* Wake the chip up */
+		if( (err = pca9685_reg_write_bits(PCA9685_MODE1,MODE1_SLEEP, CLEAR)) )
+			return err;
+	
+		if( (err = pca9685_reg_write_bits(PCA9685_MODE1,MODE1_RESTART,MODE1_RESTART)) )
+			return err;
+
+		/* Wait 500us for the oscillator to be back up */
+		udelay(500);
+
+	} else 
+		return -EINVAL;
+	
+	return 0;
+}
+
+/** @brief pca9685 duty cycle setting function
+ *  This function sets the duty cycle for "LANE_NOS" of pwm pin starting from "START_LANE" pwm pin of pca9685 pwm IC
+ *  @return returns 0 if successful
+ */
+static int pca9685_set_duty_cycle(int duty_ns, int period_ns){
+
+	unsigned long long duty;
+	unsigned int reg;
+	int ret;
+	int index;
+
+	/* Setting For Almost Negligible Duty Cycle */
+	if (duty_ns < 1) {
+		
+		
+		reg = LED_N_OFF_H(START_LANE);
+		for(index=0; index<LANE_NOS; index++,reg=LED_N_OFF_H(index))
+			if( (ret = pca9685_reg_write(reg,LED_FULL)) )
+				return ret;
+
+		return 0;
+	}
+	
+	/* Setting for Max. Duty Cycle */
+	if (duty_ns == period_ns) {
+		/* Clear both OFF registers */
+		reg = LED_N_OFF_H(START_LANE);
+		for(index=0; index<LANE_NOS;index++,reg=LED_N_OFF_H(index))
+			if( (ret = pca9685_reg_write(reg,0x0)) )
+				return ret;
+
+		reg = LED_N_OFF_H(START_LANE);
+		for(index=0; index<LANE_NOS;index++,reg=LED_N_OFF_H(index))
+			if( (ret = pca9685_reg_write(reg,0x0)) )
+				return ret;
+
+		/* Set the full ON bit */
+		reg = LED_N_ON_H(START_LANE);
+		for(index=0; index<LANE_NOS;index++,reg=LED_N_OFF_H(index))
+			if( (ret = pca9685_reg_write(reg,LED_FULL)) )
+				return ret;
+
+		return 0;
+	}
+
+	/* Setting for requested duty cycle */
+	duty = PCA9685_COUNTER_RANGE * (unsigned long long)duty_ns;
+	duty = DIV_ROUND_UP_ULL(duty, period_ns);
+
+	reg = LED_N_OFF_L(START_LANE);
+	for(index=0; index<LANE_NOS; index++,reg=LED_N_OFF_L(index))
+		if( (ret = pca9685_reg_write(reg,(int)duty & 0xff)) )
+			return ret;
+
+	reg = LED_N_OFF_H(START_LANE);
+	for(index=0; index<LANE_NOS; index++,reg=LED_N_OFF_H(index))
+		if( (ret = pca9685_reg_write(reg,((int)duty >> 8) & 0xf)) )
+			return ret;
+
+	/* Clear the full on registers, otherwise the set OFF time has no effect */
+	reg = LED_N_ON_H(START_LANE);
+	for(index=0; index<LANE_NOS; index++,reg=LED_N_ON_H(index))
+		if( (ret = pca9685_reg_write(reg,0)) )
+			return ret;
+
+	reg = LED_N_ON_L(START_LANE);
+	for(index=0; index<LANE_NOS; index++,reg=LED_N_ON_L(index))
+		if( (ret = pca9685_reg_write(reg,0)) )
+			return ret;
+
+	return 0;
+	
+}
+
+/** @brief pca9685 configuration function
+ *  This function is used to set the frequency and duty cycle of pca9685 pwm IC
+ *  @return returns 0 if successful
+ */
+static int pca9685_config(struct i2c_client *client, int duty_ns, int period_ns,uint8_t current_calib_mode){
+
+	int err;
+	int prescale;
+
+	prescale = DIV_ROUND_CLOSEST(PCA9685_OSC_CLOCK_MHZ * period_ns,
+			PCA9685_COUNTER_RANGE * 1000) - 1;
+	err = pca9685_set_frequency(prescale);
+	if(err){
+		dev_err(&client->dev, "Failed to set the baud rate! %d\n",err);
+		return err;
+	}
+	err = pca9685_set_duty_cycle(duty_ns,period_ns);
+	if(err){
+		dev_err(&client->dev, "Failed to set the duty cycle! %d\n",err);
+		return err;
+	}
+	calibration_init(MAX_PWM_MODE - current_calib_mode);
+
+	return 0;
+}
+
+/** @brief pca9685 initialization function
+ *  This function is used to set the register required for setting up pca9685 pwm IC
+ *  @return returns 0 if successful
+ */
+int pca9685_init(struct i2c_client *client, uint8_t fps){
+
+	u8 mode2 = 0,current_calib_mode;
+	int duty_ns = -1, period_ns = -1;
+	int ret = 0;
+	static uint8_t current_fps = 28;
+
+	pca9685_adapter = i2c_get_adapter(ECON_MULTILANE_BASEBOARD_BUS_ADDRESS);
+	printk("pca9685 bus address : %d\n",(int)pca9685_adapter->nr);
+
+	if(fps != current_fps){
+		pca9685_init_flag = 0;
+		current_fps = fps;
+	}
+	if(pca9685_init_flag){
+		printk("%s pca9685 IC already initialized..\n",__func__);
+		return 0;
+	}
+
+	ret = pca9685_reg_read(PCA9685_MODE2,&mode2);
+	if(ret){
+		dev_err(&client->dev, "Failed to Read from mode2 register of pca9685driver %d\n",ret);
+		return ret;
+	}
+
+	if (device_property_read_bool(&client->dev, "pwm-invert"))
+		mode2 |= MODE2_INVRT;
+	else
+		mode2 &= ~MODE2_INVRT;
+
+	if (device_property_read_bool(&client->dev, "pwm-open-drain"))
+		mode2 &= ~MODE2_OUTDRV;
+	else
+		mode2 |= MODE2_OUTDRV;
+
+	ret = pca9685_reg_write(PCA9685_MODE2,mode2);
+	if(ret){
+		dev_err(&client->dev, "Failed to write on mode2 register of pca9685 driver %d\n",ret);
+		return ret;
+	}
+
+	/* clear all "full off" bits */
+	if( pca9685_reg_write( PCA9685_ALL_LED_OFF_L, 0) ||  pca9685_reg_write(PCA9685_ALL_LED_OFF_H, 0) )
+		return -EINVAL;
+
+	if(fps != SECONDARY_FPS){
+		//Get duty cycle, time period and calibration pin from dtb
+		ret = device_property_read_u32(&client->dev, "pwm-duty_ns", &duty_ns);
+		if(ret){
+			dev_err(&client->dev, "Failed to Read register map with error %d\n",ret);
+			return ret;
+		}
+		ret = device_property_read_u32(&client->dev, "pwm-period_ns", &period_ns);
+		if(ret){
+			dev_err(&client->dev, "Failed to Read register map with error %d\n",ret);
+			return ret;
+		}
+		current_calib_mode = 2;
+	}
+	else{/*Values for Secondary fps calibration */
+		duty_ns = 0x1F191B7;/* 10% duty_cycle*/
+		period_ns = 0x228DACC;
+		current_calib_mode = 1;
+	}
+	printk("pwm period=%d\n",period_ns);
+	pwm_calib_gpio = of_get_named_gpio(client->dev.of_node, "pwm-calib-gpio", 0);
+	if(pwm_calib_gpio<0){
+		dev_err(&client->dev, "Failed to Read register map with error %d\n",ret);
+		return ret;
+	}
+
+	//Configure duty cycle and frequency
+	ret = pca9685_config(client,duty_ns,period_ns,current_calib_mode);
+	if(ret){
+		dev_err(&client->dev, "Failed to Configure the pca9685 chip %d\n",ret);
+		return ret;
+	}
+
+	pca9685_init_flag = 1;
+	printk("%s pca9685 initialized successfully!\n",__func__);
+	return 0;
+}
+
diff --git a/NileCAM21_CUOAGX/pca9685.h b/NileCAM21_CUOAGX/pca9685.h
new file mode 100644
index 0000000..a028026
--- /dev/null
+++ b/NileCAM21_CUOAGX/pca9685.h
@@ -0,0 +1,116 @@
+/*
+ * pca9685.h - pca9685 driver IC headers 
+ *
+ * Copyright (c) 2015-2016, e-con Systems, All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifdef PCA9685_FLAG
+
+#include <linux/i2c.h>
+#include <linux/delay.h>
+#include <linux/of_gpio.h>
+#include <linux/interrupt.h>            
+#include <linux/kthread.h>
+#include <linux/efi.h>
+
+#define PCA9685_MODE1		0x00
+#define PCA9685_MODE2		0x01
+#define PCA9685_LEDX_ON_L	0x06
+#define PCA9685_LEDX_ON_H	0x07
+#define PCA9685_LEDX_OFF_L	0x08
+#define PCA9685_LEDX_OFF_H	0x09
+#define PCA9685_ALL_LED_OFF_L	0xFC
+#define PCA9685_ALL_LED_OFF_H	0xFD
+#define PCA9685_PRESCALE	0xFE
+
+#define PCA9685_PRESCALE_MIN	0x03	/* => max. frequency of 1526 Hz */
+#define PCA9685_PRESCALE_MAX	0xFF	/* => min. frequency of 24 Hz */
+
+#define PCA9685_COUNTER_RANGE	4096
+#define PCA9685_OSC_CLOCK_MHZ	25	/* Internal oscillator with 25 MHz */
+
+#define PCA9685_NUMREGS		0xFF
+
+#define LED_FULL		(1 << 4)
+#define MODE1_RESTART		(1 << 7)
+#define MODE1_SLEEP		(1 << 4)
+#define MODE2_INVRT		(1 << 4)
+#define MODE2_OUTDRV		(1 << 2)
+#define CLEAR	0
+
+#define LED_N_ON_H(N)	(PCA9685_LEDX_ON_H + (4 * (N)))
+#define LED_N_ON_L(N)	(PCA9685_LEDX_ON_L + (4 * (N)))
+#define LED_N_OFF_H(N)	(PCA9685_LEDX_OFF_H + (4 * (N)))
+#define LED_N_OFF_L(N)	(PCA9685_LEDX_OFF_L + (4 * (N)))
+
+
+#define MAX_PWM_MODE 2	// Maximum PWM modes supported
+#define PCA9685_ADDRESS 0x61 //pca9685 slave address
+#define LANE_NOS 7  //Mention number of cameras connected here
+#define START_LANE 0
+#define I2C_M_WR 0x00
+#define ECON_MULTILANE_BASEBOARD_BUS_ADDRESS 33
+#define SECONDARY_FPS 28
+static irq_handler_t calibration_irq_handler(unsigned int irq, void *dev_id, struct pt_regs *regs);
+
+int last_calib_val = 2;
+static int thread_calibrate_pwm(void *);
+static int thread_finish_pwm_calib(void *);
+
+static int pca9685_reg_read(u8,u8*);
+static int pca9685_reg_write(u8,u8);
+static int pca9685_reg_write_bits(u8,u8,u8);
+static int pca9685_set_frequency(int);
+static int pca9685_set_duty_cycle(int,int);
+static int pca9685_config(struct i2c_client*,int,int,uint8_t);
+
+
+static struct task_struct *st_calib_start;
+static struct task_struct *st_calib_stop;
+struct i2c_adapter *pca9685_adapter;
+
+struct timespec64 ts;
+struct regmap *g_regmap;
+
+static unsigned int pwm_calib_gpio = -1; // Gpio for PWM calibration got from DTB file
+static unsigned int irq_number;
+
+static int prescaler_val;
+static int pca9685_init_flag = 0;
+
+static bool irq_status = true;
+
+struct psc_mode {
+	int pwm_low_limit;
+	int pwm_high_limit;
+	int psc_start;
+};
+
+static struct psc_mode pre_limit[MAX_PWM_MODE] = {
+	/* This below exposure time period value setting is for ar1335 sensor */
+	//{340,342,0xD0},	// 29.49Hz to 29.67Hz
+	{337,340,0xCE},/*29.4 TO 29.6*//*FHD*/
+	{360,362,0xDB},/*27.5 TO 27.7*//*FHD_HDR*/
+};
+static int psc_lookup[MAX_PWM_MODE] = {0};
+static int pwm_mode;
+
+#endif
+
+int pca9685_init(struct i2c_client*,uint8_t);
+int calibration_init(int);
+void calibration_exit(void);
+
+
diff --git a/NileCAM21_CUOAGX/serdes.c b/NileCAM21_CUOAGX/serdes.c
new file mode 100644
index 0000000..5ff8333
--- /dev/null
+++ b/NileCAM21_CUOAGX/serdes.c
@@ -0,0 +1,147 @@
+/*
+ * serdes.c - GMSL driver
+ * Copyright (c) 2017-2018, e-con Systems.  All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms and conditions of the GNU General Public License,
+ * version 2, as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "ar0233_common.h"
+//#include "serdes.h"
+
+int serdes_write_i2c(struct i2c_client *client, u16 sladdr,  u8 * val, u32 count)
+{
+	int ret;
+
+	struct i2c_msg msg = {
+		.addr = sladdr,
+		.flags = 0,
+		.len = count,
+		.buf = val,
+	};
+
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0) {
+		dev_err(&client->dev, "Failed writing register ret = %d!\n",
+			ret);
+		return ret;
+	}
+	return 0;
+}
+
+int serdes_read_i2c(struct i2c_client *client, u16 sladdr, u8 * val, u32 count)
+{
+	int ret;
+	struct i2c_msg msg = {
+		.addr = sladdr,
+		.flags = 0,
+		.buf = val,
+	};
+
+	msg.flags = I2C_M_RD;
+	msg.len = count;
+	ret = i2c_transfer(client->adapter, &msg, 1);
+	if (ret < 0)
+		goto err;
+
+	return 0;
+
+ err:
+	dev_err(&client->dev, "Failed reading register ret = %d!\n", ret);
+	return ret;
+}
+
+s32 serdes_read_8b_reg(struct i2c_client *client, u16 sladdr, u8 reg, u8 * val)
+{
+	u8 bcount = 1;
+	u8 au8RegBuf[1] = { 0 };
+	u8 au8RdVal[1] = { 0 };
+
+	au8RegBuf[0] = reg;
+
+	if (serdes_write_i2c(client, sladdr, au8RegBuf, bcount) < 0) {
+		dev_err(&client->dev,"%s:write reg error:reg=0x%x\n", __func__, reg);
+		return -EIO;
+	}
+
+	if (serdes_read_i2c(client,sladdr, au8RdVal, bcount) < 0) {
+		dev_err(&client->dev,"%s:read reg error:reg=0x%x\n", __func__, reg);
+		return -EIO;
+	}
+
+	*val = au8RdVal[0];
+
+	return 0;
+}
+
+s32 serdes_write_8b_reg(struct i2c_client *client, u16 sladdr, u8 reg, u8 val)
+{
+	u8 bcount = 2;
+	u8 au8Buf[2] = { 0 };
+
+	au8Buf[0] = reg;
+	au8Buf[1] = val;
+
+	if (serdes_write_i2c(client, sladdr,au8Buf, bcount) < 0) {
+		dev_err(&client->dev,
+			"%s:write reg error: reg = 0x%x,val = 0x%x\n", __func__,
+			reg, val);
+		return -EIO;
+	}
+
+	return 0;
+}
+s32 serdes_read_16b_reg(struct i2c_client *client, u16 sladdr, u16 reg, u8 * val)
+{
+	u8 bcount;
+	u8 au8RegBuf[2] = { 0 };
+	u8 au8RdVal[1] = { 0 };
+
+	au8RegBuf[0] = reg >> 8;
+	au8RegBuf[1] = reg & 0xff;
+	bcount = 2;
+
+	if (serdes_write_i2c(client, sladdr, au8RegBuf, bcount) < 0) {
+		dev_err(&client->dev,"%s:write reg error:reg=0x%x\n", __func__, reg);
+		return -EIO;
+	}
+
+	bcount = 1;
+	if (serdes_read_i2c(client,sladdr, au8RdVal, bcount) < 0) {
+		dev_err(&client->dev,"%s:read reg error:reg=0x%x\n", __func__, reg);
+		return -EIO;
+	}
+
+	*val = au8RdVal[0];
+
+	return 0;
+}
+
+s32 serdes_write_16b_reg(struct i2c_client *client, u16 sladdr, u16 reg, u8 val)
+{
+	u8 bcount = 3;
+	u8 au8Buf[3] = { 0 };
+
+	au8Buf[0] = reg >> 8;
+	au8Buf[1] = reg & 0xff;
+	au8Buf[2] = val;
+
+	if (serdes_write_i2c(client, sladdr,au8Buf, bcount) < 0) {
+		dev_err(&client->dev,
+			"%s:write reg error: reg = 0x%x,val = 0x%x\n", __func__,
+			reg, val);
+		return -EIO;
+	}
+
+	return 0;
+}
+
diff --git a/NileCAM21_CUOAGX/serdes.h b/NileCAM21_CUOAGX/serdes.h
new file mode 100644
index 0000000..79accaa
--- /dev/null
+++ b/NileCAM21_CUOAGX/serdes.h
@@ -0,0 +1,349 @@
+/*
+ * Copyright (C) 2018 e-con Systems Pvt Ltd, Inc. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __SERDES_H
+#define __SERDES_H
+
+#define SER1_ADDR 0x40
+#define SER2_ADDR 0x41
+#define DES_ADDR 0x48
+
+typedef struct serdes_parse{
+uint16_t reg;
+uint8_t val;
+}SERDES_PARSE;
+
+
+SERDES_PARSE SER1_CONF[] = {
+
+        {0x0010, 0x21},
+	{0xFFFF, 0x00},
+        {0x0102, 0x0C},
+        {0x010A, 0x0C},
+        {0x0112, 0x0C},
+        {0x011A, 0x0C},
+        {0x0330, 0x00},
+        {0x0331, 0x33},
+        {0x0332, 0xEE},
+        {0x0333, 0xE4},
+        {0x0334, 0x00},
+        {0x0335, 0x00},
+        {0x0311, 0x40},
+        {0x0308, 0x74},
+        {0x0002, 0x43},
+        {0x0053, 0x10},
+        {0x0057, 0x12},
+        {0x005B, 0x11},
+        {0x005F, 0x13},
+        {0x0100, 0x68},
+        {0x0110, 0x68},
+        {0x0101, 0x58},
+        {0x0111, 0x58},
+        {0x0312, 0x00},
+        {0x0313, 0x00},
+        {0x0314, 0x00},
+        {0x0315, 0x00},
+        {0x0316, 0x00},
+        {0x0317, 0x00},
+        {0x0318, 0x00},
+        {0x0319, 0x00},
+        {0x031A, 0x00},
+        {0x031B, 0x00},
+        {0x031C, 0x18},
+        {0x031D, 0x18},
+        {0x031E, 0x18},
+        {0x031F, 0x18},
+
+};	
+SERDES_PARSE SER2_CONF[] = {
+
+        {0x0010, 0x21},
+	{0xFFFF, 0x00},
+        {0x0102, 0x0C},
+        {0x010A, 0x0C},
+        {0x0112, 0x0C},
+        {0x011A, 0x0C},
+        {0x0330, 0x00},
+        {0x0331, 0x33},
+        {0x0332, 0xEE},
+        {0x0333, 0xE4},
+        {0x0334, 0x00},
+        {0x0335, 0x00},
+        {0x0311, 0x40},
+        {0x0308, 0x74},
+        {0x0002, 0x43},
+        {0x0053, 0x13},
+        {0x0057, 0x10},
+        {0x005B, 0x12},
+        {0x005F, 0x11},
+        {0x0100, 0x68},
+        {0x0110, 0x68},
+        {0x0101, 0x58},
+        {0x0111, 0x58},
+        {0x0312, 0x00},
+        {0x0313, 0x00},
+        {0x0314, 0x00},
+        {0x0315, 0x00},
+        {0x0316, 0x00},
+        {0x0317, 0x00},
+        {0x0318, 0x00},
+        {0x0319, 0x00},
+        {0x031A, 0x00},
+        {0x031B, 0x00},
+        {0x031C, 0x18},
+        {0x031D, 0x18},
+        {0x031E, 0x18},
+        {0x031F, 0x18},
+
+};
+
+SERDES_PARSE DSER_CONF[] = {
+       
+       	{0x0003, 0xD0},
+	{0x0005, 0x80},
+        {0x0320, 0x2B},
+        {0x0323, 0x2B},
+        {0x0100, 0x23},
+        {0x0112, 0x23},
+        {0x0124, 0x23},
+        {0x0136, 0x23},
+        {0x0330, 0x04},
+        {0x0332, 0xF0},
+        {0x0333, 0x4E},
+        {0x0334, 0xE4},
+        {0x040A, 0x10},
+        {0x044A, 0x50},
+        {0x048A, 0x50},
+        {0x04CA, 0x10},
+        {0x0326, 0x2B},
+        {0x0050, 0x00},
+        {0x0051, 0x01},
+        {0x0052, 0x02},
+        {0x0053, 0x03},
+        {0x0335, 0x00},
+        {0x0336, 0x00},
+        {0x0339, 0x00},
+        {0x033A, 0x02},
+        {0x033B, 0x00},
+        {0x033C, 0x02},
+        {0x0433, 0x00},
+        {0x0473, 0x00},
+        {0x04B3, 0x00},
+        {0x04F3, 0x00},
+        {0x040B, 0x00},
+        {0x040C, 0x00},
+        {0x044B, 0x00},
+        {0x044C, 0x00},
+        {0x048B, 0x00},
+        {0x048C, 0x00},
+        {0x04CB, 0x00},
+        {0x04CC, 0x00},
+        {0x042D, 0x00},
+        {0x042E, 0x00},
+        {0x042F, 0x00},
+        {0x0430, 0x00},
+        {0x046D, 0x00},
+        {0x046E, 0x00},
+        {0x046F, 0x00},
+        {0x0470, 0x00},
+        {0x04AD, 0x00},
+        {0x04AE, 0x00},
+        {0x04AF, 0x00},
+        {0x04B0, 0x00},
+        {0x04ED, 0x00},
+        {0x04EE, 0x00},
+        {0x04EF, 0x00},
+        {0x04F0, 0x00},
+        {0x040D, 0x00},
+        {0x040E, 0x00},
+        {0x040F, 0x00},
+        {0x0410, 0x00},
+        {0x0411, 0x00},
+        {0x0412, 0x00},
+        {0x044D, 0x00},
+        {0x044E, 0x00},
+        {0x044F, 0x00},
+        {0x0450, 0x00},
+        {0x0451, 0x00},
+        {0x0452, 0x00},
+        {0x048D, 0x00},
+        {0x048E, 0x00},
+        {0x048F, 0x00},
+        {0x0491, 0x00},
+        {0x0491, 0x00},
+        {0x0492, 0x00},
+        {0x04CD, 0x00},
+        {0x04CE, 0x00},
+        {0x04CF, 0x00},
+        {0x04D0, 0x00},
+        {0x04D1, 0x00},
+        {0x04D2, 0x00},
+        {0x0309, 0x00},
+        {0x030B, 0x00},
+        {0x030D, 0x00},
+        {0x030F, 0x00},
+        {0x0413, 0x00},
+        {0x0414, 0x00},
+        {0x0415, 0x00},
+        {0x0416, 0x00},
+        {0x0417, 0x00},
+        {0x0418, 0x00},
+        {0x0419, 0x00},
+        {0x041A, 0x00},
+        {0x041B, 0x00},
+        {0x041C, 0x00},
+        {0x041D, 0x00},
+        {0x041E, 0x00},
+        {0x041F, 0x00},
+        {0x0420, 0x00},
+        {0x0421, 0x00},
+        {0x0422, 0x00},
+        {0x0423, 0x00},
+        {0x0424, 0x00},
+        {0x0425, 0x00},
+        {0x0426, 0x00},
+        {0x0427, 0x00},
+        {0x0428, 0x00},
+        {0x0429, 0x00},
+        {0x042A, 0x00},
+        {0x042B, 0x00},
+        {0x042C, 0x00},
+        {0x0453, 0x00},
+        {0x0454, 0x00},
+        {0x0455, 0x00},
+        {0x0456, 0x00},
+        {0x0457, 0x00},
+        {0x0458, 0x00},
+        {0x0459, 0x00},
+        {0x045A, 0x00},
+        {0x045B, 0x00},
+        {0x045C, 0x00},
+        {0x045D, 0x00},
+        {0x045E, 0x00},
+        {0x045F, 0x00},
+        {0x0460, 0x00},
+        {0x0461, 0x00},
+        {0x0462, 0x00},
+        {0x0463, 0x00},
+        {0x0464, 0x00},
+        {0x0465, 0x00},
+        {0x0466, 0x00},
+        {0x0467, 0x00},
+        {0x0468, 0x00},
+        {0x0469, 0x00},
+        {0x046A, 0x00},
+        {0x046B, 0x00},
+        {0x046C, 0x00},
+        {0x0493, 0x00},
+        {0x0494, 0x00},
+        {0x0495, 0x00},
+        {0x0496, 0x00},
+        {0x0497, 0x00},
+        {0x0498, 0x00},
+        {0x0499, 0x00},
+        {0x049A, 0x00},
+        {0x049B, 0x00},
+        {0x049C, 0x00},
+        {0x049D, 0x00},
+        {0x049E, 0x00},
+        {0x049F, 0x00},
+        {0x04A0, 0x00},
+        {0x04A1, 0x00},
+        {0x04A2, 0x00},
+        {0x04A3, 0x00},
+        {0x04A4, 0x00},
+        {0x04A5, 0x00},
+        {0x04A6, 0x00},
+        {0x04A7, 0x00},
+        {0x04A8, 0x00},
+        {0x04A9, 0x00},
+        {0x04AA, 0x00},
+        {0x04AB, 0x00},
+        {0x04AC, 0x00},
+        {0x04D3, 0x00},
+        {0x04D4, 0x00},
+        {0x04D5, 0x00},
+        {0x04D6, 0x00},
+        {0x04D7, 0x00},
+        {0x04D8, 0x00},
+        {0x04D9, 0x00},
+        {0x04DA, 0x00},
+        {0x04DB, 0x00},
+        {0x04DC, 0x00},
+        {0x04DD, 0x00},
+        {0x04DE, 0x00},
+        {0x04DF, 0x00},
+        {0x04E0, 0x00},
+        {0x04E1, 0x00},
+        {0x04E2, 0x00},
+        {0x04E3, 0x00},
+        {0x04E4, 0x00},
+        {0x04F5, 0x00},
+        {0x04E6, 0x00},
+        {0x04E7, 0x00},
+        {0x04E8, 0x00},
+        {0x04E9, 0x00},
+        {0x04EA, 0x00},
+        {0x04EB, 0x00},
+        {0x04EC, 0x00},
+        {0x0313, 0x02},
+        {0x0314, 0x00},
+        {0x0315, 0x00},
+        {0x0316, 0x00},
+        {0x0317, 0x00},
+        {0x0318, 0x00},
+        {0x0319, 0x00},
+        {0x031A, 0x00},
+        {0x031B, 0x00},
+        {0x031C, 0x00},
+        {0x031D, 0x2B},
+        {0x031E, 0x00},
+        {0x031F, 0x00},
+        {0x01D9, 0x19},
+        {0x01F9, 0x19},
+        {0x0219, 0x19},
+        {0x0239, 0x19},
+        {0x02C5, 0xC3},
+};
+
+SERDES_PARSE SER1_I2C_CONF[] = {
+	{0x0042, 0x86},
+	{0x0043, 0x84},
+	{0x0044, 0x1A},
+	{0x0045, 0x1C},
+};
+SERDES_PARSE SER2_I2C_CONF[] = {
+	{0x0042, 0x88},
+	{0x0043, 0x84},
+	{0x0044, 0x1E},
+	{0x0045, 0x1C},
+};
+
+SERDES_PARSE SER2_PKT_HEADER_CHANGE[] = {
+	{0x007B, 0x12},
+	{0x0083, 0x12},
+	{0x008B, 0x12},
+	{0x0093, 0x12},
+	{0x00A3, 0x12},
+	{0x00AB, 0x12},
+};
+
+int serdes_write_i2c(struct i2c_client *client, u16 sladdr,  u8 * val, u32 count);
+int serdes_read_i2c(struct i2c_client *client, u16 sladdr, u8 * val, u32 count);
+s32 serdes_read_8b_reg(struct i2c_client *client, u16 sladdr, u8 reg, u8 * val);
+s32 serdes_write_8b_reg(struct i2c_client *client, u16 sladdr, u8 reg, u8 val);
+s32 serdes_read_16b_reg(struct i2c_client *client, u16 sladdr, u16 reg, u8 * val);
+s32 serdes_write_16b_reg(struct i2c_client *client, u16 sladdr, u16 reg, u8 val);
+static s32 serdes_parse_regdata(struct i2c_client *client, SERDES_PARSE *,u32 ,u8);
+#endif /* __SERDES_H */
diff --git a/NileCAM21_CUOAGX/tb.h b/NileCAM21_CUOAGX/tb.h
new file mode 100644
index 0000000..8b48d32
--- /dev/null
+++ b/NileCAM21_CUOAGX/tb.h
@@ -0,0 +1,84 @@
+/*
+ * Copyright (C) 2018 e-con Systems Pvt Ltd, Inc. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef __TB_H
+#define __TB_H
+
+/* TB Register Sets */
+#define SIOA_TB_ID  0x0D
+#define SIOB_TB_ID  0x0F
+#define DEF_TB_ID   0x0E
+
+typedef struct _tb_reg {
+	u16 reg;
+	u16 val;
+} TB_REG;
+
+
+
+TB_REG MIPI_TX_BASE[] = {
+	{0x0016, 0x306d},
+	{0x0018, 0x0603},	
+	{0xFFFF, 0x03E8},	
+	{0x0018, 0x0613},	
+	{0x0006, 0x0000},	
+	{0x0008, 0x0060},
+	{0x0022, 0x0F00},	
+
+	{0x0140, 0x0000},
+	{0x0142, 0x0000},
+	{0x0144, 0x0000},
+	{0x0146, 0x0000},
+	{0x0148, 0x0000},
+	{0x014A, 0x0000},
+	{0x014C, 0x0000},
+	{0x014E, 0x0000},
+	{0x0150, 0x0000},
+	{0x0152, 0x0000},
+	{0x0210, 0x0BB8},	
+	{0x0212, 0x0000},
+	{0x0214, 0x0002},
+	{0x0216, 0x0000},
+	{0x0218, 0x1001},
+	{0x021A, 0x0000},
+	{0x0220, 0x0002},
+	{0x0222, 0x0000},
+	{0x0224, 0x4E20},
+	{0x0226, 0x0000},
+	{0x022C, 0x0000},
+	{0x022E, 0x0000},
+	{0x0230, 0x0005},
+	{0x0232, 0x0000},
+	{0x0234, 0x001F},
+	{0x0236, 0x0000},
+	{0x0238, 0x0001},	
+	{0x023A, 0x0000},
+	{0x0204, 0x0001},
+	{0x0206, 0x0000},
+
+	{0x0518, 0x0001},
+	{0x051A, 0x0000},
+	{0x0500, 0x8086},
+	{0x0502, 0xA300},
+	{0x0004, 0x0143},//0043
+
+};
+
+static int tb_write_i2c(struct i2c_client *client, u8 * val, u32 count,u8);
+static int tb_read_i2c(struct i2c_client *client, u8 * val, u32 count,u8);
+static s32 tb_read_16b_reg(struct i2c_client *client, u16 reg, u16 * val,u8);
+static s32 tb_write_16b_reg(struct i2c_client *client, u16 reg, u16 val,u8);
+static s32 tb_parse_regdata(struct i2c_client *client, TB_REG * regdata,
+			    u32 reg_cnt,u8);
+#endif /*__TB_H*/
